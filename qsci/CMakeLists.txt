FIND_PACKAGE(QScintilla REQUIRED)

include_directories( ${QT_INCLUDES} ${QSCINTILLA_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/../ ${CMAKE_CURRENT_SOURCE_DIR}/../qt )

IF(NOT PERL_FOUND)
    FIND_PACKAGE(PERL REQUIRED)
ENDIF(NOT PERL_FOUND)

# for qtguess.pl
set(qt_test_threshold 10)

# macro is defined in qt-copy/src/qbase.pri but couldn't be found by qtguess, so I append it manually
file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/qtdefines "QT_NO_CAST_TO_ASCII\n")

########### next target ###############

add_custom_command(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/smokedata.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_1.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_2.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_3.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_4.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_5.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_6.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_7.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_8.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_9.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_10.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_11.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_12.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_13.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_14.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_15.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_16.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_17.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_18.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_19.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_20.cpp

	COMMAND ${PERL_EXECUTABLE} ARGS ${CMAKE_CURRENT_BINARY_DIR}/qtguess.pl
	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/qtguess.pl

	COMMAND ${PERL_EXECUTABLE} ARGS ${CMAKE_CURRENT_BINARY_DIR}/generate.pl
	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/generate.pl

	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

macro_add_file_dependencies( ${CMAKE_CURRENT_BINARY_DIR}/smokedata.cpp ${CMAKE_CURRENT_BINARY_DIR}/x_1.cpp )

include_directories (${CMAKE_SOURCE_DIR}/smoke ${CMAKE_SOURCE_DIR}/smoke/qsci )

set(smokeqsci_LIB_SRCS ${CMAKE_CURRENT_BINARY_DIR}/smokedata.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_1.cpp 
	${CMAKE_CURRENT_BINARY_DIR}/x_2.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_3.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_4.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_5.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_6.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_7.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_8.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_9.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_10.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_11.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_12.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_13.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_14.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_15.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_16.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_17.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_18.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_19.cpp
	${CMAKE_CURRENT_BINARY_DIR}/x_20.cpp)

IF(CMAKE_CXX_FLAGS MATCHES "-fvisibility")
    ADD_DEFINITIONS(-DGCC_VISIBILITY)
ENDIF(CMAKE_CXX_FLAGS MATCHES "-fvisibility")
add_library(smokeqsci SHARED ${smokeqsci_LIB_SRCS})

target_link_libraries(smokeqsci smokeqt ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${QSCINTILLA_LIBRARIES})

set_target_properties(smokeqsci PROPERTIES VERSION 2.0.0 SOVERSION 2 )

install(TARGETS smokeqsci DESTINATION ${CMAKE_INSTALL_PREFIX}/lib )
install(FILES qsci_smoke.h DESTINATION include/smoke/qsci)

FOREACH(incname ${QT_INCLUDES} ${QSCINTILLA_INCLUDE_DIR})
    SET(qt_incs "'${incname}', ${qt_incs}")
ENDFOREACH(incname)

configure_file(qtguess.pl.cmake ${CMAKE_CURRENT_BINARY_DIR}/qtguess.pl @ONLY)
configure_file(generate.pl.cmake ${CMAKE_CURRENT_BINARY_DIR}/generate.pl @ONLY)
