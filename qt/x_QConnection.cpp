//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qconnection.h>

class x_QConnection : public QConnection {
public:
    static void x_0(Smoke::Stack x) {
	// QConnection(const QObject*, int, const char*, int)
	x_QConnection* xret = new x_QConnection((const QObject*)x[1].s_class,(int)x[2].s_int,(const char*)x[3].s_class,(int)x[4].s_int);
	x[0].s_class = (void*)xret;
    }
    x_QConnection(const QObject* x1, int x2, const char* x3, int x4) : QConnection(x1, x2, x3, x4) {
    }
    void x_1(Smoke::Stack x) const {
	// isConnected()
	bool xret = this->QConnection::isConnected();
	x[0].s_bool = (bool)xret;
    }
    void x_2(Smoke::Stack x) const {
	// object()
	QObject* xret = this->QConnection::object();
	x[0].s_class = (void*)xret;
    }
    void x_3(Smoke::Stack x) const {
	// member()
	int xret = this->QConnection::member();
	x[0].s_int = (int)xret;
    }
    void x_4(Smoke::Stack x) const {
	// memberName()
	const char* xret = this->QConnection::memberName();
	x[0].s_class = (void*)xret;
    }
    void x_5(Smoke::Stack x) const {
	// memberType()
	int xret = this->QConnection::memberType();
	x[0].s_int = (int)xret;
    }
    void x_6(Smoke::Stack x) const {
	// numArgs()
	int xret = this->QConnection::numArgs();
	x[0].s_int = (int)xret;
    }
    ~x_QConnection() {}
};
void xcall_QConnection(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QConnection *xself = (x_QConnection*)obj;
    switch(xi) {
	case 0: x_QConnection::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: delete (QConnection*)xself;	break;
    }
}
