//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qstring.h>
#include <qxml.h>

class x_QXmlDTDHandler {
private:
    QXmlDTDHandler *xthis;
public:
    x_QXmlDTDHandler(void *x) : xthis((QXmlDTDHandler*)x) {}
    void x_0(xargs *x) {
	// notationDecl(const QString&, const QString&, const QString&)
	bool xret = xthis->QXmlDTDHandler::notationDecl(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp,*(const QString *)x[3].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_1(xargs *x) {
	// unparsedEntityDecl(const QString&, const QString&, const QString&, const QString&)
	bool xret = xthis->QXmlDTDHandler::unparsedEntityDecl(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp,*(const QString *)x[3].x_voidp,*(const QString *)x[4].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_2(xargs *x) {
	// errorString()
	QString xret = xthis->QXmlDTDHandler::errorString();
	x[0].x_voidp = (void*)new QString(xret);
    }
    ~x_QXmlDTDHandler() {}
};
void xcall_QXmlDTDHandler(xargs *x, void *s, int xi) {
    x_QXmlDTDHandler xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: xself->x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
    }
}
