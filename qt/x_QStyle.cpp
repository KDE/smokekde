//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qpoint.h>
#include <qvariant.h>
#include <qpalette.h>
#include <qstring.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>
#include <qsize.h>

class x_QStyle : public QStyle {
public:
    static void x_0(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ButtonCommand;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ButtonDefault;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ButtonBevel;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ButtonTool;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ButtonDropDown;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_FocusRect;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ArrowUp;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ArrowDown;
    }
    static void x_8(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ArrowRight;
    }
    static void x_9(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ArrowLeft;
    }
    static void x_10(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_SpinWidgetUp;
    }
    static void x_11(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_SpinWidgetDown;
    }
    static void x_12(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_SpinWidgetPlus;
    }
    static void x_13(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_SpinWidgetMinus;
    }
    static void x_14(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_Indicator;
    }
    static void x_15(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_IndicatorMask;
    }
    static void x_16(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ExclusiveIndicator;
    }
    static void x_17(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ExclusiveIndicatorMask;
    }
    static void x_18(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_DockWindowHandle;
    }
    static void x_19(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_DockWindowSeparator;
    }
    static void x_20(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_DockWindowResizeHandle;
    }
    static void x_21(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_Splitter;
    }
    static void x_22(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_Panel;
    }
    static void x_23(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PanelPopup;
    }
    static void x_24(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PanelMenuBar;
    }
    static void x_25(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PanelDockWindow;
    }
    static void x_26(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_TabBarBase;
    }
    static void x_27(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_HeaderSection;
    }
    static void x_28(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_HeaderArrow;
    }
    static void x_29(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_StatusBarSection;
    }
    static void x_30(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_GroupBoxFrame;
    }
    static void x_31(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_Separator;
    }
    static void x_32(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_SizeGrip;
    }
    static void x_33(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_CheckMark;
    }
    static void x_34(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarAddLine;
    }
    static void x_35(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarSubLine;
    }
    static void x_36(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarAddPage;
    }
    static void x_37(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarSubPage;
    }
    static void x_38(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarSlider;
    }
    static void x_39(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarFirst;
    }
    static void x_40(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ScrollBarLast;
    }
    static void x_41(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_ProgressBarChunk;
    }
    static void x_42(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PanelLineEdit;
    }
    static void x_43(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PanelTabWidget;
    }
    static void x_44(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_WindowFrame;
    }
    static void x_45(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_PopupMenuScroller;
    }
    static void x_46(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PE_CustomBase;
    }
    static void x_47(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Default;
    }
    static void x_48(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Enabled;
    }
    static void x_49(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Raised;
    }
    static void x_50(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Sunken;
    }
    static void x_51(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Off;
    }
    static void x_52(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_NoChange;
    }
    static void x_53(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_On;
    }
    static void x_54(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Down;
    }
    static void x_55(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Horizontal;
    }
    static void x_56(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_HasFocus;
    }
    static void x_57(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Top;
    }
    static void x_58(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Bottom;
    }
    static void x_59(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_FocusAtBorder;
    }
    static void x_60(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_AutoRaise;
    }
    static void x_61(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_MouseOver;
    }
    static void x_62(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Up;
    }
    static void x_63(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Selected;
    }
    static void x_64(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_Active;
    }
    static void x_65(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::Style_ButtonDefault;
    }
    static void x_66(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_PushButton;
    }
    static void x_67(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_PushButtonLabel;
    }
    static void x_68(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_CheckBox;
    }
    static void x_69(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_CheckBoxLabel;
    }
    static void x_70(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_RadioButton;
    }
    static void x_71(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_RadioButtonLabel;
    }
    static void x_72(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_TabBarTab;
    }
    static void x_73(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_TabBarLabel;
    }
    static void x_74(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_ProgressBarGroove;
    }
    static void x_75(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_ProgressBarContents;
    }
    static void x_76(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_ProgressBarLabel;
    }
    static void x_77(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_PopupMenuItem;
    }
    static void x_78(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_MenuBarItem;
    }
    static void x_79(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_ToolButtonLabel;
    }
    static void x_80(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CE_CustomBase;
    }
    static void x_81(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_PushButtonContents;
    }
    static void x_82(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_PushButtonFocusRect;
    }
    static void x_83(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_CheckBoxIndicator;
    }
    static void x_84(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_CheckBoxContents;
    }
    static void x_85(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_CheckBoxFocusRect;
    }
    static void x_86(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_RadioButtonIndicator;
    }
    static void x_87(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_RadioButtonContents;
    }
    static void x_88(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_RadioButtonFocusRect;
    }
    static void x_89(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_ComboBoxFocusRect;
    }
    static void x_90(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_SliderFocusRect;
    }
    static void x_91(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_DockWindowHandleRect;
    }
    static void x_92(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_ProgressBarGroove;
    }
    static void x_93(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_ProgressBarContents;
    }
    static void x_94(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_ProgressBarLabel;
    }
    static void x_95(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_ToolButtonContents;
    }
    static void x_96(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SR_CustomBase;
    }
    static void x_97(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_SpinWidget;
    }
    static void x_98(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_ComboBox;
    }
    static void x_99(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_ScrollBar;
    }
    static void x_100(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_Slider;
    }
    static void x_101(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_ToolButton;
    }
    static void x_102(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_TitleBar;
    }
    static void x_103(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_ListView;
    }
    static void x_104(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CC_CustomBase;
    }
    static void x_105(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_None;
    }
    static void x_106(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarAddLine;
    }
    static void x_107(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarSubLine;
    }
    static void x_108(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarAddPage;
    }
    static void x_109(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarSubPage;
    }
    static void x_110(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarFirst;
    }
    static void x_111(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarLast;
    }
    static void x_112(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarSlider;
    }
    static void x_113(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ScrollBarGroove;
    }
    static void x_114(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SpinWidgetUp;
    }
    static void x_115(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SpinWidgetDown;
    }
    static void x_116(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SpinWidgetFrame;
    }
    static void x_117(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SpinWidgetEditField;
    }
    static void x_118(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SpinWidgetButtonField;
    }
    static void x_119(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ComboBoxFrame;
    }
    static void x_120(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ComboBoxEditField;
    }
    static void x_121(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ComboBoxArrow;
    }
    static void x_122(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SliderGroove;
    }
    static void x_123(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SliderHandle;
    }
    static void x_124(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_SliderTickmarks;
    }
    static void x_125(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ToolButton;
    }
    static void x_126(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ToolButtonMenu;
    }
    static void x_127(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarLabel;
    }
    static void x_128(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarSysMenu;
    }
    static void x_129(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarMinButton;
    }
    static void x_130(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarMaxButton;
    }
    static void x_131(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarCloseButton;
    }
    static void x_132(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarNormalButton;
    }
    static void x_133(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarShadeButton;
    }
    static void x_134(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_TitleBarUnshadeButton;
    }
    static void x_135(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ListView;
    }
    static void x_136(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ListViewBranch;
    }
    static void x_137(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_ListViewExpand;
    }
    static void x_138(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SC_All;
    }
    static void x_139(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ButtonMargin;
    }
    static void x_140(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ButtonDefaultIndicator;
    }
    static void x_141(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_MenuButtonIndicator;
    }
    static void x_142(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ButtonShiftHorizontal;
    }
    static void x_143(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ButtonShiftVertical;
    }
    static void x_144(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_DefaultFrameWidth;
    }
    static void x_145(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SpinBoxFrameWidth;
    }
    static void x_146(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_MaximumDragDistance;
    }
    static void x_147(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ScrollBarExtent;
    }
    static void x_148(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ScrollBarSliderMin;
    }
    static void x_149(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SliderThickness;
    }
    static void x_150(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SliderControlThickness;
    }
    static void x_151(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SliderLength;
    }
    static void x_152(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SliderTickmarkOffset;
    }
    static void x_153(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SliderSpaceAvailable;
    }
    static void x_154(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_DockWindowSeparatorExtent;
    }
    static void x_155(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_DockWindowHandleExtent;
    }
    static void x_156(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_DockWindowFrameWidth;
    }
    static void x_157(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_MenuBarFrameWidth;
    }
    static void x_158(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TabBarTabOverlap;
    }
    static void x_159(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TabBarTabHSpace;
    }
    static void x_160(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TabBarTabVSpace;
    }
    static void x_161(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TabBarBaseHeight;
    }
    static void x_162(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TabBarBaseOverlap;
    }
    static void x_163(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ProgressBarChunkWidth;
    }
    static void x_164(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_SplitterWidth;
    }
    static void x_165(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_TitleBarHeight;
    }
    static void x_166(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_IndicatorWidth;
    }
    static void x_167(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_IndicatorHeight;
    }
    static void x_168(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ExclusiveIndicatorWidth;
    }
    static void x_169(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_ExclusiveIndicatorHeight;
    }
    static void x_170(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_PopupMenuScrollerHeight;
    }
    static void x_171(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::PM_CustomBase;
    }
    static void x_172(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_PushButton;
    }
    static void x_173(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_CheckBox;
    }
    static void x_174(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_RadioButton;
    }
    static void x_175(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_ToolButton;
    }
    static void x_176(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_ComboBox;
    }
    static void x_177(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_Splitter;
    }
    static void x_178(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_DockWindow;
    }
    static void x_179(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_ProgressBar;
    }
    static void x_180(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_PopupMenuItem;
    }
    static void x_181(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::CT_CustomBase;
    }
    static void x_182(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_EtchDisabledText;
    }
    static void x_183(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_GUIStyle;
    }
    static void x_184(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ScrollBar_BackgroundMode;
    }
    static void x_185(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ScrollBar_MiddleClickAbsolutePosition;
    }
    static void x_186(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ScrollBar_ScrollWhenPointerLeavesControl;
    }
    static void x_187(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_TabBar_SelectMouseType;
    }
    static void x_188(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_TabBar_Alignment;
    }
    static void x_189(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_Header_ArrowAlignment;
    }
    static void x_190(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_Slider_SnapToValue;
    }
    static void x_191(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_Slider_SloppyKeyEvents;
    }
    static void x_192(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ProgressDialog_CenterCancelButton;
    }
    static void x_193(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ProgressDialog_TextLabelAlignment;
    }
    static void x_194(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PrintDialog_RightAlignButtons;
    }
    static void x_195(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_MainWindow_SpaceBelowMenuBar;
    }
    static void x_196(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_FontDialog_SelectAssociatedText;
    }
    static void x_197(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PopupMenu_AllowActiveAndDisabled;
    }
    static void x_198(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PopupMenu_SpaceActivatesItem;
    }
    static void x_199(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PopupMenu_SubMenuPopupDelay;
    }
    static void x_200(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ScrollView_FrameOnlyAroundContents;
    }
    static void x_201(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_MenuBar_AltKeyNavigation;
    }
    static void x_202(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ComboBox_ListMouseTracking;
    }
    static void x_203(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PopupMenu_MouseTracking;
    }
    static void x_204(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_MenuBar_MouseTracking;
    }
    static void x_205(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ItemView_ChangeHighlightOnFocus;
    }
    static void x_206(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_Widget_ShareActivation;
    }
    static void x_207(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_Workspace_FillSpaceOnMaximize;
    }
    static void x_208(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ComboBox_Popup;
    }
    static void x_209(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_TitleBar_NoBorder;
    }
    static void x_210(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_ScrollBar_StopMouseOverSlider;
    }
    static void x_211(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_BlinkCursorWhenTextSelected;
    }
    static void x_212(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_RichText_FullWidthSelection;
    }
    static void x_213(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_PopupMenu_Scrollable;
    }
    static void x_214(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SH_CustomBase;
    }
    static void x_215(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarMinButton;
    }
    static void x_216(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarMaxButton;
    }
    static void x_217(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarCloseButton;
    }
    static void x_218(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarNormalButton;
    }
    static void x_219(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarShadeButton;
    }
    static void x_220(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_TitleBarUnshadeButton;
    }
    static void x_221(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_DockWindowCloseButton;
    }
    static void x_222(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_MessageBoxInformation;
    }
    static void x_223(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_MessageBoxWarning;
    }
    static void x_224(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_MessageBoxCritical;
    }
    static void x_225(Smoke::Stack x) {
	x[0].s_enum = (long)QStyle::SP_CustomBase;
    }
    void x_226(Smoke::Stack x) const {
	// metaObject()
	QMetaObject* xret = this->QStyle::metaObject();
	x[0].s_class = (void*)xret;
    }
    void x_227(Smoke::Stack x) const {
	// className()
	const char* xret = this->QStyle::className();
	x[0].s_voidp = (void*)xret;
    }
    void x_228(Smoke::Stack x) {
	// qt_cast(const char*)
	void* xret = this->QStyle::qt_cast((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_229(Smoke::Stack x) {
	// qt_invoke(int, QUObject*)
	bool xret = this->QStyle::qt_invoke((int)x[1].s_int,(QUObject*)x[2].s_voidp);
	x[0].s_bool = xret;
    }
    void x_230(Smoke::Stack x) {
	// qt_emit(int, QUObject*)
	bool xret = this->QStyle::qt_emit((int)x[1].s_int,(QUObject*)x[2].s_voidp);
	x[0].s_bool = xret;
    }
    void x_231(Smoke::Stack x) {
	// qt_property(int, int, QVariant*)
	bool xret = this->QStyle::qt_property((int)x[1].s_int,(int)x[2].s_int,(QVariant*)x[3].s_class);
	x[0].s_bool = xret;
    }
    void x_232(Smoke::Stack x) {
	// qObject()
	QObject* xret = this->QStyle::qObject();
	x[0].s_class = (void*)xret;
    }
    static void x_233(Smoke::Stack x) {
	// QStyle()
	x_QStyle* xret = new x_QStyle();
	x[0].s_class = (void*)xret;
    }
    x_QStyle() : QStyle() {
    }
    void x_234(Smoke::Stack x) {
	// polish(QWidget*)
	this->QStyle::polish((QWidget*)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_235(Smoke::Stack x) {
	// unPolish(QWidget*)
	this->QStyle::unPolish((QWidget*)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_236(Smoke::Stack x) {
	// polish(QApplication*)
	this->QStyle::polish((QApplication*)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_237(Smoke::Stack x) {
	// unPolish(QApplication*)
	this->QStyle::unPolish((QApplication*)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_238(Smoke::Stack x) {
	// polish(QPalette&)
	this->QStyle::polish(*(QPalette *)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_239(Smoke::Stack x) const {
	// itemRect(QPainter*, const QRect&, int, bool, const QPixmap*, const QString&, int)
	QRect xret = this->QStyle::itemRect((QPainter*)x[1].s_class,*(const QRect *)x[2].s_class,(int)x[3].s_int,(bool)x[4].s_bool,(const QPixmap*)x[5].s_class,*(const QString *)x[6].s_voidp,(int)x[7].s_int);
	x[0].s_class = (void*)new QRect(xret);
    }
    void x_240(Smoke::Stack x) const {
	// itemRect(QPainter*, const QRect&, int, bool, const QPixmap*, const QString&)
	QRect xret = this->QStyle::itemRect((QPainter*)x[1].s_class,*(const QRect *)x[2].s_class,(int)x[3].s_int,(bool)x[4].s_bool,(const QPixmap*)x[5].s_class,*(const QString *)x[6].s_voidp);
	x[0].s_class = (void*)new QRect(xret);
    }
    void x_241(Smoke::Stack x) const {
	// drawItem(QPainter*, const QRect&, int, const QColorGroup&, bool, const QPixmap*, const QString&, int, const QColor*)
	this->QStyle::drawItem((QPainter*)x[1].s_class,*(const QRect *)x[2].s_class,(int)x[3].s_int,*(const QColorGroup *)x[4].s_class,(bool)x[5].s_bool,(const QPixmap*)x[6].s_class,*(const QString *)x[7].s_voidp,(int)x[8].s_int,(const QColor*)x[9].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_242(Smoke::Stack x) const {
	// drawItem(QPainter*, const QRect&, int, const QColorGroup&, bool, const QPixmap*, const QString&, int)
	this->QStyle::drawItem((QPainter*)x[1].s_class,*(const QRect *)x[2].s_class,(int)x[3].s_int,*(const QColorGroup *)x[4].s_class,(bool)x[5].s_bool,(const QPixmap*)x[6].s_class,*(const QString *)x[7].s_voidp,(int)x[8].s_int);
	(void)x; // noop (for compiler warning)
    }
    void x_243(Smoke::Stack x) const {
	// drawItem(QPainter*, const QRect&, int, const QColorGroup&, bool, const QPixmap*, const QString&)
	this->QStyle::drawItem((QPainter*)x[1].s_class,*(const QRect *)x[2].s_class,(int)x[3].s_int,*(const QColorGroup *)x[4].s_class,(bool)x[5].s_bool,(const QPixmap*)x[6].s_class,*(const QString *)x[7].s_voidp);
	(void)x; // noop (for compiler warning)
    }
    void x_244(Smoke::Stack x) const {
	// defaultFrameWidth()
	int xret = this->QStyle::defaultFrameWidth();
	x[0].s_int = xret;
    }
    void x_245(Smoke::Stack x) const {
	// tabbarMetrics(const QWidget*, int&, int&, int&)
	this->QStyle::tabbarMetrics((const QWidget*)x[1].s_class,*(int *)x[2].s_voidp,*(int *)x[3].s_voidp,*(int *)x[4].s_voidp);
	(void)x; // noop (for compiler warning)
    }
    void x_246(Smoke::Stack x) const {
	// scrollBarExtent()
	QSize xret = this->QStyle::scrollBarExtent();
	x[0].s_class = (void*)new QSize(xret);
    }
    static void x_247(Smoke::Stack x) {
	// staticMetaObject()
	QMetaObject* xret = QStyle::staticMetaObject();
	x[0].s_class = (void*)xret;
    }
    static void x_248(Smoke::Stack x) {
	// tr(const char*, const char*)
	QString xret = QStyle::tr((const char*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_249(Smoke::Stack x) {
	// tr(const char*)
	QString xret = QStyle::tr((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_250(Smoke::Stack x) {
	// trUtf8(const char*, const char*)
	QString xret = QStyle::trUtf8((const char*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_251(Smoke::Stack x) {
	// trUtf8(const char*)
	QString xret = QStyle::trUtf8((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_252(Smoke::Stack x) {
	// visualRect(const QRect&, const QWidget*)
	QRect xret = QStyle::visualRect(*(const QRect *)x[1].s_class,(const QWidget*)x[2].s_class);
	x[0].s_class = (void*)new QRect(xret);
    }
    static void x_253(Smoke::Stack x) {
	// visualRect(const QRect&, const QRect&)
	QRect xret = QStyle::visualRect(*(const QRect *)x[1].s_class,*(const QRect *)x[2].s_class);
	x[0].s_class = (void*)new QRect(xret);
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_class = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(qt_Smoke->binding->callMethod(6519, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6515, (void*)this, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual const char* className() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(9406, (void*)this, x)) return (const char*)x[0].s_class;
	return this->QStyle::className();
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6517, (void*)this, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6516, (void*)this, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6518, (void*)this, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void drawComplexControl(QStyle::ComplexControl x1, QPainter* x2, const QWidget* x3, const QRect& x4, const QColorGroup& x5, QStyle::SFlags x6, QStyle::SCFlags x7, QStyle::SCFlags x8, const QStyleOption& x9) const {
	Smoke::StackItem x[10];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	x[4].s_class = (void*)&x4;
	x[5].s_class = (void*)&x5;
	x[6].s_int = x6;
	x[7].s_int = x7;
	x[8].s_int = x8;
	x[9].s_class = (void*)&x9;
	qt_Smoke->binding->callMethod(9434, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void drawComplexControlMask(QStyle::ComplexControl x1, QPainter* x2, const QWidget* x3, const QRect& x4, const QStyleOption& x5) const {
	Smoke::StackItem x[6];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	x[4].s_class = (void*)&x4;
	x[5].s_class = (void*)&x5;
	qt_Smoke->binding->callMethod(9439, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void drawControl(QStyle::ControlElement x1, QPainter* x2, const QWidget* x3, const QRect& x4, const QColorGroup& x5, QStyle::SFlags x6, const QStyleOption& x7) const {
	Smoke::StackItem x[8];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	x[4].s_class = (void*)&x4;
	x[5].s_class = (void*)&x5;
	x[6].s_int = x6;
	x[7].s_class = (void*)&x7;
	qt_Smoke->binding->callMethod(9428, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void drawControlMask(QStyle::ControlElement x1, QPainter* x2, const QWidget* x3, const QRect& x4, const QStyleOption& x5) const {
	Smoke::StackItem x[6];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	x[4].s_class = (void*)&x4;
	x[5].s_class = (void*)&x5;
	qt_Smoke->binding->callMethod(9431, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void drawItem(QPainter* x1, const QRect& x2, int x3, const QColorGroup& x4, bool x5, const QPixmap* x6, const QString& x7, int x8, const QColor* x9) const {
	Smoke::StackItem x[10];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)&x2;
	x[3].s_int = x3;
	x[4].s_class = (void*)&x4;
	x[5].s_bool = x5;
	x[6].s_class = (void*)x6;
	x[7].s_voidp = (void*)&x7;
	x[8].s_int = x8;
	x[9].s_class = (void*)x9;
	if(qt_Smoke->binding->callMethod(9422, (void*)this, x)) return;
	this->QStyle::drawItem(x1, x2, x3, x4, x5, x6, x7, x8, x9);
    }
    virtual void drawPrimitive(QStyle::PrimitiveElement x1, QPainter* x2, const QRect& x3, const QColorGroup& x4, QStyle::SFlags x5, const QStyleOption& x6) const {
	Smoke::StackItem x[7];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)&x3;
	x[4].s_class = (void*)&x4;
	x[5].s_int = x5;
	x[6].s_class = (void*)&x6;
	qt_Smoke->binding->callMethod(9425, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6453, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)x2;
	if(qt_Smoke->binding->callMethod(6454, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::eventFilter(x1, x2);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6476, (void*)this, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual QRect itemRect(QPainter* x1, const QRect& x2, int x3, bool x4, const QPixmap* x5, const QString& x6, int x7) const {
	Smoke::StackItem x[8];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)&x2;
	x[3].s_int = x3;
	x[4].s_bool = x4;
	x[5].s_class = (void*)x5;
	x[6].s_voidp = (void*)&x6;
	x[7].s_int = x7;
	if(qt_Smoke->binding->callMethod(9420, (void*)this, x)) {
	    QRect *xptr = (QRect *)x[0].s_class;
	    QRect xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QStyle::itemRect(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual QMetaObject* metaObject() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(9405, (void*)this, x)) return (QMetaObject*)x[0].s_class;
	return this->QStyle::metaObject();
    }
    virtual int pixelMetric(QStyle::PixelMetric x1, const QWidget* x2) const {
	Smoke::StackItem x[3];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	qt_Smoke->binding->callMethod(9445, (void*)this, x, true /*pure virtual*/);
	return (int)x[0].s_int;
	// ABSTRACT
    }
    virtual void polish(QApplication* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(9416, (void*)this, x)) return;
	this->QStyle::polish(x1);
    }
    virtual void polish(QPalette& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->binding->callMethod(9418, (void*)this, x)) return;
	this->QStyle::polish(x1);
    }
    virtual void polish(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(9414, (void*)this, x)) return;
	this->QStyle::polish(x1);
    }
    virtual void polishPopupMenu(QPopupMenu* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	qt_Smoke->binding->callMethod(9419, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6490, (void*)this, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_class;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void* qt_cast(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(9407, (void*)this, x)) return (void*)x[0].s_voidp;
	return this->QStyle::qt_cast(x1);
    }
    virtual bool qt_emit(int x1, QUObject* x2) {
	Smoke::StackItem x[3];
	x[1].s_int = x1;
	x[2].s_voidp = (void*)x2;
	if(qt_Smoke->binding->callMethod(9409, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QStyle::qt_emit(x1, x2);
    }
    virtual bool qt_invoke(int x1, QUObject* x2) {
	Smoke::StackItem x[3];
	x[1].s_int = x1;
	x[2].s_voidp = (void*)x2;
	if(qt_Smoke->binding->callMethod(9408, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QStyle::qt_invoke(x1, x2);
    }
    virtual bool qt_property(int x1, int x2, QVariant* x3) {
	Smoke::StackItem x[4];
	x[1].s_int = x1;
	x[2].s_int = x2;
	x[3].s_class = (void*)x3;
	if(qt_Smoke->binding->callMethod(9410, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QStyle::qt_property(x1, x2, x3);
    }
    virtual QStyle::SubControl querySubControl(QStyle::ComplexControl x1, const QWidget* x2, const QPoint& x3, const QStyleOption& x4) const {
	Smoke::StackItem x[5];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)&x3;
	x[4].s_class = (void*)&x4;
	qt_Smoke->binding->callMethod(9443, (void*)this, x, true /*pure virtual*/);
	QStyle::SubControl *xptr = (QStyle::SubControl *)x[0].s_class;
	QStyle::SubControl xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual QRect querySubControlMetrics(QStyle::ComplexControl x1, const QWidget* x2, QStyle::SubControl x3, const QStyleOption& x4) const {
	Smoke::StackItem x[5];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_enum = x3;
	x[4].s_class = (void*)&x4;
	qt_Smoke->binding->callMethod(9441, (void*)this, x, true /*pure virtual*/);
	QRect *xptr = (QRect *)x[0].s_class;
	QRect xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6477, (void*)this, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6459, (void*)this, x)) return;
	this->QObject::setName(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_class = (void*)&x2;
	if(qt_Smoke->binding->callMethod(6489, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual QSize sizeFromContents(QStyle::ContentsType x1, const QWidget* x2, const QSize& x3, const QStyleOption& x4) const {
	Smoke::StackItem x[5];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)&x3;
	x[4].s_class = (void*)&x4;
	qt_Smoke->binding->callMethod(9447, (void*)this, x, true /*pure virtual*/);
	QSize *xptr = (QSize *)x[0].s_class;
	QSize xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual int styleHint(QStyle::StyleHint x1, const QWidget* x2, const QStyleOption& x3, QStyleHintReturn* x4) const {
	Smoke::StackItem x[5];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)&x3;
	x[4].s_voidp = (void*)x4;
	qt_Smoke->binding->callMethod(9449, (void*)this, x, true /*pure virtual*/);
	return (int)x[0].s_int;
	// ABSTRACT
    }
    virtual QPixmap stylePixmap(QStyle::StylePixmap x1, const QWidget* x2, const QStyleOption& x3) const {
	Smoke::StackItem x[4];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)&x3;
	qt_Smoke->binding->callMethod(9453, (void*)this, x, true /*pure virtual*/);
	QPixmap *xptr = (QPixmap *)x[0].s_class;
	QPixmap xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual QRect subRect(QStyle::SubRect x1, const QWidget* x2) const {
	Smoke::StackItem x[3];
	x[1].s_enum = x1;
	x[2].s_class = (void*)x2;
	qt_Smoke->binding->callMethod(9433, (void*)this, x, true /*pure virtual*/);
	QRect *xptr = (QRect *)x[0].s_class;
	QRect xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6514, (void*)this, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void unPolish(QApplication* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(9417, (void*)this, x)) return;
	this->QStyle::unPolish(x1);
    }
    virtual void unPolish(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(9415, (void*)this, x)) return;
	this->QStyle::unPolish(x1);
    }
    static void xenum_operation(Smoke::EnumOperation xop, Smoke::Index xtype, void *&xdata, long &xvalue) {
	switch(xtype) {
	  case 597: //QStyle::SubControl
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::SubControl;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::SubControl*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::SubControl*)xdata = (QStyle::SubControl)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::SubControl*)xdata;
		break;
	    }
	    break;
	  case 587: //QStyle::ComplexControl
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::ComplexControl;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::ComplexControl*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::ComplexControl*)xdata = (QStyle::ComplexControl)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::ComplexControl*)xdata;
		break;
	    }
	    break;
	  case 589: //QStyle::ControlElement
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::ControlElement;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::ControlElement*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::ControlElement*)xdata = (QStyle::ControlElement)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::ControlElement*)xdata;
		break;
	    }
	    break;
	  case 591: //QStyle::PrimitiveElement
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::PrimitiveElement;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::PrimitiveElement*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::PrimitiveElement*)xdata = (QStyle::PrimitiveElement)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::PrimitiveElement*)xdata;
		break;
	    }
	    break;
	  case 588: //QStyle::ContentsType
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::ContentsType;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::ContentsType*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::ContentsType*)xdata = (QStyle::ContentsType)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::ContentsType*)xdata;
		break;
	    }
	    break;
	  case 595: //QStyle::StyleHint
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::StyleHint;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::StyleHint*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::StyleHint*)xdata = (QStyle::StyleHint)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::StyleHint*)xdata;
		break;
	    }
	    break;
	  case 590: //QStyle::PixelMetric
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::PixelMetric;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::PixelMetric*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::PixelMetric*)xdata = (QStyle::PixelMetric)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::PixelMetric*)xdata;
		break;
	    }
	    break;
	  case 598: //QStyle::SubRect
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::SubRect;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::SubRect*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::SubRect*)xdata = (QStyle::SubRect)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::SubRect*)xdata;
		break;
	    }
	    break;
	  case 596: //QStyle::StylePixmap
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::StylePixmap;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::StylePixmap*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::StylePixmap*)xdata = (QStyle::StylePixmap)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::StylePixmap*)xdata;
		break;
	    }
	    break;
	  case 594: //QStyle::StyleFlags
	    switch(xop) {
	      case Smoke::EnumNew:
		xdata = (void*)new QStyle::StyleFlags;
		break;
	      case Smoke::EnumDelete:
		delete (QStyle::StyleFlags*)xdata;
		break;
	      case Smoke::EnumFromLong:
		*(QStyle::StyleFlags*)xdata = (QStyle::StyleFlags)xvalue;
		break;
	      case Smoke::EnumToLong:
		xvalue = (long)*(QStyle::StyleFlags*)xdata;
		break;
	    }
	    break;
	}
    }
    ~x_QStyle() { qt_Smoke->binding->deleted(300, (void*)this); }
};
void xenum_QStyle(Smoke::EnumOperation xop, Smoke::Index xtype, void *&xdata, long &xvalue) {
    x_QStyle::xenum_operation(xop, xtype, xdata, xvalue);
}
void xcall_QStyle(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QStyle *xself = (x_QStyle*)obj;
    switch(xi) {
	case 0: x_QStyle::x_0(args);	break;
	case 1: x_QStyle::x_1(args);	break;
	case 2: x_QStyle::x_2(args);	break;
	case 3: x_QStyle::x_3(args);	break;
	case 4: x_QStyle::x_4(args);	break;
	case 5: x_QStyle::x_5(args);	break;
	case 6: x_QStyle::x_6(args);	break;
	case 7: x_QStyle::x_7(args);	break;
	case 8: x_QStyle::x_8(args);	break;
	case 9: x_QStyle::x_9(args);	break;
	case 10: x_QStyle::x_10(args);	break;
	case 11: x_QStyle::x_11(args);	break;
	case 12: x_QStyle::x_12(args);	break;
	case 13: x_QStyle::x_13(args);	break;
	case 14: x_QStyle::x_14(args);	break;
	case 15: x_QStyle::x_15(args);	break;
	case 16: x_QStyle::x_16(args);	break;
	case 17: x_QStyle::x_17(args);	break;
	case 18: x_QStyle::x_18(args);	break;
	case 19: x_QStyle::x_19(args);	break;
	case 20: x_QStyle::x_20(args);	break;
	case 21: x_QStyle::x_21(args);	break;
	case 22: x_QStyle::x_22(args);	break;
	case 23: x_QStyle::x_23(args);	break;
	case 24: x_QStyle::x_24(args);	break;
	case 25: x_QStyle::x_25(args);	break;
	case 26: x_QStyle::x_26(args);	break;
	case 27: x_QStyle::x_27(args);	break;
	case 28: x_QStyle::x_28(args);	break;
	case 29: x_QStyle::x_29(args);	break;
	case 30: x_QStyle::x_30(args);	break;
	case 31: x_QStyle::x_31(args);	break;
	case 32: x_QStyle::x_32(args);	break;
	case 33: x_QStyle::x_33(args);	break;
	case 34: x_QStyle::x_34(args);	break;
	case 35: x_QStyle::x_35(args);	break;
	case 36: x_QStyle::x_36(args);	break;
	case 37: x_QStyle::x_37(args);	break;
	case 38: x_QStyle::x_38(args);	break;
	case 39: x_QStyle::x_39(args);	break;
	case 40: x_QStyle::x_40(args);	break;
	case 41: x_QStyle::x_41(args);	break;
	case 42: x_QStyle::x_42(args);	break;
	case 43: x_QStyle::x_43(args);	break;
	case 44: x_QStyle::x_44(args);	break;
	case 45: x_QStyle::x_45(args);	break;
	case 46: x_QStyle::x_46(args);	break;
	case 47: x_QStyle::x_47(args);	break;
	case 48: x_QStyle::x_48(args);	break;
	case 49: x_QStyle::x_49(args);	break;
	case 50: x_QStyle::x_50(args);	break;
	case 51: x_QStyle::x_51(args);	break;
	case 52: x_QStyle::x_52(args);	break;
	case 53: x_QStyle::x_53(args);	break;
	case 54: x_QStyle::x_54(args);	break;
	case 55: x_QStyle::x_55(args);	break;
	case 56: x_QStyle::x_56(args);	break;
	case 57: x_QStyle::x_57(args);	break;
	case 58: x_QStyle::x_58(args);	break;
	case 59: x_QStyle::x_59(args);	break;
	case 60: x_QStyle::x_60(args);	break;
	case 61: x_QStyle::x_61(args);	break;
	case 62: x_QStyle::x_62(args);	break;
	case 63: x_QStyle::x_63(args);	break;
	case 64: x_QStyle::x_64(args);	break;
	case 65: x_QStyle::x_65(args);	break;
	case 66: x_QStyle::x_66(args);	break;
	case 67: x_QStyle::x_67(args);	break;
	case 68: x_QStyle::x_68(args);	break;
	case 69: x_QStyle::x_69(args);	break;
	case 70: x_QStyle::x_70(args);	break;
	case 71: x_QStyle::x_71(args);	break;
	case 72: x_QStyle::x_72(args);	break;
	case 73: x_QStyle::x_73(args);	break;
	case 74: x_QStyle::x_74(args);	break;
	case 75: x_QStyle::x_75(args);	break;
	case 76: x_QStyle::x_76(args);	break;
	case 77: x_QStyle::x_77(args);	break;
	case 78: x_QStyle::x_78(args);	break;
	case 79: x_QStyle::x_79(args);	break;
	case 80: x_QStyle::x_80(args);	break;
	case 81: x_QStyle::x_81(args);	break;
	case 82: x_QStyle::x_82(args);	break;
	case 83: x_QStyle::x_83(args);	break;
	case 84: x_QStyle::x_84(args);	break;
	case 85: x_QStyle::x_85(args);	break;
	case 86: x_QStyle::x_86(args);	break;
	case 87: x_QStyle::x_87(args);	break;
	case 88: x_QStyle::x_88(args);	break;
	case 89: x_QStyle::x_89(args);	break;
	case 90: x_QStyle::x_90(args);	break;
	case 91: x_QStyle::x_91(args);	break;
	case 92: x_QStyle::x_92(args);	break;
	case 93: x_QStyle::x_93(args);	break;
	case 94: x_QStyle::x_94(args);	break;
	case 95: x_QStyle::x_95(args);	break;
	case 96: x_QStyle::x_96(args);	break;
	case 97: x_QStyle::x_97(args);	break;
	case 98: x_QStyle::x_98(args);	break;
	case 99: x_QStyle::x_99(args);	break;
	case 100: x_QStyle::x_100(args);	break;
	case 101: x_QStyle::x_101(args);	break;
	case 102: x_QStyle::x_102(args);	break;
	case 103: x_QStyle::x_103(args);	break;
	case 104: x_QStyle::x_104(args);	break;
	case 105: x_QStyle::x_105(args);	break;
	case 106: x_QStyle::x_106(args);	break;
	case 107: x_QStyle::x_107(args);	break;
	case 108: x_QStyle::x_108(args);	break;
	case 109: x_QStyle::x_109(args);	break;
	case 110: x_QStyle::x_110(args);	break;
	case 111: x_QStyle::x_111(args);	break;
	case 112: x_QStyle::x_112(args);	break;
	case 113: x_QStyle::x_113(args);	break;
	case 114: x_QStyle::x_114(args);	break;
	case 115: x_QStyle::x_115(args);	break;
	case 116: x_QStyle::x_116(args);	break;
	case 117: x_QStyle::x_117(args);	break;
	case 118: x_QStyle::x_118(args);	break;
	case 119: x_QStyle::x_119(args);	break;
	case 120: x_QStyle::x_120(args);	break;
	case 121: x_QStyle::x_121(args);	break;
	case 122: x_QStyle::x_122(args);	break;
	case 123: x_QStyle::x_123(args);	break;
	case 124: x_QStyle::x_124(args);	break;
	case 125: x_QStyle::x_125(args);	break;
	case 126: x_QStyle::x_126(args);	break;
	case 127: x_QStyle::x_127(args);	break;
	case 128: x_QStyle::x_128(args);	break;
	case 129: x_QStyle::x_129(args);	break;
	case 130: x_QStyle::x_130(args);	break;
	case 131: x_QStyle::x_131(args);	break;
	case 132: x_QStyle::x_132(args);	break;
	case 133: x_QStyle::x_133(args);	break;
	case 134: x_QStyle::x_134(args);	break;
	case 135: x_QStyle::x_135(args);	break;
	case 136: x_QStyle::x_136(args);	break;
	case 137: x_QStyle::x_137(args);	break;
	case 138: x_QStyle::x_138(args);	break;
	case 139: x_QStyle::x_139(args);	break;
	case 140: x_QStyle::x_140(args);	break;
	case 141: x_QStyle::x_141(args);	break;
	case 142: x_QStyle::x_142(args);	break;
	case 143: x_QStyle::x_143(args);	break;
	case 144: x_QStyle::x_144(args);	break;
	case 145: x_QStyle::x_145(args);	break;
	case 146: x_QStyle::x_146(args);	break;
	case 147: x_QStyle::x_147(args);	break;
	case 148: x_QStyle::x_148(args);	break;
	case 149: x_QStyle::x_149(args);	break;
	case 150: x_QStyle::x_150(args);	break;
	case 151: x_QStyle::x_151(args);	break;
	case 152: x_QStyle::x_152(args);	break;
	case 153: x_QStyle::x_153(args);	break;
	case 154: x_QStyle::x_154(args);	break;
	case 155: x_QStyle::x_155(args);	break;
	case 156: x_QStyle::x_156(args);	break;
	case 157: x_QStyle::x_157(args);	break;
	case 158: x_QStyle::x_158(args);	break;
	case 159: x_QStyle::x_159(args);	break;
	case 160: x_QStyle::x_160(args);	break;
	case 161: x_QStyle::x_161(args);	break;
	case 162: x_QStyle::x_162(args);	break;
	case 163: x_QStyle::x_163(args);	break;
	case 164: x_QStyle::x_164(args);	break;
	case 165: x_QStyle::x_165(args);	break;
	case 166: x_QStyle::x_166(args);	break;
	case 167: x_QStyle::x_167(args);	break;
	case 168: x_QStyle::x_168(args);	break;
	case 169: x_QStyle::x_169(args);	break;
	case 170: x_QStyle::x_170(args);	break;
	case 171: x_QStyle::x_171(args);	break;
	case 172: x_QStyle::x_172(args);	break;
	case 173: x_QStyle::x_173(args);	break;
	case 174: x_QStyle::x_174(args);	break;
	case 175: x_QStyle::x_175(args);	break;
	case 176: x_QStyle::x_176(args);	break;
	case 177: x_QStyle::x_177(args);	break;
	case 178: x_QStyle::x_178(args);	break;
	case 179: x_QStyle::x_179(args);	break;
	case 180: x_QStyle::x_180(args);	break;
	case 181: x_QStyle::x_181(args);	break;
	case 182: x_QStyle::x_182(args);	break;
	case 183: x_QStyle::x_183(args);	break;
	case 184: x_QStyle::x_184(args);	break;
	case 185: x_QStyle::x_185(args);	break;
	case 186: x_QStyle::x_186(args);	break;
	case 187: x_QStyle::x_187(args);	break;
	case 188: x_QStyle::x_188(args);	break;
	case 189: x_QStyle::x_189(args);	break;
	case 190: x_QStyle::x_190(args);	break;
	case 191: x_QStyle::x_191(args);	break;
	case 192: x_QStyle::x_192(args);	break;
	case 193: x_QStyle::x_193(args);	break;
	case 194: x_QStyle::x_194(args);	break;
	case 195: x_QStyle::x_195(args);	break;
	case 196: x_QStyle::x_196(args);	break;
	case 197: x_QStyle::x_197(args);	break;
	case 198: x_QStyle::x_198(args);	break;
	case 199: x_QStyle::x_199(args);	break;
	case 200: x_QStyle::x_200(args);	break;
	case 201: x_QStyle::x_201(args);	break;
	case 202: x_QStyle::x_202(args);	break;
	case 203: x_QStyle::x_203(args);	break;
	case 204: x_QStyle::x_204(args);	break;
	case 205: x_QStyle::x_205(args);	break;
	case 206: x_QStyle::x_206(args);	break;
	case 207: x_QStyle::x_207(args);	break;
	case 208: x_QStyle::x_208(args);	break;
	case 209: x_QStyle::x_209(args);	break;
	case 210: x_QStyle::x_210(args);	break;
	case 211: x_QStyle::x_211(args);	break;
	case 212: x_QStyle::x_212(args);	break;
	case 213: x_QStyle::x_213(args);	break;
	case 214: x_QStyle::x_214(args);	break;
	case 215: x_QStyle::x_215(args);	break;
	case 216: x_QStyle::x_216(args);	break;
	case 217: x_QStyle::x_217(args);	break;
	case 218: x_QStyle::x_218(args);	break;
	case 219: x_QStyle::x_219(args);	break;
	case 220: x_QStyle::x_220(args);	break;
	case 221: x_QStyle::x_221(args);	break;
	case 222: x_QStyle::x_222(args);	break;
	case 223: x_QStyle::x_223(args);	break;
	case 224: x_QStyle::x_224(args);	break;
	case 225: x_QStyle::x_225(args);	break;
	case 226: xself->x_226(args);	break;
	case 227: xself->x_227(args);	break;
	case 228: xself->x_228(args);	break;
	case 229: xself->x_229(args);	break;
	case 230: xself->x_230(args);	break;
	case 231: xself->x_231(args);	break;
	case 232: xself->x_232(args);	break;
	case 233: x_QStyle::x_233(args);	break;
	case 234: xself->x_234(args);	break;
	case 235: xself->x_235(args);	break;
	case 236: xself->x_236(args);	break;
	case 237: xself->x_237(args);	break;
	case 238: xself->x_238(args);	break;
	case 239: xself->x_239(args);	break;
	case 240: xself->x_240(args);	break;
	case 241: xself->x_241(args);	break;
	case 242: xself->x_242(args);	break;
	case 243: xself->x_243(args);	break;
	case 244: xself->x_244(args);	break;
	case 245: xself->x_245(args);	break;
	case 246: xself->x_246(args);	break;
	case 247: x_QStyle::x_247(args);	break;
	case 248: x_QStyle::x_248(args);	break;
	case 249: x_QStyle::x_249(args);	break;
	case 250: x_QStyle::x_250(args);	break;
	case 251: x_QStyle::x_251(args);	break;
	case 252: x_QStyle::x_252(args);	break;
	case 253: x_QStyle::x_253(args);	break;
	case 254: delete (QStyle*)xself;	break;
    }
}
