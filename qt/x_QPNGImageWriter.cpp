//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qimage.h>
#include <qpngio.h>

class x_QPNGImageWriter : public QPNGImageWriter {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QPNGImageWriter::Unspecified;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QPNGImageWriter::NoDisposal;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QPNGImageWriter::RestoreBackground;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QPNGImageWriter::RestoreImage;
    }
    static void x_4(xargs *x) {
	// QPNGImageWriter(QIODevice*)
	x_QPNGImageWriter* xret = new x_QPNGImageWriter((QIODevice*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QPNGImageWriter(QIODevice* x1) : QPNGImageWriter(x1) {
    }
    void x_5(xargs *x) {
	// setDisposalMethod(QPNGImageWriter::DisposalMethod)
	this->QPNGImageWriter::setDisposalMethod((QPNGImageWriter::DisposalMethod)x[1].x_long);
    }
    void x_6(xargs *x) {
	// setLooping(int)
	this->QPNGImageWriter::setLooping((int)x[1].x_int);
    }
    void x_7(xargs *x) {
	// setLooping()
	this->QPNGImageWriter::setLooping();
    }
    void x_8(xargs *x) {
	// setFrameDelay(int)
	this->QPNGImageWriter::setFrameDelay((int)x[1].x_int);
    }
    void x_9(xargs *x) {
	// setGamma(float)
	this->QPNGImageWriter::setGamma((float)x[1].x_float);
    }
    void x_10(xargs *x) {
	// writeImage(const QImage&, int, int)
	bool xret = this->QPNGImageWriter::writeImage(*(const QImage *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
	x[0].x_bool = (bool)xret;
    }
    void x_11(xargs *x) {
	// writeImage(const QImage&, int, int, int)
	bool xret = this->QPNGImageWriter::writeImage(*(const QImage *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
	x[0].x_bool = (bool)xret;
    }
    void x_12(xargs *x) {
	// writeImage(const QImage&)
	bool xret = this->QPNGImageWriter::writeImage(*(const QImage *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_13(xargs *x) {
	// writeImage(const QImage&, int)
	bool xret = this->QPNGImageWriter::writeImage(*(const QImage *)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_bool = (bool)xret;
    }
    void x_14(xargs *x) {
	// device()
	QIODevice* xret = this->QPNGImageWriter::device();
	x[0].x_voidp = (void*)xret;
    }
    ~x_QPNGImageWriter() {}
};
void xcall_QPNGImageWriter(xargs *x, void *s, int xi) {
    x_QPNGImageWriter *xself = (x_QPNGImageWriter*)s;
    switch(xi) {
	case 0: x_QPNGImageWriter::x_0(x);	break;
	case 1: x_QPNGImageWriter::x_1(x);	break;
	case 2: x_QPNGImageWriter::x_2(x);	break;
	case 3: x_QPNGImageWriter::x_3(x);	break;
	case 4: x_QPNGImageWriter::x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: delete (QPNGImageWriter*)xself;	break;
    }
}
