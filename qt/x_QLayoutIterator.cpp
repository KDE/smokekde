//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qlayout.h>

class x_QLayoutIterator : public QLayoutIterator {
public:
    static void x_0(Smoke::Stack x) {
	// QLayoutIterator(QGLayoutIterator*)
	x_QLayoutIterator* xret = new x_QLayoutIterator((QGLayoutIterator*)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QLayoutIterator(QGLayoutIterator* x1) : QLayoutIterator(x1) {
    }
    static void x_1(Smoke::Stack x) {
	// QLayoutIterator(const QLayoutIterator&)
	x_QLayoutIterator* xret = new x_QLayoutIterator(*(const QLayoutIterator *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QLayoutIterator(const QLayoutIterator& x1) : QLayoutIterator(x1) {
    }
    void x_2(Smoke::Stack x) {
	// operator=(const QLayoutIterator&)
	QLayoutIterator& xret = this->QLayoutIterator::operator=(*(const QLayoutIterator *)x[1].s_class);
	x[0].s_class = (void*)&xret;
    }
    void x_3(Smoke::Stack x) {
	// operator++()
	QLayoutItem* xret = this->QLayoutIterator::operator++();
	x[0].s_class = (void*)xret;
    }
    void x_4(Smoke::Stack x) {
	// current()
	QLayoutItem* xret = this->QLayoutIterator::current();
	x[0].s_class = (void*)xret;
    }
    void x_5(Smoke::Stack x) {
	// takeCurrent()
	QLayoutItem* xret = this->QLayoutIterator::takeCurrent();
	x[0].s_class = (void*)xret;
    }
    void x_6(Smoke::Stack x) {
	// deleteCurrent()
	this->QLayoutIterator::deleteCurrent();
	(void)x[0].s_int; // noop (for compiler warning)
    }
    ~x_QLayoutIterator() { qt_Smoke->binding->deleted(178, (void*)this); }
};
void xcall_QLayoutIterator(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QLayoutIterator *xself = (x_QLayoutIterator*)obj;
    switch(xi) {
	case 0: x_QLayoutIterator::x_0(args);	break;
	case 1: x_QLayoutIterator::x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: delete (QLayoutIterator*)xself;	break;
    }
}
