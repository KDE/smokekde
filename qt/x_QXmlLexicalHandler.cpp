//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qstring.h>
#include <qxml.h>

class x_QXmlLexicalHandler : public QXmlLexicalHandler {
public:
    static void x_0(Smoke::Stack x) {
	// QXmlLexicalHandler()
	x_QXmlLexicalHandler* xret = new x_QXmlLexicalHandler();
	x[0].s_class = (void*)xret;
    }
    x_QXmlLexicalHandler() : QXmlLexicalHandler() {
    }
    static void x_1(Smoke::Stack x) {
	// QXmlLexicalHandler(const QXmlLexicalHandler&)
	x_QXmlLexicalHandler* xret = new x_QXmlLexicalHandler(*(const QXmlLexicalHandler *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QXmlLexicalHandler(const QXmlLexicalHandler& x1) : QXmlLexicalHandler(x1) {
    }
    virtual bool comment(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	qt_Smoke->binding->callMethod(11986, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual bool endCDATA() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(11985, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual bool endDTD() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(11981, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual bool endEntity(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	qt_Smoke->binding->callMethod(11983, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual QString errorString() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(11987, (void*)this, x, true /*pure virtual*/);
	QString *xptr = (QString *)x[0].s_class;
	QString xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    virtual bool startCDATA() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(11984, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual bool startDTD(const QString& x1, const QString& x2, const QString& x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)&x1;
	x[2].s_voidp = (void*)&x2;
	x[3].s_voidp = (void*)&x3;
	qt_Smoke->binding->callMethod(11980, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    virtual bool startEntity(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	qt_Smoke->binding->callMethod(11982, (void*)this, x, true /*pure virtual*/);
	return (bool)x[0].s_bool;
	// ABSTRACT
    }
    ~x_QXmlLexicalHandler() { qt_Smoke->binding->deleted(377, (void*)this); }
};
void xcall_QXmlLexicalHandler(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QXmlLexicalHandler *xself = (x_QXmlLexicalHandler*)obj;
    switch(xi) {
	case 0: x_QXmlLexicalHandler::x_0(args);	break;
	case 1: x_QXmlLexicalHandler::x_1(args);	break;
	case 2: delete (QXmlLexicalHandler*)xself;	break;
    }
}
