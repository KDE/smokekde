//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qrtlcodec.h>
#include <qstring.h>
#include <qcstring.h>

class x_QHebrewCodec {
private:
    QHebrewCodec *xthis;
public:
    x_QHebrewCodec(void *x) : xthis((QHebrewCodec*)x) {}
    void x_0(xargs *x) const {
	// mibEnum()
	int xret = xthis->QHebrewCodec::mibEnum();
	x[0].x_int = (int)xret;
    }
    void x_1(xargs *x) const {
	// name()
	const char* xret = xthis->QHebrewCodec::name();
	x[0].x_voidp = (void*)xret;
    }
    void x_2(xargs *x) const {
	// mimeName()
	const char* xret = xthis->QHebrewCodec::mimeName();
	x[0].x_voidp = (void*)xret;
    }
    void x_3(xargs *x) const {
	// fromUnicode(const QString&, int&)
	QCString xret = xthis->QHebrewCodec::fromUnicode(*(const QString *)x[1].x_voidp,*(int *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QCString(xret);
    }
    void x_4(xargs *x) const {
	// toUnicode(const char*, int)
	QString xret = xthis->QHebrewCodec::toUnicode((const char*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_5(xargs *x) const {
	// heuristicContentMatch(const char*, int)
	int xret = xthis->QHebrewCodec::heuristicContentMatch((const char*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_int = (int)xret;
    }
    ~x_QHebrewCodec() {}
};
void xcall_QHebrewCodec(xargs *x, void *s, int xi) {
    x_QHebrewCodec xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: xself->x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
    }
}
