//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qrangecontrol.h>

class x_QRangeControl : public QRangeControl {
public:
    static void x_0(xargs *x) {
	// QRangeControl()
	x_QRangeControl* xret = new x_QRangeControl();
	x[0].x_voidp = (void*)xret;
    }
    x_QRangeControl() : QRangeControl() {
    }
    static void x_1(xargs *x) {
	// QRangeControl(int, int, int, int, int)
	x_QRangeControl* xret = new x_QRangeControl((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QRangeControl(int x1, int x2, int x3, int x4, int x5) : QRangeControl(x1, x2, x3, x4, x5) {
    }
    void x_2(xargs *x) const {
	// value()
	int xret = this->QRangeControl::value();
	x[0].x_int = (int)xret;
    }
    void x_3(xargs *x) {
	// setValue(int)
	this->QRangeControl::setValue((int)x[1].x_int);
    }
    void x_4(xargs *x) {
	// addPage()
	this->QRangeControl::addPage();
    }
    void x_5(xargs *x) {
	// subtractPage()
	this->QRangeControl::subtractPage();
    }
    void x_6(xargs *x) {
	// addLine()
	this->QRangeControl::addLine();
    }
    void x_7(xargs *x) {
	// subtractLine()
	this->QRangeControl::subtractLine();
    }
    void x_8(xargs *x) const {
	// minValue()
	int xret = this->QRangeControl::minValue();
	x[0].x_int = (int)xret;
    }
    void x_9(xargs *x) const {
	// maxValue()
	int xret = this->QRangeControl::maxValue();
	x[0].x_int = (int)xret;
    }
    void x_10(xargs *x) {
	// setRange(int, int)
	this->QRangeControl::setRange((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_11(xargs *x) {
	// setMinValue(int)
	this->QRangeControl::setMinValue((int)x[1].x_int);
    }
    void x_12(xargs *x) {
	// setMaxValue(int)
	this->QRangeControl::setMaxValue((int)x[1].x_int);
    }
    void x_13(xargs *x) const {
	// lineStep()
	int xret = this->QRangeControl::lineStep();
	x[0].x_int = (int)xret;
    }
    void x_14(xargs *x) const {
	// pageStep()
	int xret = this->QRangeControl::pageStep();
	x[0].x_int = (int)xret;
    }
    void x_15(xargs *x) {
	// setSteps(int, int)
	this->QRangeControl::setSteps((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_16(xargs *x) const {
	// bound(int)
	int xret = this->QRangeControl::bound((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_17(xargs *x) const {
	// positionFromValue(int, int)
	int xret = this->QRangeControl::positionFromValue((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_int = (int)xret;
    }
    void x_18(xargs *x) const {
	// valueFromPosition(int, int)
	int xret = this->QRangeControl::valueFromPosition((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_int = (int)xret;
    }
    void x_19(xargs *x) {
	// directSetValue(int)
	this->QRangeControl::directSetValue((int)x[1].x_int);
    }
    void x_20(xargs *x) const {
	// prevValue()
	int xret = this->QRangeControl::prevValue();
	x[0].x_int = (int)xret;
    }
    void x_21(xargs *x) {
	// valueChange()
	this->QRangeControl::valueChange();
    }
    void x_22(xargs *x) {
	// rangeChange()
	this->QRangeControl::rangeChange();
    }
    void x_23(xargs *x) {
	// stepChange()
	this->QRangeControl::stepChange();
    }
    virtual void rangeChange() {
	xargs x[1];
	if(call_method((void*)this, 6359, x)) return;
	this->QRangeControl::rangeChange();
    }
    virtual void stepChange() {
	xargs x[1];
	if(call_method((void*)this, 6360, x)) return;
	this->QRangeControl::stepChange();
    }
    virtual void valueChange() {
	xargs x[1];
	if(call_method((void*)this, 6358, x)) return;
	this->QRangeControl::valueChange();
    }
    ~x_QRangeControl() {}
};
void xcall_QRangeControl(xargs *x, void *s, int xi) {
    x_QRangeControl *xself = (x_QRangeControl*)s;
    switch(xi) {
	case 0: x_QRangeControl::x_0(x);	break;
	case 1: x_QRangeControl::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: delete (QRangeControl*)xself;	break;
    }
}
