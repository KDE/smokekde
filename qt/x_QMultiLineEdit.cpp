//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qbrush.h>
#include <qmultilineedit.h>
#include <qpoint.h>
#include <qfont.h>
#include <qcstring.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>
#include <qscrollbar.h>

class x_QMultiLineEdit : public QMultiLineEdit {
public:
    static void x_0(xargs *x) {
	// QMultiLineEdit(QWidget*, const char*)
	x_QMultiLineEdit* xret = new x_QMultiLineEdit((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QMultiLineEdit(QWidget* x1, const char* x2) : QMultiLineEdit(x1, x2) {
    }
    static void x_1(xargs *x) {
	// QMultiLineEdit(QWidget*)
	x_QMultiLineEdit* xret = new x_QMultiLineEdit((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QMultiLineEdit(QWidget* x1) : QMultiLineEdit(x1) {
    }
    static void x_2(xargs *x) {
	// QMultiLineEdit()
	x_QMultiLineEdit* xret = new x_QMultiLineEdit();
	x[0].x_voidp = (void*)xret;
    }
    x_QMultiLineEdit() : QMultiLineEdit() {
    }
    void x_3(xargs *x) const {
	// textLine(int)
	QString xret = this->QMultiLineEdit::textLine((int)x[1].x_int);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_4(xargs *x) const {
	// numLines()
	int xret = this->QMultiLineEdit::numLines();
	x[0].x_int = (int)xret;
    }
    void x_5(xargs *x) {
	// insertLine(const QString&, int)
	this->QMultiLineEdit::insertLine(*(const QString *)x[1].x_voidp,(int)x[2].x_int);
    }
    void x_6(xargs *x) {
	// insertLine(const QString&)
	this->QMultiLineEdit::insertLine(*(const QString *)x[1].x_voidp);
    }
    void x_7(xargs *x) {
	// insertAt(const QString&, int, int, bool)
	this->QMultiLineEdit::insertAt(*(const QString *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(bool)x[4].x_bool);
    }
    void x_8(xargs *x) {
	// insertAt(const QString&, int, int)
	this->QMultiLineEdit::insertAt(*(const QString *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_9(xargs *x) {
	// removeLine(int)
	this->QMultiLineEdit::removeLine((int)x[1].x_int);
    }
    void x_10(xargs *x) {
	// setCursorPosition(int, int, bool)
	this->QMultiLineEdit::setCursorPosition((int)x[1].x_int,(int)x[2].x_int,(bool)x[3].x_bool);
    }
    void x_11(xargs *x) {
	// setCursorPosition(int, int)
	this->QMultiLineEdit::setCursorPosition((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_12(xargs *x) const {
	// atBeginning()
	bool xret = this->QMultiLineEdit::atBeginning();
	x[0].x_bool = (bool)xret;
    }
    void x_13(xargs *x) const {
	// atEnd()
	bool xret = this->QMultiLineEdit::atEnd();
	x[0].x_bool = (bool)xret;
    }
    void x_14(xargs *x) {
	// setAlignment(int)
	this->QMultiLineEdit::setAlignment((int)x[1].x_int);
    }
    void x_15(xargs *x) const {
	// alignment()
	int xret = this->QMultiLineEdit::alignment();
	x[0].x_int = (int)xret;
    }
    void x_16(xargs *x) {
	// setEdited(bool)
	this->QMultiLineEdit::setEdited((bool)x[1].x_bool);
    }
    void x_17(xargs *x) const {
	// edited()
	bool xret = this->QMultiLineEdit::edited();
	x[0].x_bool = (bool)xret;
    }
    void x_18(xargs *x) const {
	// hasMarkedText()
	bool xret = this->QMultiLineEdit::hasMarkedText();
	x[0].x_bool = (bool)xret;
    }
    void x_19(xargs *x) const {
	// markedText()
	QString xret = this->QMultiLineEdit::markedText();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_20(xargs *x) {
	// cursorWordForward(bool)
	this->QMultiLineEdit::cursorWordForward((bool)x[1].x_bool);
    }
    void x_21(xargs *x) {
	// cursorWordBackward(bool)
	this->QMultiLineEdit::cursorWordBackward((bool)x[1].x_bool);
    }
    void x_22(xargs *x) const {
	// autoUpdate()
	bool xret = this->QMultiLineEdit::autoUpdate();
	x[0].x_bool = (bool)xret;
    }
    void x_23(xargs *x) {
	// setAutoUpdate(bool)
	this->QMultiLineEdit::setAutoUpdate((bool)x[1].x_bool);
    }
    void x_24(xargs *x) const {
	// totalWidth()
	int xret = this->QMultiLineEdit::totalWidth();
	x[0].x_int = (int)xret;
    }
    void x_25(xargs *x) const {
	// totalHeight()
	int xret = this->QMultiLineEdit::totalHeight();
	x[0].x_int = (int)xret;
    }
    void x_26(xargs *x) const {
	// maxLines()
	int xret = this->QMultiLineEdit::maxLines();
	x[0].x_int = (int)xret;
    }
    void x_27(xargs *x) {
	// setMaxLines(int)
	this->QMultiLineEdit::setMaxLines((int)x[1].x_int);
    }
    void x_28(xargs *x) {
	// deselect()
	this->QMultiLineEdit::deselect();
    }
    void x_29(xargs *x) const {
	// cursorPoint()
	QPoint xret = this->QMultiLineEdit::cursorPoint();
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_30(xargs *x) {
	// insertAndMark(const QString&, bool)
	this->QMultiLineEdit::insertAndMark(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_31(xargs *x) {
	// newLine()
	this->QMultiLineEdit::newLine();
    }
    void x_32(xargs *x) {
	// killLine()
	this->QMultiLineEdit::killLine();
    }
    void x_33(xargs *x) {
	// pageUp(bool)
	this->QMultiLineEdit::pageUp((bool)x[1].x_bool);
    }
    void x_34(xargs *x) {
	// pageUp()
	this->QMultiLineEdit::pageUp();
    }
    void x_35(xargs *x) {
	// pageDown(bool)
	this->QMultiLineEdit::pageDown((bool)x[1].x_bool);
    }
    void x_36(xargs *x) {
	// pageDown()
	this->QMultiLineEdit::pageDown();
    }
    void x_37(xargs *x) {
	// cursorLeft(bool, bool)
	this->QMultiLineEdit::cursorLeft((bool)x[1].x_bool,(bool)x[2].x_bool);
    }
    void x_38(xargs *x) {
	// cursorLeft(bool)
	this->QMultiLineEdit::cursorLeft((bool)x[1].x_bool);
    }
    void x_39(xargs *x) {
	// cursorLeft()
	this->QMultiLineEdit::cursorLeft();
    }
    void x_40(xargs *x) {
	// cursorRight(bool, bool)
	this->QMultiLineEdit::cursorRight((bool)x[1].x_bool,(bool)x[2].x_bool);
    }
    void x_41(xargs *x) {
	// cursorRight(bool)
	this->QMultiLineEdit::cursorRight((bool)x[1].x_bool);
    }
    void x_42(xargs *x) {
	// cursorRight()
	this->QMultiLineEdit::cursorRight();
    }
    void x_43(xargs *x) {
	// cursorUp(bool)
	this->QMultiLineEdit::cursorUp((bool)x[1].x_bool);
    }
    void x_44(xargs *x) {
	// cursorUp()
	this->QMultiLineEdit::cursorUp();
    }
    void x_45(xargs *x) {
	// cursorDown(bool)
	this->QMultiLineEdit::cursorDown((bool)x[1].x_bool);
    }
    void x_46(xargs *x) {
	// cursorDown()
	this->QMultiLineEdit::cursorDown();
    }
    void x_47(xargs *x) {
	// backspace()
	this->QMultiLineEdit::backspace();
    }
    void x_48(xargs *x) {
	// home(bool)
	this->QMultiLineEdit::home((bool)x[1].x_bool);
    }
    void x_49(xargs *x) {
	// home()
	this->QMultiLineEdit::home();
    }
    void x_50(xargs *x) {
	// end(bool)
	this->QMultiLineEdit::end((bool)x[1].x_bool);
    }
    void x_51(xargs *x) {
	// end()
	this->QMultiLineEdit::end();
    }
    void x_52(xargs *x) const {
	// getMarkedRegion(int*, int*, int*, int*)
	bool xret = this->QMultiLineEdit::getMarkedRegion((int*)x[1].x_voidp,(int*)x[2].x_voidp,(int*)x[3].x_voidp,(int*)x[4].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_53(xargs *x) const {
	// lineLength(int)
	int xret = this->QMultiLineEdit::lineLength((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    virtual void addChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6590, x)) return;
	this->QScrollView::addChild(x1, x2, x3);
    }
    virtual void adjustSize() {
	xargs x[1];
	if(call_method((void*)this, 9618, x)) return;
	this->QWidget::adjustSize();
    }
    virtual void append(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8609, x)) return;
	this->QTextEdit::append(x1);
    }
    virtual void backspace() {
	xargs x[1];
	if(call_method((void*)this, 5313, x)) return;
	this->QMultiLineEdit::backspace();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void clear() {
	xargs x[1];
	if(call_method((void*)this, 8628, x)) return;
	this->QTextEdit::clear();
    }
    virtual void clearParagraphBackground(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8669, x)) return;
	this->QTextEdit::clearParagraphBackground(x1);
    }
    virtual bool close(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9605, x)) return (bool)x[0].x_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5558, x)) return (bool)x[0].x_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contentsContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8703, x)) return;
	this->QTextEdit::contentsContextMenuEvent(x1);
    }
    virtual void contentsDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8699, x)) return;
	this->QTextEdit::contentsDragEnterEvent(x1);
    }
    virtual void contentsDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8701, x)) return;
	this->QTextEdit::contentsDragLeaveEvent(x1);
    }
    virtual void contentsDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8700, x)) return;
	this->QTextEdit::contentsDragMoveEvent(x1);
    }
    virtual void contentsDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8702, x)) return;
	this->QTextEdit::contentsDropEvent(x1);
    }
    virtual void contentsMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8694, x)) return;
	this->QTextEdit::contentsMouseDoubleClickEvent(x1);
    }
    virtual void contentsMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8692, x)) return;
	this->QTextEdit::contentsMouseMoveEvent(x1);
    }
    virtual void contentsMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8691, x)) return;
	this->QTextEdit::contentsMousePressEvent(x1);
    }
    virtual void contentsMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8693, x)) return;
	this->QTextEdit::contentsMouseReleaseEvent(x1);
    }
    virtual void contentsWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8695, x)) return;
	this->QTextEdit::contentsWheelEvent(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6689, x)) return;
	this->QScrollView::contextMenuEvent(x1);
    }
    virtual void copy() {
	xargs x[1];
	if(call_method((void*)this, 8608, x)) return;
	this->QTextEdit::copy();
    }
    virtual void create(WId x1, bool x2, bool x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 9733, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual QPopupMenu* createPopupMenu() {
	xargs x[1];
	if(call_method((void*)this, 8709, x)) 	return (QPopupMenu*)x[0].x_voidp;
	return this->QTextEdit::createPopupMenu();
    }
    virtual QPopupMenu* createPopupMenu(const QPoint& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8708, x)) 	return (QPopupMenu*)x[0].x_voidp;
	return this->QTextEdit::createPopupMenu(x1);
    }
    virtual void cursorDown(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5311, x)) return;
	this->QMultiLineEdit::cursorDown(x1);
    }
    virtual void cursorLeft(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 5303, x)) return;
	this->QMultiLineEdit::cursorLeft(x1, x2);
    }
    virtual void cursorRight(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 5306, x)) return;
	this->QMultiLineEdit::cursorRight(x1, x2);
    }
    virtual void cursorUp(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5309, x)) return;
	this->QMultiLineEdit::cursorUp(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	xargs x[1];
	if(call_method((void*)this, 9643, x)) return (bool)x[0].x_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void cut() {
	xargs x[1];
	if(call_method((void*)this, 8625, x)) return;
	this->QTextEdit::cut();
    }
    virtual void del() {
	xargs x[1];
	if(call_method((void*)this, 8629, x)) return;
	this->QTextEdit::del();
    }
    virtual void destroy(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 9737, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void doChangeInterval() {
	xargs x[1];
	if(call_method((void*)this, 8712, x)) return;
	this->QTextEdit::doChangeInterval();
    }
    virtual void doKeyboardAction(QTextEdit::KeyboardAction x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8653, x)) return;
	this->QTextEdit::doKeyboardAction(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9721, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void drawContents(QPainter* x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 8686, x)) return;
	this->QTextEdit::drawContents(x1, x2, x3, x4, x5);
    }
    virtual void drawContentsOffset(QPainter* x1, int x2, int x3, int x4, int x5, int x6, int x7) {
	xargs x[8];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	x[6].x_int = (int)x6;
	x[7].x_int = (int)x7;
	if(call_method((void*)this, 6651, x)) return;
	this->QScrollView::drawContentsOffset(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual void drawFrame(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2946, x)) return;
	this->QFrame::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9722, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9727, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void end(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5316, x)) return;
	this->QMultiLineEdit::end(x1);
    }
    virtual void ensureCursorVisible() {
	xargs x[1];
	if(call_method((void*)this, 8649, x)) return;
	this->QTextEdit::ensureCursorVisible();
    }
    virtual void enterEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8687, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 8598, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::eventFilter(x1, x2);
    }
    virtual bool find(const QString& x1, bool x2, bool x3, bool x4, int* x5, int* x6) {
	xargs x[7];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	x[4].x_bool = (bool)x4;
	x[5].x_voidp = (void*)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 8553, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::find(x1, x2, x3, x4, x5, x6);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8704, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9729, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	xargs x[1];
	if(call_method((void*)this, 6674, x)) return;
	this->QScrollView::frameChanged();
    }
    virtual bool getFormat(int x1, int x2, QFont* x3, QColor* x4, QTextEdit::VerticalAlignment* x5) {
	xargs x[6];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_voidp = (void*)x4;
	x[5].x_voidp = (void*)x5;
	if(call_method((void*)this, 8593, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::getFormat(x1, x2, x3, x4, x5);
    }
    virtual bool getParagraphFormat(int x1, QFont* x2, QColor* x3, QTextEdit::VerticalAlignment* x4, int* x5, QStyleSheetItem::DisplayMode* x6, QStyleSheetItem::ListStyle* x7, int* x8) {
	xargs x[9];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_voidp = (void*)x4;
	x[5].x_voidp = (void*)x5;
	x[6].x_voidp = (void*)x6;
	x[7].x_voidp = (void*)x7;
	x[8].x_voidp = (void*)x8;
	if(call_method((void*)this, 8594, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::getParagraphFormat(x1, x2, x3, x4, x5, x6, x7, x8);
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8570, x)) return (int)x[0].x_int;
	return this->QTextEdit::heightForWidth(x1);
    }
    virtual void hide() {
	xargs x[1];
	if(call_method((void*)this, 9675, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void home(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5314, x)) return;
	this->QMultiLineEdit::home(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8697, x)) return;
	this->QTextEdit::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8698, x)) return;
	this->QTextEdit::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8696, x)) return;
	this->QTextEdit::imStartEvent(x1);
    }
    virtual void indent() {
	xargs x[1];
	if(call_method((void*)this, 8630, x)) return;
	this->QTextEdit::indent();
    }
    virtual void insert(const QString& x1, bool x2, bool x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 8661, x)) return;
	this->QTextEdit::insert(x1, x2, x3, x4);
    }
    virtual void insertAndMark(const QString& x1, bool x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 5296, x)) return;
	this->QMultiLineEdit::insertAndMark(x1, x2);
    }
    virtual void insertAt(const QString& x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 8665, x)) return;
	this->QTextEdit::insertAt(x1, x2, x3);
    }
    virtual void insertAt(const QString& x1, int x2, int x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 5273, x)) return;
	this->QMultiLineEdit::insertAt(x1, x2, x3, x4);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void insertLine(const QString& x1, int x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5271, x)) return;
	this->QMultiLineEdit::insertLine(x1, x2);
    }
    virtual void insertParagraph(const QString& x1, int x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8667, x)) return;
	this->QTextEdit::insertParagraph(x1, x2);
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8688, x)) return;
	this->QTextEdit::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9705, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void killLine() {
	xargs x[1];
	if(call_method((void*)this, 5298, x)) return;
	this->QMultiLineEdit::killLine();
    }
    virtual void leaveEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9731, x)) return (int)x[0].x_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 6636, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QScrollView::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6686, x)) return;
	this->QScrollView::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6687, x)) return;
	this->QScrollView::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6684, x)) return;
	this->QScrollView::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6685, x)) return;
	this->QScrollView::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9687, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6593, x)) return;
	this->QScrollView::moveChild(x1, x2, x3);
    }
    virtual void moveCursor(QTextEdit::CursorAction x1, bool x2) {
	xargs x[3];
	x[1].x_long = (long)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 8652, x)) return;
	this->QTextEdit::moveCursor(x1, x2);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void newLine() {
	xargs x[1];
	if(call_method((void*)this, 5297, x)) return;
	this->QMultiLineEdit::newLine();
    }
    virtual void pageDown(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5301, x)) return;
	this->QMultiLineEdit::pageDown(x1);
    }
    virtual void pageUp(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5299, x)) return;
	this->QMultiLineEdit::pageUp(x1);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2944, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void paste() {
	xargs x[1];
	if(call_method((void*)this, 8626, x)) return;
	this->QTextEdit::paste();
    }
    virtual void pasteSubType(const QCString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8627, x)) return;
	this->QTextEdit::pasteSubType(x1);
    }
    virtual void placeCursor(const QPoint& x1, QTextCursor* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 8650, x)) return;
	this->QTextEdit::placeCursor(x1, x2);
    }
    virtual void polish() {
	xargs x[1];
	if(call_method((void*)this, 9681, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void redo() {
	xargs x[1];
	if(call_method((void*)this, 8624, x)) return;
	this->QTextEdit::redo();
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6637, x)) return;
	this->QScrollView::removeChild(x1);
    }
    virtual void removeLine(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5275, x)) return;
	this->QMultiLineEdit::removeLine(x1);
    }
    virtual void removeParagraph(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8666, x)) return;
	this->QTextEdit::removeParagraph(x1);
    }
    virtual void removeSelectedText(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8654, x)) return;
	this->QTextEdit::removeSelectedText(x1);
    }
    virtual void removeSelection(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8656, x)) return;
	this->QTextEdit::removeSelection(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_voidp = (void*)&x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 9621, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resetFormat() {
	xargs x[1];
	if(call_method((void*)this, 8646, x)) return;
	this->QTextEdit::resetFormat();
    }
    virtual void resize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6615, x)) return;
	this->QScrollView::resize(x1, x2);
    }
    virtual void resizeContents(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6640, x)) return;
	this->QScrollView::resizeContents(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8689, x)) return;
	this->QTextEdit::resizeEvent(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void scrollToAnchor(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8602, x)) return;
	this->QTextEdit::scrollToAnchor(x1);
    }
    virtual void scrollToBottom() {
	xargs x[1];
	if(call_method((void*)this, 8660, x)) return;
	this->QTextEdit::scrollToBottom();
    }
    virtual void selectAll(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8613, x)) return;
	this->QTextEdit::selectAll(x1);
    }
    virtual void setAcceptDrops(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9638, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	xargs x[1];
	if(call_method((void*)this, 9592, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAlignment(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5280, x)) return;
	this->QMultiLineEdit::setAlignment(x1);
    }
    virtual void setAutoMask(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9639, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setAutoUpdate(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 5289, x)) return;
	this->QMultiLineEdit::setAutoUpdate(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9550, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9641, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9590, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setBold(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8632, x)) return;
	this->QTextEdit::setBold(x1);
    }
    virtual void setCaption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9656, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8636, x)) return;
	this->QTextEdit::setColor(x1);
    }
    virtual void setContentsPos(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6642, x)) return;
	this->QScrollView::setContentsPos(x1, x2);
    }
    virtual void setCornerWidget(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6604, x)) return;
	this->QScrollView::setCornerWidget(x1);
    }
    virtual void setCurrentFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8658, x)) return;
	this->QTextEdit::setCurrentFont(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9577, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setCursorPosition(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8641, x)) return;
	this->QTextEdit::setCursorPosition(x1, x2);
    }
    virtual void setCursorPosition(int x1, int x2, bool x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 5276, x)) return;
	this->QMultiLineEdit::setCursorPosition(x1, x2, x3);
    }
    virtual void setDragAutoScroll(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6638, x)) return;
	this->QScrollView::setDragAutoScroll(x1);
    }
    virtual void setEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8599, x)) return;
	this->QTextEdit::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9554, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFamily(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8634, x)) return;
	this->QTextEdit::setFamily(x1);
    }
    virtual void setFocus() {
	xargs x[1];
	if(call_method((void*)this, 9660, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9595, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9597, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8637, x)) return;
	this->QTextEdit::setFont(x1);
    }
    virtual void setFormat(QTextFormat* x1, int x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8648, x)) return;
	this->QTextEdit::setFormat(x1, x2);
    }
    virtual void setFrameRect(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 2943, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2927, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9692, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 9691, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6681, x)) return;
	this->QScrollView::setHBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setHScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6602, x)) return;
	this->QScrollView::setHScrollBarMode(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9657, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9658, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setItalic(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8631, x)) return;
	this->QTextEdit::setItalic(x1);
    }
    virtual void setKeyCompression(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9750, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2937, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setLinkUnderline(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8604, x)) return;
	this->QTextEdit::setLinkUnderline(x1);
    }
    virtual void setMargin(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMargins(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 6675, x)) return;
	this->QScrollView::setMargins(x1, x2, x3, x4);
    }
    virtual void setMask(const QBitmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9584, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9585, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9527, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	xargs x[7];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_bool = (bool)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 9751, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMimeSourceFactory(QMimeSourceFactory* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8600, x)) return;
	this->QTextEdit::setMimeSourceFactory(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setModified(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8645, x)) return;
	this->QTextEdit::setModified(x1);
    }
    virtual void setMouseTracking(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9659, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9494, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setOverwriteMode(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8659, x)) return;
	this->QTextEdit::setOverwriteMode(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8545, x)) return;
	this->QTextEdit::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9565, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9567, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual void setPaper(const QBrush& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8603, x)) return;
	this->QTextEdit::setPaper(x1);
    }
    virtual void setParagType(QStyleSheetItem::DisplayMode x1, QStyleSheetItem::ListStyle x2) {
	xargs x[3];
	x[1].x_long = (long)x1;
	x[2].x_long = (long)x2;
	if(call_method((void*)this, 8640, x)) return;
	this->QTextEdit::setParagType(x1, x2);
    }
    virtual void setParagraphBackgroundColor(int x1, const QColor& x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 8668, x)) return;
	this->QTextEdit::setParagraphBackgroundColor(x1, x2);
    }
    virtual void setPointSize(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8635, x)) return;
	this->QTextEdit::setPointSize(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setReadOnly(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8622, x)) return;
	this->QTextEdit::setReadOnly(x1);
    }
    virtual void setResizePolicy(QScrollView::ResizePolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6586, x)) return;
	this->QScrollView::setResizePolicy(x1);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setSelection(int x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 8642, x)) return;
	this->QTextEdit::setSelection(x1, x2, x3, x4, x5);
    }
    virtual void setSelectionAttributes(int x1, const QColor& x2, bool x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 8644, x)) return;
	this->QTextEdit::setSelectionAttributes(x1, x2, x3);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9534, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9616, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setStyleSheet(QStyleSheet* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8601, x)) return;
	this->QTextEdit::setStyleSheet(x1);
    }
    virtual void setTabStopWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8615, x)) return;
	this->QTextEdit::setTabStopWidth(x1);
    }
    virtual void setText(const QString& x1, const QString& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 8611, x)) return;
	this->QTextEdit::setText(x1, x2);
    }
    virtual void setTextFormat(Qt::TextFormat x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8612, x)) return;
	this->QTextEdit::setTextFormat(x1);
    }
    virtual void setUnderline(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8633, x)) return;
	this->QTextEdit::setUnderline(x1);
    }
    virtual void setUndoDepth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8647, x)) return;
	this->QTextEdit::setUndoDepth(x1);
    }
    virtual void setUndoRedoEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8670, x)) return;
	this->QTextEdit::setUndoRedoEnabled(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9662, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6682, x)) return;
	this->QScrollView::setVBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setVScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6600, x)) return;
	this->QScrollView::setVScrollBarMode(x1);
    }
    virtual void setVerticalAlignment(QTextEdit::VerticalAlignment x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8638, x)) return;
	this->QTextEdit::setVerticalAlignment(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9744, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	xargs x[2];
	x[1].x_uint = (uint)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void setWordWrap(QTextEdit::WordWrap x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8605, x)) return;
	this->QTextEdit::setWordWrap(x1);
    }
    virtual void setWrapColumnOrWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8606, x)) return;
	this->QTextEdit::setWrapColumnOrWidth(x1);
    }
    virtual void setWrapPolicy(QTextEdit::WrapPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8607, x)) return;
	this->QTextEdit::setWrapPolicy(x1);
    }
    virtual void show() {
	xargs x[1];
	if(call_method((void*)this, 6617, x)) return;
	this->QScrollView::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9723, x)) return;
	this->QWidget::showEvent(x1);
    }
    virtual void showMaximized() {
	xargs x[1];
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	xargs x[1];
	if(call_method((void*)this, 9677, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	xargs x[1];
	if(call_method((void*)this, 9680, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 8580, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QTextEdit::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	xargs x[1];
	if(call_method((void*)this, 9615, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].x_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6588, x)) return;
	this->QScrollView::styleChange(x1);
    }
    virtual void sync() {
	xargs x[1];
	if(call_method((void*)this, 8621, x)) return;
	this->QTextEdit::sync();
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void undo() {
	xargs x[1];
	if(call_method((void*)this, 8623, x)) return;
	this->QTextEdit::undo();
    }
    virtual void unsetCursor() {
	xargs x[1];
	if(call_method((void*)this, 9578, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	xargs x[1];
	if(call_method((void*)this, 9725, x)) return;
	this->QWidget::updateMask();
    }
    virtual void viewportContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6673, x)) return;
	this->QScrollView::viewportContextMenuEvent(x1);
    }
    virtual void viewportDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6668, x)) return;
	this->QScrollView::viewportDragEnterEvent(x1);
    }
    virtual void viewportDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6670, x)) return;
	this->QScrollView::viewportDragLeaveEvent(x1);
    }
    virtual void viewportDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6669, x)) return;
	this->QScrollView::viewportDragMoveEvent(x1);
    }
    virtual void viewportDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6671, x)) return;
	this->QScrollView::viewportDropEvent(x1);
    }
    virtual void viewportMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6666, x)) return;
	this->QScrollView::viewportMouseDoubleClickEvent(x1);
    }
    virtual void viewportMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6667, x)) return;
	this->QScrollView::viewportMouseMoveEvent(x1);
    }
    virtual void viewportMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6664, x)) return;
	this->QScrollView::viewportMousePressEvent(x1);
    }
    virtual void viewportMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6665, x)) return;
	this->QScrollView::viewportMouseReleaseEvent(x1);
    }
    virtual void viewportPaintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6662, x)) return;
	this->QScrollView::viewportPaintEvent(x1);
    }
    virtual void viewportResizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8690, x)) return;
	this->QTextEdit::viewportResizeEvent(x1);
    }
    virtual void viewportWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6672, x)) return;
	this->QScrollView::viewportWheelEvent(x1);
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6688, x)) return;
	this->QScrollView::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8711, x)) return;
	this->QTextEdit::windowActivationChange(x1);
    }
    virtual void zoomIn() {
	xargs x[1];
	if(call_method((void*)this, 8617, x)) return;
	this->QTextEdit::zoomIn();
    }
    virtual void zoomIn(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8616, x)) return;
	this->QTextEdit::zoomIn(x1);
    }
    virtual void zoomOut() {
	xargs x[1];
	if(call_method((void*)this, 8619, x)) return;
	this->QTextEdit::zoomOut();
    }
    virtual void zoomOut(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8618, x)) return;
	this->QTextEdit::zoomOut(x1);
    }
    virtual void zoomTo(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8620, x)) return;
	this->QTextEdit::zoomTo(x1);
    }
    ~x_QMultiLineEdit() {}
};
void xcall_QMultiLineEdit(xargs *x, void *s, int xi) {
    x_QMultiLineEdit *xself = (x_QMultiLineEdit*)s;
    switch(xi) {
	case 0: x_QMultiLineEdit::x_0(x);	break;
	case 1: x_QMultiLineEdit::x_1(x);	break;
	case 2: x_QMultiLineEdit::x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
	case 25: xself->x_25(x);	break;
	case 26: xself->x_26(x);	break;
	case 27: xself->x_27(x);	break;
	case 28: xself->x_28(x);	break;
	case 29: xself->x_29(x);	break;
	case 30: xself->x_30(x);	break;
	case 31: xself->x_31(x);	break;
	case 32: xself->x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: delete (QMultiLineEdit*)xself;	break;
    }
}
