//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qevent.h>

class x_QCustomEvent : public QCustomEvent {
public:
    static void x_0(xargs *x) {
	// QCustomEvent(int)
	x_QCustomEvent* xret = new x_QCustomEvent((int)x[1].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QCustomEvent(int x1) : QCustomEvent(x1) {
    }
    static void x_1(xargs *x) {
	// QCustomEvent(QEvent::Type, void*)
	x_QCustomEvent* xret = new x_QCustomEvent((QEvent::Type)x[1].x_long,(void*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QCustomEvent(QEvent::Type x1, void* x2) : QCustomEvent(x1, x2) {
    }
    void x_2(xargs *x) const {
	// data()
	void* xret = this->QCustomEvent::data();
	x[0].x_voidp = (void*)xret;
    }
    void x_3(xargs *x) {
	// setData(void*)
	this->QCustomEvent::setData((void*)x[1].x_voidp);
    }
    ~x_QCustomEvent() {}
};
void xcall_QCustomEvent(xargs *x, void *s, int xi) {
    x_QCustomEvent *xself = (x_QCustomEvent*)s;
    switch(xi) {
	case 0: x_QCustomEvent::x_0(x);	break;
	case 1: x_QCustomEvent::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
    }
}
