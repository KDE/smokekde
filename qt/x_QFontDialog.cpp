//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qfontdialog.h>
#include <qfont.h>

class x_QFontDialog {
private:
    QFontDialog *xthis;
public:
    x_QFontDialog(void *x) : xthis((QFontDialog*)x) {}
    static void x_0(Smoke::Stack x) {
	// getFont(bool*, const QFont&, QWidget*, const char*)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp,*(const QFont *)x[2].s_class,(QWidget*)x[3].s_class,(const char*)x[4].s_voidp);
	x[0].s_class = (void*)new QFont(xret);
    }
    static void x_1(Smoke::Stack x) {
	// getFont(bool*, const QFont&, QWidget*)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp,*(const QFont *)x[2].s_class,(QWidget*)x[3].s_class);
	x[0].s_class = (void*)new QFont(xret);
    }
    static void x_2(Smoke::Stack x) {
	// getFont(bool*, const QFont&)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp,*(const QFont *)x[2].s_class);
	x[0].s_class = (void*)new QFont(xret);
    }
    static void x_3(Smoke::Stack x) {
	// getFont(bool*, QWidget*, const char*)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp,(QWidget*)x[2].s_class,(const char*)x[3].s_voidp);
	x[0].s_class = (void*)new QFont(xret);
    }
    static void x_4(Smoke::Stack x) {
	// getFont(bool*, QWidget*)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp,(QWidget*)x[2].s_class);
	x[0].s_class = (void*)new QFont(xret);
    }
    static void x_5(Smoke::Stack x) {
	// getFont(bool*)
	QFont xret = QFontDialog::getFont((bool*)x[1].s_voidp);
	x[0].s_class = (void*)new QFont(xret);
    }
    ~x_QFontDialog() { qt_Smoke->binding->deleted(118, (void*)this); }
};
void xcall_QFontDialog(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QFontDialog xtmp(obj), *xself = &xtmp;
    switch(xi) {
	case 0: x_QFontDialog::x_0(args);	break;
	case 1: x_QFontDialog::x_1(args);	break;
	case 2: x_QFontDialog::x_2(args);	break;
	case 3: x_QFontDialog::x_3(args);	break;
	case 4: x_QFontDialog::x_4(args);	break;
	case 5: x_QFontDialog::x_5(args);	break;
    }
}
