//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qfontdialog.h>
#include <qfont.h>

class x_QFontDialog {
private:
    QFontDialog *xthis;
public:
    x_QFontDialog(void *x) : xthis((QFontDialog*)x) {}
    static void x_0(xargs *x) {
	// getFont(bool*, const QFont&, QWidget*, const char*)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp,*(const QFont *)x[2].x_voidp,(QWidget*)x[3].x_voidp,(const char*)x[4].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_1(xargs *x) {
	// getFont(bool*, const QFont&, QWidget*)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp,*(const QFont *)x[2].x_voidp,(QWidget*)x[3].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_2(xargs *x) {
	// getFont(bool*, const QFont&)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp,*(const QFont *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_3(xargs *x) {
	// getFont(bool*, QWidget*, const char*)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp,(QWidget*)x[2].x_voidp,(const char*)x[3].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_4(xargs *x) {
	// getFont(bool*, QWidget*)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp,(QWidget*)x[2].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_5(xargs *x) {
	// getFont(bool*)
	QFont xret = QFontDialog::getFont((bool*)x[1].x_voidp);
	x[0].x_voidp = (void*)new QFont(xret);
    }
    ~x_QFontDialog() {}
};
void xcall_QFontDialog(xargs *x, void *s, int xi) {
    x_QFontDialog xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: x_QFontDialog::x_0(x);	break;
	case 1: x_QFontDialog::x_1(x);	break;
	case 2: x_QFontDialog::x_2(x);	break;
	case 3: x_QFontDialog::x_3(x);	break;
	case 4: x_QFontDialog::x_4(x);	break;
	case 5: x_QFontDialog::x_5(x);	break;
    }
}
