//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qstring.h>
#include <qsize.h>
#include <qprinter.h>

class x_QPrinter : public QPrinter {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QPrinter::ScreenResolution;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QPrinter::PrinterResolution;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QPrinter::HighResolution;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QPrinter::Compatible;
    }
    static void x_4(xargs *x) {
	x[0].x_long = (long)QPrinter::Portrait;
    }
    static void x_5(xargs *x) {
	x[0].x_long = (long)QPrinter::Landscape;
    }
    static void x_6(xargs *x) {
	x[0].x_long = (long)QPrinter::A4;
    }
    static void x_7(xargs *x) {
	x[0].x_long = (long)QPrinter::B5;
    }
    static void x_8(xargs *x) {
	x[0].x_long = (long)QPrinter::Letter;
    }
    static void x_9(xargs *x) {
	x[0].x_long = (long)QPrinter::Legal;
    }
    static void x_10(xargs *x) {
	x[0].x_long = (long)QPrinter::Executive;
    }
    static void x_11(xargs *x) {
	x[0].x_long = (long)QPrinter::A0;
    }
    static void x_12(xargs *x) {
	x[0].x_long = (long)QPrinter::A1;
    }
    static void x_13(xargs *x) {
	x[0].x_long = (long)QPrinter::A2;
    }
    static void x_14(xargs *x) {
	x[0].x_long = (long)QPrinter::A3;
    }
    static void x_15(xargs *x) {
	x[0].x_long = (long)QPrinter::A5;
    }
    static void x_16(xargs *x) {
	x[0].x_long = (long)QPrinter::A6;
    }
    static void x_17(xargs *x) {
	x[0].x_long = (long)QPrinter::A7;
    }
    static void x_18(xargs *x) {
	x[0].x_long = (long)QPrinter::A8;
    }
    static void x_19(xargs *x) {
	x[0].x_long = (long)QPrinter::A9;
    }
    static void x_20(xargs *x) {
	x[0].x_long = (long)QPrinter::B0;
    }
    static void x_21(xargs *x) {
	x[0].x_long = (long)QPrinter::B1;
    }
    static void x_22(xargs *x) {
	x[0].x_long = (long)QPrinter::B10;
    }
    static void x_23(xargs *x) {
	x[0].x_long = (long)QPrinter::B2;
    }
    static void x_24(xargs *x) {
	x[0].x_long = (long)QPrinter::B3;
    }
    static void x_25(xargs *x) {
	x[0].x_long = (long)QPrinter::B4;
    }
    static void x_26(xargs *x) {
	x[0].x_long = (long)QPrinter::B6;
    }
    static void x_27(xargs *x) {
	x[0].x_long = (long)QPrinter::B7;
    }
    static void x_28(xargs *x) {
	x[0].x_long = (long)QPrinter::B8;
    }
    static void x_29(xargs *x) {
	x[0].x_long = (long)QPrinter::B9;
    }
    static void x_30(xargs *x) {
	x[0].x_long = (long)QPrinter::C5E;
    }
    static void x_31(xargs *x) {
	x[0].x_long = (long)QPrinter::Comm10E;
    }
    static void x_32(xargs *x) {
	x[0].x_long = (long)QPrinter::DLE;
    }
    static void x_33(xargs *x) {
	x[0].x_long = (long)QPrinter::Folio;
    }
    static void x_34(xargs *x) {
	x[0].x_long = (long)QPrinter::Ledger;
    }
    static void x_35(xargs *x) {
	x[0].x_long = (long)QPrinter::Tabloid;
    }
    static void x_36(xargs *x) {
	x[0].x_long = (long)QPrinter::Custom;
    }
    static void x_37(xargs *x) {
	x[0].x_long = (long)QPrinter::NPageSize;
    }
    static void x_38(xargs *x) {
	x[0].x_long = (long)QPrinter::FirstPageFirst;
    }
    static void x_39(xargs *x) {
	x[0].x_long = (long)QPrinter::LastPageFirst;
    }
    static void x_40(xargs *x) {
	x[0].x_long = (long)QPrinter::GrayScale;
    }
    static void x_41(xargs *x) {
	x[0].x_long = (long)QPrinter::Color;
    }
    static void x_42(xargs *x) {
	x[0].x_long = (long)QPrinter::OnlyOne;
    }
    static void x_43(xargs *x) {
	x[0].x_long = (long)QPrinter::Lower;
    }
    static void x_44(xargs *x) {
	x[0].x_long = (long)QPrinter::Middle;
    }
    static void x_45(xargs *x) {
	x[0].x_long = (long)QPrinter::Manual;
    }
    static void x_46(xargs *x) {
	x[0].x_long = (long)QPrinter::Envelope;
    }
    static void x_47(xargs *x) {
	x[0].x_long = (long)QPrinter::EnvelopeManual;
    }
    static void x_48(xargs *x) {
	x[0].x_long = (long)QPrinter::Auto;
    }
    static void x_49(xargs *x) {
	x[0].x_long = (long)QPrinter::Tractor;
    }
    static void x_50(xargs *x) {
	x[0].x_long = (long)QPrinter::SmallFormat;
    }
    static void x_51(xargs *x) {
	x[0].x_long = (long)QPrinter::LargeFormat;
    }
    static void x_52(xargs *x) {
	x[0].x_long = (long)QPrinter::LargeCapacity;
    }
    static void x_53(xargs *x) {
	x[0].x_long = (long)QPrinter::Cassette;
    }
    static void x_54(xargs *x) {
	x[0].x_long = (long)QPrinter::FormSource;
    }
    static void x_55(xargs *x) {
	// QPrinter(QPrinter::PrinterMode)
	x_QPrinter* xret = new x_QPrinter((QPrinter::PrinterMode)x[1].x_long);
	x[0].x_voidp = (void*)xret;
    }
    x_QPrinter(QPrinter::PrinterMode x1) : QPrinter(x1) {
    }
    static void x_56(xargs *x) {
	// QPrinter()
	x_QPrinter* xret = new x_QPrinter();
	x[0].x_voidp = (void*)xret;
    }
    x_QPrinter() : QPrinter() {
    }
    void x_57(xargs *x) const {
	// printerName()
	QString xret = this->QPrinter::printerName();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_58(xargs *x) {
	// setPrinterName(const QString&)
	this->QPrinter::setPrinterName(*(const QString *)x[1].x_voidp);
    }
    void x_59(xargs *x) const {
	// outputToFile()
	bool xret = this->QPrinter::outputToFile();
	x[0].x_bool = (bool)xret;
    }
    void x_60(xargs *x) {
	// setOutputToFile(bool)
	this->QPrinter::setOutputToFile((bool)x[1].x_bool);
    }
    void x_61(xargs *x) const {
	// outputFileName()
	QString xret = this->QPrinter::outputFileName();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_62(xargs *x) {
	// setOutputFileName(const QString&)
	this->QPrinter::setOutputFileName(*(const QString *)x[1].x_voidp);
    }
    void x_63(xargs *x) const {
	// printProgram()
	QString xret = this->QPrinter::printProgram();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_64(xargs *x) {
	// setPrintProgram(const QString&)
	this->QPrinter::setPrintProgram(*(const QString *)x[1].x_voidp);
    }
    void x_65(xargs *x) const {
	// printerSelectionOption()
	QString xret = this->QPrinter::printerSelectionOption();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_66(xargs *x) {
	// setPrinterSelectionOption(const QString&)
	this->QPrinter::setPrinterSelectionOption(*(const QString *)x[1].x_voidp);
    }
    void x_67(xargs *x) const {
	// docName()
	QString xret = this->QPrinter::docName();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_68(xargs *x) {
	// setDocName(const QString&)
	this->QPrinter::setDocName(*(const QString *)x[1].x_voidp);
    }
    void x_69(xargs *x) const {
	// creator()
	QString xret = this->QPrinter::creator();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_70(xargs *x) {
	// setCreator(const QString&)
	this->QPrinter::setCreator(*(const QString *)x[1].x_voidp);
    }
    void x_71(xargs *x) const {
	// orientation()
	QPrinter::Orientation xret = this->QPrinter::orientation();
	x[0].x_long = (long)xret;
    }
    void x_72(xargs *x) {
	// setOrientation(QPrinter::Orientation)
	this->QPrinter::setOrientation((QPrinter::Orientation)x[1].x_long);
    }
    void x_73(xargs *x) const {
	// pageSize()
	QPrinter::PageSize xret = this->QPrinter::pageSize();
	x[0].x_long = (long)xret;
    }
    void x_74(xargs *x) {
	// setPageSize(QPrinter::PageSize)
	this->QPrinter::setPageSize((QPrinter::PageSize)x[1].x_long);
    }
    void x_75(xargs *x) {
	// setPageOrder(QPrinter::PageOrder)
	this->QPrinter::setPageOrder((QPrinter::PageOrder)x[1].x_long);
    }
    void x_76(xargs *x) const {
	// pageOrder()
	QPrinter::PageOrder xret = this->QPrinter::pageOrder();
	x[0].x_long = (long)xret;
    }
    void x_77(xargs *x) {
	// setResolution(int)
	this->QPrinter::setResolution((int)x[1].x_int);
    }
    void x_78(xargs *x) const {
	// resolution()
	int xret = this->QPrinter::resolution();
	x[0].x_int = (int)xret;
    }
    void x_79(xargs *x) {
	// setColorMode(QPrinter::ColorMode)
	this->QPrinter::setColorMode((QPrinter::ColorMode)x[1].x_long);
    }
    void x_80(xargs *x) const {
	// colorMode()
	QPrinter::ColorMode xret = this->QPrinter::colorMode();
	x[0].x_long = (long)xret;
    }
    void x_81(xargs *x) {
	// setFullPage(bool)
	this->QPrinter::setFullPage((bool)x[1].x_bool);
    }
    void x_82(xargs *x) const {
	// fullPage()
	bool xret = this->QPrinter::fullPage();
	x[0].x_bool = (bool)xret;
    }
    void x_83(xargs *x) const {
	// margins()
	QSize xret = this->QPrinter::margins();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_84(xargs *x) const {
	// fromPage()
	int xret = this->QPrinter::fromPage();
	x[0].x_int = (int)xret;
    }
    void x_85(xargs *x) const {
	// toPage()
	int xret = this->QPrinter::toPage();
	x[0].x_int = (int)xret;
    }
    void x_86(xargs *x) {
	// setFromTo(int, int)
	this->QPrinter::setFromTo((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_87(xargs *x) const {
	// minPage()
	int xret = this->QPrinter::minPage();
	x[0].x_int = (int)xret;
    }
    void x_88(xargs *x) const {
	// maxPage()
	int xret = this->QPrinter::maxPage();
	x[0].x_int = (int)xret;
    }
    void x_89(xargs *x) {
	// setMinMax(int, int)
	this->QPrinter::setMinMax((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_90(xargs *x) const {
	// numCopies()
	int xret = this->QPrinter::numCopies();
	x[0].x_int = (int)xret;
    }
    void x_91(xargs *x) {
	// setNumCopies(int)
	this->QPrinter::setNumCopies((int)x[1].x_int);
    }
    void x_92(xargs *x) const {
	// collateCopiesEnabled()
	bool xret = this->QPrinter::collateCopiesEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_93(xargs *x) {
	// setCollateCopiesEnabled(bool)
	this->QPrinter::setCollateCopiesEnabled((bool)x[1].x_bool);
    }
    void x_94(xargs *x) const {
	// collateCopies()
	bool xret = this->QPrinter::collateCopies();
	x[0].x_bool = (bool)xret;
    }
    void x_95(xargs *x) {
	// setCollateCopies(bool)
	this->QPrinter::setCollateCopies((bool)x[1].x_bool);
    }
    void x_96(xargs *x) {
	// newPage()
	bool xret = this->QPrinter::newPage();
	x[0].x_bool = (bool)xret;
    }
    void x_97(xargs *x) {
	// abort()
	bool xret = this->QPrinter::abort();
	x[0].x_bool = (bool)xret;
    }
    void x_98(xargs *x) const {
	// aborted()
	bool xret = this->QPrinter::aborted();
	x[0].x_bool = (bool)xret;
    }
    void x_99(xargs *x) {
	// setup(QWidget*)
	bool xret = this->QPrinter::setup((QWidget*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_100(xargs *x) {
	// setup()
	bool xret = this->QPrinter::setup();
	x[0].x_bool = (bool)xret;
    }
    void x_101(xargs *x) const {
	// paperSource()
	QPrinter::PaperSource xret = this->QPrinter::paperSource();
	x[0].x_long = (long)xret;
    }
    void x_102(xargs *x) {
	// setPaperSource(QPrinter::PaperSource)
	this->QPrinter::setPaperSource((QPrinter::PaperSource)x[1].x_long);
    }
    void x_103(xargs *x) {
	// cmd(int, QPainter*, QPDevCmdParam*)
	bool xret = this->QPrinter::cmd((int)x[1].x_int,(QPainter*)x[2].x_voidp,(QPDevCmdParam*)x[3].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_104(xargs *x) const {
	// metric(int)
	int xret = this->QPrinter::metric((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 6163, x)) return (bool)x[0].x_bool;
	return this->QPrinter::cmd(x1, x2, x3);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 6164, x)) return (int)x[0].x_int;
	return this->QPrinter::metric(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 6138, x)) return (int)x[0].x_int;
	return this->QPrinter::resolution();
    }
    virtual void setColorMode(QPrinter::ColorMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6139, x)) return;
	this->QPrinter::setColorMode(x1);
    }
    virtual void setCreator(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6130, x)) return;
	this->QPrinter::setCreator(x1);
    }
    virtual void setDocName(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6128, x)) return;
	this->QPrinter::setDocName(x1);
    }
    virtual void setFromTo(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6146, x)) return;
	this->QPrinter::setFromTo(x1, x2);
    }
    virtual void setFullPage(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6141, x)) return;
	this->QPrinter::setFullPage(x1);
    }
    virtual void setMinMax(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6149, x)) return;
	this->QPrinter::setMinMax(x1, x2);
    }
    virtual void setNumCopies(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 6151, x)) return;
	this->QPrinter::setNumCopies(x1);
    }
    virtual void setOrientation(QPrinter::Orientation x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6132, x)) return;
	this->QPrinter::setOrientation(x1);
    }
    virtual void setOutputFileName(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6122, x)) return;
	this->QPrinter::setOutputFileName(x1);
    }
    virtual void setOutputToFile(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6120, x)) return;
	this->QPrinter::setOutputToFile(x1);
    }
    virtual void setPageOrder(QPrinter::PageOrder x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6135, x)) return;
	this->QPrinter::setPageOrder(x1);
    }
    virtual void setPageSize(QPrinter::PageSize x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6134, x)) return;
	this->QPrinter::setPageSize(x1);
    }
    virtual void setPaperSource(QPrinter::PaperSource x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6162, x)) return;
	this->QPrinter::setPaperSource(x1);
    }
    virtual void setPrintProgram(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6124, x)) return;
	this->QPrinter::setPrintProgram(x1);
    }
    virtual void setPrinterName(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6118, x)) return;
	this->QPrinter::setPrinterName(x1);
    }
    virtual void setPrinterSelectionOption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6126, x)) return;
	this->QPrinter::setPrinterSelectionOption(x1);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 6137, x)) return;
	this->QPrinter::setResolution(x1);
    }
    ~x_QPrinter() {}
};
void xcall_QPrinter(xargs *x, void *s, int xi) {
    x_QPrinter *xself = (x_QPrinter*)s;
    switch(xi) {
	case 0: x_QPrinter::x_0(x);	break;
	case 1: x_QPrinter::x_1(x);	break;
	case 2: x_QPrinter::x_2(x);	break;
	case 3: x_QPrinter::x_3(x);	break;
	case 4: x_QPrinter::x_4(x);	break;
	case 5: x_QPrinter::x_5(x);	break;
	case 6: x_QPrinter::x_6(x);	break;
	case 7: x_QPrinter::x_7(x);	break;
	case 8: x_QPrinter::x_8(x);	break;
	case 9: x_QPrinter::x_9(x);	break;
	case 10: x_QPrinter::x_10(x);	break;
	case 11: x_QPrinter::x_11(x);	break;
	case 12: x_QPrinter::x_12(x);	break;
	case 13: x_QPrinter::x_13(x);	break;
	case 14: x_QPrinter::x_14(x);	break;
	case 15: x_QPrinter::x_15(x);	break;
	case 16: x_QPrinter::x_16(x);	break;
	case 17: x_QPrinter::x_17(x);	break;
	case 18: x_QPrinter::x_18(x);	break;
	case 19: x_QPrinter::x_19(x);	break;
	case 20: x_QPrinter::x_20(x);	break;
	case 21: x_QPrinter::x_21(x);	break;
	case 22: x_QPrinter::x_22(x);	break;
	case 23: x_QPrinter::x_23(x);	break;
	case 24: x_QPrinter::x_24(x);	break;
	case 25: x_QPrinter::x_25(x);	break;
	case 26: x_QPrinter::x_26(x);	break;
	case 27: x_QPrinter::x_27(x);	break;
	case 28: x_QPrinter::x_28(x);	break;
	case 29: x_QPrinter::x_29(x);	break;
	case 30: x_QPrinter::x_30(x);	break;
	case 31: x_QPrinter::x_31(x);	break;
	case 32: x_QPrinter::x_32(x);	break;
	case 33: x_QPrinter::x_33(x);	break;
	case 34: x_QPrinter::x_34(x);	break;
	case 35: x_QPrinter::x_35(x);	break;
	case 36: x_QPrinter::x_36(x);	break;
	case 37: x_QPrinter::x_37(x);	break;
	case 38: x_QPrinter::x_38(x);	break;
	case 39: x_QPrinter::x_39(x);	break;
	case 40: x_QPrinter::x_40(x);	break;
	case 41: x_QPrinter::x_41(x);	break;
	case 42: x_QPrinter::x_42(x);	break;
	case 43: x_QPrinter::x_43(x);	break;
	case 44: x_QPrinter::x_44(x);	break;
	case 45: x_QPrinter::x_45(x);	break;
	case 46: x_QPrinter::x_46(x);	break;
	case 47: x_QPrinter::x_47(x);	break;
	case 48: x_QPrinter::x_48(x);	break;
	case 49: x_QPrinter::x_49(x);	break;
	case 50: x_QPrinter::x_50(x);	break;
	case 51: x_QPrinter::x_51(x);	break;
	case 52: x_QPrinter::x_52(x);	break;
	case 53: x_QPrinter::x_53(x);	break;
	case 54: x_QPrinter::x_54(x);	break;
	case 55: x_QPrinter::x_55(x);	break;
	case 56: x_QPrinter::x_56(x);	break;
	case 57: xself->x_57(x);	break;
	case 58: xself->x_58(x);	break;
	case 59: xself->x_59(x);	break;
	case 60: xself->x_60(x);	break;
	case 61: xself->x_61(x);	break;
	case 62: xself->x_62(x);	break;
	case 63: xself->x_63(x);	break;
	case 64: xself->x_64(x);	break;
	case 65: xself->x_65(x);	break;
	case 66: xself->x_66(x);	break;
	case 67: xself->x_67(x);	break;
	case 68: xself->x_68(x);	break;
	case 69: xself->x_69(x);	break;
	case 70: xself->x_70(x);	break;
	case 71: xself->x_71(x);	break;
	case 72: xself->x_72(x);	break;
	case 73: xself->x_73(x);	break;
	case 74: xself->x_74(x);	break;
	case 75: xself->x_75(x);	break;
	case 76: xself->x_76(x);	break;
	case 77: xself->x_77(x);	break;
	case 78: xself->x_78(x);	break;
	case 79: xself->x_79(x);	break;
	case 80: xself->x_80(x);	break;
	case 81: xself->x_81(x);	break;
	case 82: xself->x_82(x);	break;
	case 83: xself->x_83(x);	break;
	case 84: xself->x_84(x);	break;
	case 85: xself->x_85(x);	break;
	case 86: xself->x_86(x);	break;
	case 87: xself->x_87(x);	break;
	case 88: xself->x_88(x);	break;
	case 89: xself->x_89(x);	break;
	case 90: xself->x_90(x);	break;
	case 91: xself->x_91(x);	break;
	case 92: xself->x_92(x);	break;
	case 93: xself->x_93(x);	break;
	case 94: xself->x_94(x);	break;
	case 95: xself->x_95(x);	break;
	case 96: xself->x_96(x);	break;
	case 97: xself->x_97(x);	break;
	case 98: xself->x_98(x);	break;
	case 99: xself->x_99(x);	break;
	case 100: xself->x_100(x);	break;
	case 101: xself->x_101(x);	break;
	case 102: xself->x_102(x);	break;
	case 103: xself->x_103(x);	break;
	case 104: xself->x_104(x);	break;
	case 105: delete (QPrinter*)xself;	break;
    }
}
