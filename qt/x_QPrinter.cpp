//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qstring.h>
#include <qsize.h>
#include <qprinter.h>

class x_QPrinter : public QPrinter {
public:
    static void x_0(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::ScreenResolution;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::PrinterResolution;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::HighResolution;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Compatible;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Portrait;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Landscape;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A4;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B5;
    }
    static void x_8(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Letter;
    }
    static void x_9(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Legal;
    }
    static void x_10(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Executive;
    }
    static void x_11(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A0;
    }
    static void x_12(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A1;
    }
    static void x_13(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A2;
    }
    static void x_14(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A3;
    }
    static void x_15(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A5;
    }
    static void x_16(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A6;
    }
    static void x_17(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A7;
    }
    static void x_18(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A8;
    }
    static void x_19(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::A9;
    }
    static void x_20(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B0;
    }
    static void x_21(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B1;
    }
    static void x_22(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B10;
    }
    static void x_23(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B2;
    }
    static void x_24(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B3;
    }
    static void x_25(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B4;
    }
    static void x_26(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B6;
    }
    static void x_27(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B7;
    }
    static void x_28(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B8;
    }
    static void x_29(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::B9;
    }
    static void x_30(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::C5E;
    }
    static void x_31(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Comm10E;
    }
    static void x_32(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::DLE;
    }
    static void x_33(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Folio;
    }
    static void x_34(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Ledger;
    }
    static void x_35(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Tabloid;
    }
    static void x_36(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Custom;
    }
    static void x_37(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::NPageSize;
    }
    static void x_38(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::FirstPageFirst;
    }
    static void x_39(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::LastPageFirst;
    }
    static void x_40(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::GrayScale;
    }
    static void x_41(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Color;
    }
    static void x_42(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::OnlyOne;
    }
    static void x_43(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Lower;
    }
    static void x_44(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Middle;
    }
    static void x_45(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Manual;
    }
    static void x_46(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Envelope;
    }
    static void x_47(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::EnvelopeManual;
    }
    static void x_48(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Auto;
    }
    static void x_49(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Tractor;
    }
    static void x_50(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::SmallFormat;
    }
    static void x_51(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::LargeFormat;
    }
    static void x_52(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::LargeCapacity;
    }
    static void x_53(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::Cassette;
    }
    static void x_54(Smoke::Stack x) {
	x[0].s_enum = (long)QPrinter::FormSource;
    }
    static void x_55(Smoke::Stack x) {
	// QPrinter(QPrinter::PrinterMode)
	x_QPrinter* xret = new x_QPrinter(*(QPrinter::PrinterMode *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QPrinter(QPrinter::PrinterMode x1) : QPrinter(x1) {
    }
    static void x_56(Smoke::Stack x) {
	// QPrinter()
	x_QPrinter* xret = new x_QPrinter();
	x[0].s_class = (void*)xret;
    }
    x_QPrinter() : QPrinter() {
    }
    void x_57(Smoke::Stack x) const {
	// printerName()
	QString xret = this->QPrinter::printerName();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_58(Smoke::Stack x) {
	// setPrinterName(const QString&)
	this->QPrinter::setPrinterName(*(const QString *)x[1].s_class);
    }
    void x_59(Smoke::Stack x) const {
	// outputToFile()
	bool xret = this->QPrinter::outputToFile();
	x[0].s_bool = (bool)xret;
    }
    void x_60(Smoke::Stack x) {
	// setOutputToFile(bool)
	this->QPrinter::setOutputToFile((bool)x[1].s_bool);
    }
    void x_61(Smoke::Stack x) const {
	// outputFileName()
	QString xret = this->QPrinter::outputFileName();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_62(Smoke::Stack x) {
	// setOutputFileName(const QString&)
	this->QPrinter::setOutputFileName(*(const QString *)x[1].s_class);
    }
    void x_63(Smoke::Stack x) const {
	// printProgram()
	QString xret = this->QPrinter::printProgram();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_64(Smoke::Stack x) {
	// setPrintProgram(const QString&)
	this->QPrinter::setPrintProgram(*(const QString *)x[1].s_class);
    }
    void x_65(Smoke::Stack x) const {
	// printerSelectionOption()
	QString xret = this->QPrinter::printerSelectionOption();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_66(Smoke::Stack x) {
	// setPrinterSelectionOption(const QString&)
	this->QPrinter::setPrinterSelectionOption(*(const QString *)x[1].s_class);
    }
    void x_67(Smoke::Stack x) const {
	// docName()
	QString xret = this->QPrinter::docName();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_68(Smoke::Stack x) {
	// setDocName(const QString&)
	this->QPrinter::setDocName(*(const QString *)x[1].s_class);
    }
    void x_69(Smoke::Stack x) const {
	// creator()
	QString xret = this->QPrinter::creator();
	x[0].s_class = (void*)new QString(xret);
    }
    void x_70(Smoke::Stack x) {
	// setCreator(const QString&)
	this->QPrinter::setCreator(*(const QString *)x[1].s_class);
    }
    void x_71(Smoke::Stack x) const {
	// orientation()
	QPrinter::Orientation xret = this->QPrinter::orientation();
	x[0].s_class = (void*)new QPrinter::Orientation(xret);
    }
    void x_72(Smoke::Stack x) {
	// setOrientation(QPrinter::Orientation)
	this->QPrinter::setOrientation(*(QPrinter::Orientation *)x[1].s_class);
    }
    void x_73(Smoke::Stack x) const {
	// pageSize()
	QPrinter::PageSize xret = this->QPrinter::pageSize();
	x[0].s_class = (void*)new QPrinter::PageSize(xret);
    }
    void x_74(Smoke::Stack x) {
	// setPageSize(QPrinter::PageSize)
	this->QPrinter::setPageSize(*(QPrinter::PageSize *)x[1].s_class);
    }
    void x_75(Smoke::Stack x) {
	// setPageOrder(QPrinter::PageOrder)
	this->QPrinter::setPageOrder(*(QPrinter::PageOrder *)x[1].s_class);
    }
    void x_76(Smoke::Stack x) const {
	// pageOrder()
	QPrinter::PageOrder xret = this->QPrinter::pageOrder();
	x[0].s_class = (void*)new QPrinter::PageOrder(xret);
    }
    void x_77(Smoke::Stack x) {
	// setResolution(int)
	this->QPrinter::setResolution((int)x[1].s_int);
    }
    void x_78(Smoke::Stack x) const {
	// resolution()
	int xret = this->QPrinter::resolution();
	x[0].s_int = (int)xret;
    }
    void x_79(Smoke::Stack x) {
	// setColorMode(QPrinter::ColorMode)
	this->QPrinter::setColorMode(*(QPrinter::ColorMode *)x[1].s_class);
    }
    void x_80(Smoke::Stack x) const {
	// colorMode()
	QPrinter::ColorMode xret = this->QPrinter::colorMode();
	x[0].s_class = (void*)new QPrinter::ColorMode(xret);
    }
    void x_81(Smoke::Stack x) {
	// setFullPage(bool)
	this->QPrinter::setFullPage((bool)x[1].s_bool);
    }
    void x_82(Smoke::Stack x) const {
	// fullPage()
	bool xret = this->QPrinter::fullPage();
	x[0].s_bool = (bool)xret;
    }
    void x_83(Smoke::Stack x) const {
	// margins()
	QSize xret = this->QPrinter::margins();
	x[0].s_class = (void*)new QSize(xret);
    }
    void x_84(Smoke::Stack x) const {
	// fromPage()
	int xret = this->QPrinter::fromPage();
	x[0].s_int = (int)xret;
    }
    void x_85(Smoke::Stack x) const {
	// toPage()
	int xret = this->QPrinter::toPage();
	x[0].s_int = (int)xret;
    }
    void x_86(Smoke::Stack x) {
	// setFromTo(int, int)
	this->QPrinter::setFromTo((int)x[1].s_int,(int)x[2].s_int);
    }
    void x_87(Smoke::Stack x) const {
	// minPage()
	int xret = this->QPrinter::minPage();
	x[0].s_int = (int)xret;
    }
    void x_88(Smoke::Stack x) const {
	// maxPage()
	int xret = this->QPrinter::maxPage();
	x[0].s_int = (int)xret;
    }
    void x_89(Smoke::Stack x) {
	// setMinMax(int, int)
	this->QPrinter::setMinMax((int)x[1].s_int,(int)x[2].s_int);
    }
    void x_90(Smoke::Stack x) const {
	// numCopies()
	int xret = this->QPrinter::numCopies();
	x[0].s_int = (int)xret;
    }
    void x_91(Smoke::Stack x) {
	// setNumCopies(int)
	this->QPrinter::setNumCopies((int)x[1].s_int);
    }
    void x_92(Smoke::Stack x) const {
	// collateCopiesEnabled()
	bool xret = this->QPrinter::collateCopiesEnabled();
	x[0].s_bool = (bool)xret;
    }
    void x_93(Smoke::Stack x) {
	// setCollateCopiesEnabled(bool)
	this->QPrinter::setCollateCopiesEnabled((bool)x[1].s_bool);
    }
    void x_94(Smoke::Stack x) const {
	// collateCopies()
	bool xret = this->QPrinter::collateCopies();
	x[0].s_bool = (bool)xret;
    }
    void x_95(Smoke::Stack x) {
	// setCollateCopies(bool)
	this->QPrinter::setCollateCopies((bool)x[1].s_bool);
    }
    void x_96(Smoke::Stack x) {
	// newPage()
	bool xret = this->QPrinter::newPage();
	x[0].s_bool = (bool)xret;
    }
    void x_97(Smoke::Stack x) {
	// abort()
	bool xret = this->QPrinter::abort();
	x[0].s_bool = (bool)xret;
    }
    void x_98(Smoke::Stack x) const {
	// aborted()
	bool xret = this->QPrinter::aborted();
	x[0].s_bool = (bool)xret;
    }
    void x_99(Smoke::Stack x) {
	// setup(QWidget*)
	bool xret = this->QPrinter::setup((QWidget*)x[1].s_class);
	x[0].s_bool = (bool)xret;
    }
    void x_100(Smoke::Stack x) {
	// setup()
	bool xret = this->QPrinter::setup();
	x[0].s_bool = (bool)xret;
    }
    void x_101(Smoke::Stack x) const {
	// paperSource()
	QPrinter::PaperSource xret = this->QPrinter::paperSource();
	x[0].s_class = (void*)new QPrinter::PaperSource(xret);
    }
    void x_102(Smoke::Stack x) {
	// setPaperSource(QPrinter::PaperSource)
	this->QPrinter::setPaperSource(*(QPrinter::PaperSource *)x[1].s_class);
    }
    void x_103(Smoke::Stack x) {
	// cmd(int, QPainter*, QPDevCmdParam*)
	bool xret = this->QPrinter::cmd((int)x[1].s_int,(QPainter*)x[2].s_class,(QPDevCmdParam*)x[3].s_class);
	x[0].s_bool = (bool)xret;
    }
    void x_104(Smoke::Stack x) const {
	// metric(int)
	int xret = this->QPrinter::metric((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	Smoke::StackItem x[4];
	x[1].s_int = (int)x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	if(qt_Smoke->callMethod(6205, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QPrinter::cmd(x1, x2, x3);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_int = (int)x2;
	if(qt_Smoke->callMethod(5578, (void*)this, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	Smoke::StackItem x[5];
	x[1].s_class = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_class = (void*)x3;
	x[4].s_int = (int)x4;
	if(qt_Smoke->callMethod(5575, (void*)this, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual int metric(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(qt_Smoke->callMethod(6206, (void*)this, x)) return (int)x[0].s_int;
	return this->QPrinter::metric(x1);
    }
    virtual int resolution() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->callMethod(6180, (void*)this, x)) return (int)x[0].s_int;
	return this->QPrinter::resolution();
    }
    virtual void setColorMode(QPrinter::ColorMode x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6181, (void*)this, x)) return;
	this->QPrinter::setColorMode(x1);
    }
    virtual void setCreator(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6172, (void*)this, x)) return;
	this->QPrinter::setCreator(x1);
    }
    virtual void setDocName(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6170, (void*)this, x)) return;
	this->QPrinter::setDocName(x1);
    }
    virtual void setFromTo(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(qt_Smoke->callMethod(6188, (void*)this, x)) return;
	this->QPrinter::setFromTo(x1, x2);
    }
    virtual void setFullPage(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(qt_Smoke->callMethod(6183, (void*)this, x)) return;
	this->QPrinter::setFullPage(x1);
    }
    virtual void setMinMax(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(qt_Smoke->callMethod(6191, (void*)this, x)) return;
	this->QPrinter::setMinMax(x1, x2);
    }
    virtual void setNumCopies(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(qt_Smoke->callMethod(6193, (void*)this, x)) return;
	this->QPrinter::setNumCopies(x1);
    }
    virtual void setOrientation(QPrinter::Orientation x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6174, (void*)this, x)) return;
	this->QPrinter::setOrientation(x1);
    }
    virtual void setOutputFileName(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6164, (void*)this, x)) return;
	this->QPrinter::setOutputFileName(x1);
    }
    virtual void setOutputToFile(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(qt_Smoke->callMethod(6162, (void*)this, x)) return;
	this->QPrinter::setOutputToFile(x1);
    }
    virtual void setPageOrder(QPrinter::PageOrder x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6177, (void*)this, x)) return;
	this->QPrinter::setPageOrder(x1);
    }
    virtual void setPageSize(QPrinter::PageSize x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6176, (void*)this, x)) return;
	this->QPrinter::setPageSize(x1);
    }
    virtual void setPaperSource(QPrinter::PaperSource x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6204, (void*)this, x)) return;
	this->QPrinter::setPaperSource(x1);
    }
    virtual void setPrintProgram(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6166, (void*)this, x)) return;
	this->QPrinter::setPrintProgram(x1);
    }
    virtual void setPrinterName(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6160, (void*)this, x)) return;
	this->QPrinter::setPrinterName(x1);
    }
    virtual void setPrinterSelectionOption(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(6168, (void*)this, x)) return;
	this->QPrinter::setPrinterSelectionOption(x1);
    }
    virtual void setResolution(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(qt_Smoke->callMethod(6179, (void*)this, x)) return;
	this->QPrinter::setResolution(x1);
    }
    ~x_QPrinter() {}
};
void xcall_QPrinter(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QPrinter *xself = (x_QPrinter*)obj;
    switch(xi) {
	case 0: x_QPrinter::x_0(args);	break;
	case 1: x_QPrinter::x_1(args);	break;
	case 2: x_QPrinter::x_2(args);	break;
	case 3: x_QPrinter::x_3(args);	break;
	case 4: x_QPrinter::x_4(args);	break;
	case 5: x_QPrinter::x_5(args);	break;
	case 6: x_QPrinter::x_6(args);	break;
	case 7: x_QPrinter::x_7(args);	break;
	case 8: x_QPrinter::x_8(args);	break;
	case 9: x_QPrinter::x_9(args);	break;
	case 10: x_QPrinter::x_10(args);	break;
	case 11: x_QPrinter::x_11(args);	break;
	case 12: x_QPrinter::x_12(args);	break;
	case 13: x_QPrinter::x_13(args);	break;
	case 14: x_QPrinter::x_14(args);	break;
	case 15: x_QPrinter::x_15(args);	break;
	case 16: x_QPrinter::x_16(args);	break;
	case 17: x_QPrinter::x_17(args);	break;
	case 18: x_QPrinter::x_18(args);	break;
	case 19: x_QPrinter::x_19(args);	break;
	case 20: x_QPrinter::x_20(args);	break;
	case 21: x_QPrinter::x_21(args);	break;
	case 22: x_QPrinter::x_22(args);	break;
	case 23: x_QPrinter::x_23(args);	break;
	case 24: x_QPrinter::x_24(args);	break;
	case 25: x_QPrinter::x_25(args);	break;
	case 26: x_QPrinter::x_26(args);	break;
	case 27: x_QPrinter::x_27(args);	break;
	case 28: x_QPrinter::x_28(args);	break;
	case 29: x_QPrinter::x_29(args);	break;
	case 30: x_QPrinter::x_30(args);	break;
	case 31: x_QPrinter::x_31(args);	break;
	case 32: x_QPrinter::x_32(args);	break;
	case 33: x_QPrinter::x_33(args);	break;
	case 34: x_QPrinter::x_34(args);	break;
	case 35: x_QPrinter::x_35(args);	break;
	case 36: x_QPrinter::x_36(args);	break;
	case 37: x_QPrinter::x_37(args);	break;
	case 38: x_QPrinter::x_38(args);	break;
	case 39: x_QPrinter::x_39(args);	break;
	case 40: x_QPrinter::x_40(args);	break;
	case 41: x_QPrinter::x_41(args);	break;
	case 42: x_QPrinter::x_42(args);	break;
	case 43: x_QPrinter::x_43(args);	break;
	case 44: x_QPrinter::x_44(args);	break;
	case 45: x_QPrinter::x_45(args);	break;
	case 46: x_QPrinter::x_46(args);	break;
	case 47: x_QPrinter::x_47(args);	break;
	case 48: x_QPrinter::x_48(args);	break;
	case 49: x_QPrinter::x_49(args);	break;
	case 50: x_QPrinter::x_50(args);	break;
	case 51: x_QPrinter::x_51(args);	break;
	case 52: x_QPrinter::x_52(args);	break;
	case 53: x_QPrinter::x_53(args);	break;
	case 54: x_QPrinter::x_54(args);	break;
	case 55: x_QPrinter::x_55(args);	break;
	case 56: x_QPrinter::x_56(args);	break;
	case 57: xself->x_57(args);	break;
	case 58: xself->x_58(args);	break;
	case 59: xself->x_59(args);	break;
	case 60: xself->x_60(args);	break;
	case 61: xself->x_61(args);	break;
	case 62: xself->x_62(args);	break;
	case 63: xself->x_63(args);	break;
	case 64: xself->x_64(args);	break;
	case 65: xself->x_65(args);	break;
	case 66: xself->x_66(args);	break;
	case 67: xself->x_67(args);	break;
	case 68: xself->x_68(args);	break;
	case 69: xself->x_69(args);	break;
	case 70: xself->x_70(args);	break;
	case 71: xself->x_71(args);	break;
	case 72: xself->x_72(args);	break;
	case 73: xself->x_73(args);	break;
	case 74: xself->x_74(args);	break;
	case 75: xself->x_75(args);	break;
	case 76: xself->x_76(args);	break;
	case 77: xself->x_77(args);	break;
	case 78: xself->x_78(args);	break;
	case 79: xself->x_79(args);	break;
	case 80: xself->x_80(args);	break;
	case 81: xself->x_81(args);	break;
	case 82: xself->x_82(args);	break;
	case 83: xself->x_83(args);	break;
	case 84: xself->x_84(args);	break;
	case 85: xself->x_85(args);	break;
	case 86: xself->x_86(args);	break;
	case 87: xself->x_87(args);	break;
	case 88: xself->x_88(args);	break;
	case 89: xself->x_89(args);	break;
	case 90: xself->x_90(args);	break;
	case 91: xself->x_91(args);	break;
	case 92: xself->x_92(args);	break;
	case 93: xself->x_93(args);	break;
	case 94: xself->x_94(args);	break;
	case 95: xself->x_95(args);	break;
	case 96: xself->x_96(args);	break;
	case 97: xself->x_97(args);	break;
	case 98: xself->x_98(args);	break;
	case 99: xself->x_99(args);	break;
	case 100: xself->x_100(args);	break;
	case 101: xself->x_101(args);	break;
	case 102: xself->x_102(args);	break;
	case 103: xself->x_103(args);	break;
	case 104: xself->x_104(args);	break;
	case 105: delete (QPrinter*)xself;	break;
    }
}
