//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qevent.h>

class x_QMoveEvent : public QMoveEvent {
public:
    static void x_0(xargs *x) {
	// QMoveEvent(const QPoint&, const QPoint&)
	x_QMoveEvent* xret = new x_QMoveEvent(*(const QPoint *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QMoveEvent(const QPoint& x1, const QPoint& x2) : QMoveEvent(x1, x2) {
    }
    void x_1(xargs *x) const {
	// pos()
	const QPoint& xret = this->QMoveEvent::pos();
	x[0].x_voidp = (void*)&xret;
    }
    void x_2(xargs *x) const {
	// oldPos()
	const QPoint& xret = this->QMoveEvent::oldPos();
	x[0].x_voidp = (void*)&xret;
    }
    ~x_QMoveEvent() {}
};
void xcall_QMoveEvent(xargs *x, void *s, int xi) {
    x_QMoveEvent *xself = (x_QMoveEvent*)s;
    switch(xi) {
	case 0: x_QMoveEvent::x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
    }
}
