//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qscrollview.h>
#include <qlistbox.h>
#include <qstringlist.h>
#include <qpoint.h>
#include <qfont.h>
#include <qstrlist.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qwidget.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>
#include <qscrollbar.h>

class x_QListBox : public QListBox {
public:
    static void x_0(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::Single;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::Multi;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::Extended;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::NoSelection;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::FixedNumber;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::FitToWidth;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::FitToHeight;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_long = (long)QListBox::Variable;
    }
    static void x_8(Smoke::Stack x) {
	// QListBox(QWidget*, const char*, Qt::WFlags)
	x_QListBox* xret = new x_QListBox((QWidget*)x[1].s_voidp,(const char*)x[2].s_voidp,*(Qt::WFlags *)x[3].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListBox(QWidget* x1, const char* x2, Qt::WFlags x3) : QListBox(x1, x2, x3) {
    }
    static void x_9(Smoke::Stack x) {
	// QListBox(QWidget*, const char*)
	x_QListBox* xret = new x_QListBox((QWidget*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListBox(QWidget* x1, const char* x2) : QListBox(x1, x2) {
    }
    static void x_10(Smoke::Stack x) {
	// QListBox(QWidget*)
	x_QListBox* xret = new x_QListBox((QWidget*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListBox(QWidget* x1) : QListBox(x1) {
    }
    static void x_11(Smoke::Stack x) {
	// QListBox()
	x_QListBox* xret = new x_QListBox();
	x[0].s_voidp = (void*)xret;
    }
    x_QListBox() : QListBox() {
    }
    void x_12(Smoke::Stack x) {
	// setFont(const QFont&)
	this->QListBox::setFont(*(const QFont *)x[1].s_voidp);
    }
    void x_13(Smoke::Stack x) const {
	// count()
	uint xret = this->QListBox::count();
	x[0].s_uint = (uint)xret;
    }
    void x_14(Smoke::Stack x) {
	// insertStringList(const QStringList&, int)
	this->QListBox::insertStringList(*(const QStringList *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_15(Smoke::Stack x) {
	// insertStringList(const QStringList&)
	this->QListBox::insertStringList(*(const QStringList *)x[1].s_voidp);
    }
    void x_16(Smoke::Stack x) {
	// insertStrList(const QStrList*, int)
	this->QListBox::insertStrList((const QStrList*)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_17(Smoke::Stack x) {
	// insertStrList(const QStrList*)
	this->QListBox::insertStrList((const QStrList*)x[1].s_voidp);
    }
    void x_18(Smoke::Stack x) {
	// insertStrList(const QStrList&, int)
	this->QListBox::insertStrList(*(const QStrList *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_19(Smoke::Stack x) {
	// insertStrList(const QStrList&)
	this->QListBox::insertStrList(*(const QStrList *)x[1].s_voidp);
    }
    void x_20(Smoke::Stack x) {
	// insertStrList(const char**, int, int)
	this->QListBox::insertStrList((const char**)x[1].s_voidp,(int)x[2].s_int,(int)x[3].s_int);
    }
    void x_21(Smoke::Stack x) {
	// insertStrList(const char**, int)
	this->QListBox::insertStrList((const char**)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_22(Smoke::Stack x) {
	// insertStrList(const char**)
	this->QListBox::insertStrList((const char**)x[1].s_voidp);
    }
    void x_23(Smoke::Stack x) {
	// insertItem(const QListBoxItem*, int)
	this->QListBox::insertItem((const QListBoxItem*)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_24(Smoke::Stack x) {
	// insertItem(const QListBoxItem*)
	this->QListBox::insertItem((const QListBoxItem*)x[1].s_voidp);
    }
    void x_25(Smoke::Stack x) {
	// insertItem(const QListBoxItem*, const QListBoxItem*)
	this->QListBox::insertItem((const QListBoxItem*)x[1].s_voidp,(const QListBoxItem*)x[2].s_voidp);
    }
    void x_26(Smoke::Stack x) {
	// insertItem(const QString&, int)
	this->QListBox::insertItem(*(const QString *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_27(Smoke::Stack x) {
	// insertItem(const QString&)
	this->QListBox::insertItem(*(const QString *)x[1].s_voidp);
    }
    void x_28(Smoke::Stack x) {
	// insertItem(const QPixmap&, int)
	this->QListBox::insertItem(*(const QPixmap *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_29(Smoke::Stack x) {
	// insertItem(const QPixmap&)
	this->QListBox::insertItem(*(const QPixmap *)x[1].s_voidp);
    }
    void x_30(Smoke::Stack x) {
	// insertItem(const QPixmap&, const QString&, int)
	this->QListBox::insertItem(*(const QPixmap *)x[1].s_voidp,*(const QString *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_31(Smoke::Stack x) {
	// insertItem(const QPixmap&, const QString&)
	this->QListBox::insertItem(*(const QPixmap *)x[1].s_voidp,*(const QString *)x[2].s_voidp);
    }
    void x_32(Smoke::Stack x) {
	// removeItem(int)
	this->QListBox::removeItem((int)x[1].s_int);
    }
    void x_33(Smoke::Stack x) const {
	// text(int)
	QString xret = this->QListBox::text((int)x[1].s_int);
	x[0].s_voidp = (void*)new QString(xret);
    }
    void x_34(Smoke::Stack x) const {
	// pixmap(int)
	const QPixmap* xret = this->QListBox::pixmap((int)x[1].s_int);
	x[0].s_voidp = (void*)xret;
    }
    void x_35(Smoke::Stack x) {
	// changeItem(const QListBoxItem*, int)
	this->QListBox::changeItem((const QListBoxItem*)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_36(Smoke::Stack x) {
	// changeItem(const QString&, int)
	this->QListBox::changeItem(*(const QString *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_37(Smoke::Stack x) {
	// changeItem(const QPixmap&, int)
	this->QListBox::changeItem(*(const QPixmap *)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_38(Smoke::Stack x) {
	// changeItem(const QPixmap&, const QString&, int)
	this->QListBox::changeItem(*(const QPixmap *)x[1].s_voidp,*(const QString *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_39(Smoke::Stack x) {
	// takeItem(const QListBoxItem*)
	this->QListBox::takeItem((const QListBoxItem*)x[1].s_voidp);
    }
    void x_40(Smoke::Stack x) const {
	// numItemsVisible()
	int xret = this->QListBox::numItemsVisible();
	x[0].s_int = (int)xret;
    }
    void x_41(Smoke::Stack x) const {
	// currentItem()
	int xret = this->QListBox::currentItem();
	x[0].s_int = (int)xret;
    }
    void x_42(Smoke::Stack x) const {
	// currentText()
	QString xret = this->QListBox::currentText();
	x[0].s_voidp = (void*)new QString(xret);
    }
    void x_43(Smoke::Stack x) {
	// setCurrentItem(int)
	this->QListBox::setCurrentItem((int)x[1].s_int);
    }
    void x_44(Smoke::Stack x) {
	// setCurrentItem(QListBoxItem*)
	this->QListBox::setCurrentItem((QListBoxItem*)x[1].s_voidp);
    }
    void x_45(Smoke::Stack x) {
	// centerCurrentItem()
	this->QListBox::centerCurrentItem();
    }
    void x_46(Smoke::Stack x) const {
	// topItem()
	int xret = this->QListBox::topItem();
	x[0].s_int = (int)xret;
    }
    void x_47(Smoke::Stack x) {
	// setTopItem(int)
	this->QListBox::setTopItem((int)x[1].s_int);
    }
    void x_48(Smoke::Stack x) {
	// setBottomItem(int)
	this->QListBox::setBottomItem((int)x[1].s_int);
    }
    void x_49(Smoke::Stack x) const {
	// maxItemWidth()
	long xret = this->QListBox::maxItemWidth();
	x[0].s_long = (long)xret;
    }
    void x_50(Smoke::Stack x) {
	// setSelectionMode(QListBox::SelectionMode)
	this->QListBox::setSelectionMode(*(QListBox::SelectionMode *)x[1].s_voidp);
    }
    void x_51(Smoke::Stack x) const {
	// selectionMode()
	QListBox::SelectionMode xret = this->QListBox::selectionMode();
	x[0].s_voidp = (void*)new QListBox::SelectionMode(xret);
    }
    void x_52(Smoke::Stack x) {
	// setMultiSelection(bool)
	this->QListBox::setMultiSelection((bool)x[1].s_bool);
    }
    void x_53(Smoke::Stack x) const {
	// isMultiSelection()
	bool xret = this->QListBox::isMultiSelection();
	x[0].s_bool = (bool)xret;
    }
    void x_54(Smoke::Stack x) {
	// setSelected(QListBoxItem*, bool)
	this->QListBox::setSelected((QListBoxItem*)x[1].s_voidp,(bool)x[2].s_bool);
    }
    void x_55(Smoke::Stack x) {
	// setSelected(int, bool)
	this->QListBox::setSelected((int)x[1].s_int,(bool)x[2].s_bool);
    }
    void x_56(Smoke::Stack x) const {
	// isSelected(int)
	bool xret = this->QListBox::isSelected((int)x[1].s_int);
	x[0].s_bool = (bool)xret;
    }
    void x_57(Smoke::Stack x) const {
	// isSelected(const QListBoxItem*)
	bool xret = this->QListBox::isSelected((const QListBoxItem*)x[1].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_58(Smoke::Stack x) const {
	// sizeHint()
	QSize xret = this->QListBox::sizeHint();
	x[0].s_voidp = (void*)new QSize(xret);
    }
    void x_59(Smoke::Stack x) const {
	// minimumSizeHint()
	QSize xret = this->QListBox::minimumSizeHint();
	x[0].s_voidp = (void*)new QSize(xret);
    }
    void x_60(Smoke::Stack x) const {
	// item(int)
	QListBoxItem* xret = this->QListBox::item((int)x[1].s_int);
	x[0].s_voidp = (void*)xret;
    }
    void x_61(Smoke::Stack x) const {
	// index(const QListBoxItem*)
	int xret = this->QListBox::index((const QListBoxItem*)x[1].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_62(Smoke::Stack x) const {
	// findItem(const QString&, Qt::ComparisonFlags)
	QListBoxItem* xret = this->QListBox::findItem(*(const QString *)x[1].s_voidp,*(Qt::ComparisonFlags *)x[2].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_63(Smoke::Stack x) const {
	// findItem(const QString&)
	QListBoxItem* xret = this->QListBox::findItem(*(const QString *)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_64(Smoke::Stack x) {
	// triggerUpdate(bool)
	this->QListBox::triggerUpdate((bool)x[1].s_bool);
    }
    void x_65(Smoke::Stack x) {
	// itemVisible(int)
	bool xret = this->QListBox::itemVisible((int)x[1].s_int);
	x[0].s_bool = (bool)xret;
    }
    void x_66(Smoke::Stack x) {
	// itemVisible(const QListBoxItem*)
	bool xret = this->QListBox::itemVisible((const QListBoxItem*)x[1].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_67(Smoke::Stack x) {
	// setColumnMode(QListBox::LayoutMode)
	this->QListBox::setColumnMode(*(QListBox::LayoutMode *)x[1].s_voidp);
    }
    void x_68(Smoke::Stack x) {
	// setColumnMode(int)
	this->QListBox::setColumnMode((int)x[1].s_int);
    }
    void x_69(Smoke::Stack x) {
	// setRowMode(QListBox::LayoutMode)
	this->QListBox::setRowMode(*(QListBox::LayoutMode *)x[1].s_voidp);
    }
    void x_70(Smoke::Stack x) {
	// setRowMode(int)
	this->QListBox::setRowMode((int)x[1].s_int);
    }
    void x_71(Smoke::Stack x) const {
	// columnMode()
	QListBox::LayoutMode xret = this->QListBox::columnMode();
	x[0].s_voidp = (void*)new QListBox::LayoutMode(xret);
    }
    void x_72(Smoke::Stack x) const {
	// rowMode()
	QListBox::LayoutMode xret = this->QListBox::rowMode();
	x[0].s_voidp = (void*)new QListBox::LayoutMode(xret);
    }
    void x_73(Smoke::Stack x) const {
	// numColumns()
	int xret = this->QListBox::numColumns();
	x[0].s_int = (int)xret;
    }
    void x_74(Smoke::Stack x) const {
	// numRows()
	int xret = this->QListBox::numRows();
	x[0].s_int = (int)xret;
    }
    void x_75(Smoke::Stack x) const {
	// variableWidth()
	bool xret = this->QListBox::variableWidth();
	x[0].s_bool = (bool)xret;
    }
    void x_76(Smoke::Stack x) {
	// setVariableWidth(bool)
	this->QListBox::setVariableWidth((bool)x[1].s_bool);
    }
    void x_77(Smoke::Stack x) const {
	// variableHeight()
	bool xret = this->QListBox::variableHeight();
	x[0].s_bool = (bool)xret;
    }
    void x_78(Smoke::Stack x) {
	// setVariableHeight(bool)
	this->QListBox::setVariableHeight((bool)x[1].s_bool);
    }
    void x_79(Smoke::Stack x) {
	// viewportPaintEvent(QPaintEvent*)
	this->QListBox::viewportPaintEvent((QPaintEvent*)x[1].s_voidp);
    }
    void x_80(Smoke::Stack x) const {
	// dragSelect()
	bool xret = this->QListBox::dragSelect();
	x[0].s_bool = (bool)xret;
    }
    void x_81(Smoke::Stack x) {
	// setDragSelect(bool)
	this->QListBox::setDragSelect((bool)x[1].s_bool);
    }
    void x_82(Smoke::Stack x) const {
	// autoScroll()
	bool xret = this->QListBox::autoScroll();
	x[0].s_bool = (bool)xret;
    }
    void x_83(Smoke::Stack x) {
	// setAutoScroll(bool)
	this->QListBox::setAutoScroll((bool)x[1].s_bool);
    }
    void x_84(Smoke::Stack x) const {
	// autoScrollBar()
	bool xret = this->QListBox::autoScrollBar();
	x[0].s_bool = (bool)xret;
    }
    void x_85(Smoke::Stack x) {
	// setAutoScrollBar(bool)
	this->QListBox::setAutoScrollBar((bool)x[1].s_bool);
    }
    void x_86(Smoke::Stack x) const {
	// scrollBar()
	bool xret = this->QListBox::scrollBar();
	x[0].s_bool = (bool)xret;
    }
    void x_87(Smoke::Stack x) {
	// setScrollBar(bool)
	this->QListBox::setScrollBar((bool)x[1].s_bool);
    }
    void x_88(Smoke::Stack x) const {
	// autoBottomScrollBar()
	bool xret = this->QListBox::autoBottomScrollBar();
	x[0].s_bool = (bool)xret;
    }
    void x_89(Smoke::Stack x) {
	// setAutoBottomScrollBar(bool)
	this->QListBox::setAutoBottomScrollBar((bool)x[1].s_bool);
    }
    void x_90(Smoke::Stack x) const {
	// bottomScrollBar()
	bool xret = this->QListBox::bottomScrollBar();
	x[0].s_bool = (bool)xret;
    }
    void x_91(Smoke::Stack x) {
	// setBottomScrollBar(bool)
	this->QListBox::setBottomScrollBar((bool)x[1].s_bool);
    }
    void x_92(Smoke::Stack x) const {
	// smoothScrolling()
	bool xret = this->QListBox::smoothScrolling();
	x[0].s_bool = (bool)xret;
    }
    void x_93(Smoke::Stack x) {
	// setSmoothScrolling(bool)
	this->QListBox::setSmoothScrolling((bool)x[1].s_bool);
    }
    void x_94(Smoke::Stack x) const {
	// autoUpdate()
	bool xret = this->QListBox::autoUpdate();
	x[0].s_bool = (bool)xret;
    }
    void x_95(Smoke::Stack x) {
	// setAutoUpdate(bool)
	this->QListBox::setAutoUpdate((bool)x[1].s_bool);
    }
    void x_96(Smoke::Stack x) {
	// setFixedVisibleLines(int)
	this->QListBox::setFixedVisibleLines((int)x[1].s_int);
    }
    void x_97(Smoke::Stack x) {
	// inSort(const QListBoxItem*)
	int xret = this->QListBox::inSort((const QListBoxItem*)x[1].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_98(Smoke::Stack x) {
	// inSort(const QString&)
	int xret = this->QListBox::inSort(*(const QString *)x[1].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_99(Smoke::Stack x) const {
	// cellHeight(int)
	int xret = this->QListBox::cellHeight((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_100(Smoke::Stack x) const {
	// cellHeight()
	int xret = this->QListBox::cellHeight();
	x[0].s_int = (int)xret;
    }
    void x_101(Smoke::Stack x) const {
	// cellWidth()
	int xret = this->QListBox::cellWidth();
	x[0].s_int = (int)xret;
    }
    void x_102(Smoke::Stack x) const {
	// cellWidth(int)
	int xret = this->QListBox::cellWidth((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_103(Smoke::Stack x) const {
	// numCols()
	int xret = this->QListBox::numCols();
	x[0].s_int = (int)xret;
    }
    void x_104(Smoke::Stack x) const {
	// itemHeight(int)
	int xret = this->QListBox::itemHeight((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_105(Smoke::Stack x) const {
	// itemHeight()
	int xret = this->QListBox::itemHeight();
	x[0].s_int = (int)xret;
    }
    void x_106(Smoke::Stack x) const {
	// itemAt(const QPoint&)
	QListBoxItem* xret = this->QListBox::itemAt(*(const QPoint *)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_107(Smoke::Stack x) const {
	// itemRect(QListBoxItem*)
	QRect xret = this->QListBox::itemRect((QListBoxItem*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QRect(xret);
    }
    void x_108(Smoke::Stack x) const {
	// firstItem()
	QListBoxItem* xret = this->QListBox::firstItem();
	x[0].s_voidp = (void*)xret;
    }
    void x_109(Smoke::Stack x) {
	// sort(bool)
	this->QListBox::sort((bool)x[1].s_bool);
    }
    void x_110(Smoke::Stack x) {
	// sort()
	this->QListBox::sort();
    }
    void x_111(Smoke::Stack x) {
	// clear()
	this->QListBox::clear();
    }
    void x_112(Smoke::Stack x) {
	// ensureCurrentVisible()
	this->QListBox::ensureCurrentVisible();
    }
    void x_113(Smoke::Stack x) {
	// clearSelection()
	this->QListBox::clearSelection();
    }
    void x_114(Smoke::Stack x) {
	// selectAll(bool)
	this->QListBox::selectAll((bool)x[1].s_bool);
    }
    void x_115(Smoke::Stack x) {
	// invertSelection()
	this->QListBox::invertSelection();
    }
    void x_116(Smoke::Stack x) {
	// highlighted(int)
	this->QListBox::highlighted((int)x[1].s_int);
    }
    void x_117(Smoke::Stack x) {
	// selected(int)
	this->QListBox::selected((int)x[1].s_int);
    }
    void x_118(Smoke::Stack x) {
	// highlighted(const QString&)
	this->QListBox::highlighted(*(const QString *)x[1].s_voidp);
    }
    void x_119(Smoke::Stack x) {
	// selected(const QString&)
	this->QListBox::selected(*(const QString *)x[1].s_voidp);
    }
    void x_120(Smoke::Stack x) {
	// highlighted(QListBoxItem*)
	this->QListBox::highlighted((QListBoxItem*)x[1].s_voidp);
    }
    void x_121(Smoke::Stack x) {
	// selected(QListBoxItem*)
	this->QListBox::selected((QListBoxItem*)x[1].s_voidp);
    }
    void x_122(Smoke::Stack x) {
	// selectionChanged()
	this->QListBox::selectionChanged();
    }
    void x_123(Smoke::Stack x) {
	// selectionChanged(QListBoxItem*)
	this->QListBox::selectionChanged((QListBoxItem*)x[1].s_voidp);
    }
    void x_124(Smoke::Stack x) {
	// currentChanged(QListBoxItem*)
	this->QListBox::currentChanged((QListBoxItem*)x[1].s_voidp);
    }
    void x_125(Smoke::Stack x) {
	// clicked(QListBoxItem*)
	this->QListBox::clicked((QListBoxItem*)x[1].s_voidp);
    }
    void x_126(Smoke::Stack x) {
	// clicked(QListBoxItem*, const QPoint&)
	this->QListBox::clicked((QListBoxItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp);
    }
    void x_127(Smoke::Stack x) {
	// pressed(QListBoxItem*)
	this->QListBox::pressed((QListBoxItem*)x[1].s_voidp);
    }
    void x_128(Smoke::Stack x) {
	// pressed(QListBoxItem*, const QPoint&)
	this->QListBox::pressed((QListBoxItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp);
    }
    void x_129(Smoke::Stack x) {
	// doubleClicked(QListBoxItem*)
	this->QListBox::doubleClicked((QListBoxItem*)x[1].s_voidp);
    }
    void x_130(Smoke::Stack x) {
	// returnPressed(QListBoxItem*)
	this->QListBox::returnPressed((QListBoxItem*)x[1].s_voidp);
    }
    void x_131(Smoke::Stack x) {
	// rightButtonClicked(QListBoxItem*, const QPoint&)
	this->QListBox::rightButtonClicked((QListBoxItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp);
    }
    void x_132(Smoke::Stack x) {
	// rightButtonPressed(QListBoxItem*, const QPoint&)
	this->QListBox::rightButtonPressed((QListBoxItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp);
    }
    void x_133(Smoke::Stack x) {
	// mouseButtonPressed(int, QListBoxItem*, const QPoint&)
	this->QListBox::mouseButtonPressed((int)x[1].s_int,(QListBoxItem*)x[2].s_voidp,*(const QPoint *)x[3].s_voidp);
    }
    void x_134(Smoke::Stack x) {
	// mouseButtonClicked(int, QListBoxItem*, const QPoint&)
	this->QListBox::mouseButtonClicked((int)x[1].s_int,(QListBoxItem*)x[2].s_voidp,*(const QPoint *)x[3].s_voidp);
    }
    void x_135(Smoke::Stack x) {
	// contextMenuRequested(QListBoxItem*, const QPoint&)
	this->QListBox::contextMenuRequested((QListBoxItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp);
    }
    void x_136(Smoke::Stack x) {
	// onItem(QListBoxItem*)
	this->QListBox::onItem((QListBoxItem*)x[1].s_voidp);
    }
    void x_137(Smoke::Stack x) {
	// onViewport()
	this->QListBox::onViewport();
    }
    void x_138(Smoke::Stack x) {
	// mousePressEvent(QMouseEvent*)
	this->QListBox::mousePressEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_139(Smoke::Stack x) {
	// mouseReleaseEvent(QMouseEvent*)
	this->QListBox::mouseReleaseEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_140(Smoke::Stack x) {
	// mouseDoubleClickEvent(QMouseEvent*)
	this->QListBox::mouseDoubleClickEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_141(Smoke::Stack x) {
	// mouseMoveEvent(QMouseEvent*)
	this->QListBox::mouseMoveEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_142(Smoke::Stack x) {
	// contentsContextMenuEvent(QContextMenuEvent*)
	this->QListBox::contentsContextMenuEvent((QContextMenuEvent*)x[1].s_voidp);
    }
    void x_143(Smoke::Stack x) {
	// keyPressEvent(QKeyEvent*)
	this->QListBox::keyPressEvent((QKeyEvent*)x[1].s_voidp);
    }
    void x_144(Smoke::Stack x) {
	// focusInEvent(QFocusEvent*)
	this->QListBox::focusInEvent((QFocusEvent*)x[1].s_voidp);
    }
    void x_145(Smoke::Stack x) {
	// focusOutEvent(QFocusEvent*)
	this->QListBox::focusOutEvent((QFocusEvent*)x[1].s_voidp);
    }
    void x_146(Smoke::Stack x) {
	// resizeEvent(QResizeEvent*)
	this->QListBox::resizeEvent((QResizeEvent*)x[1].s_voidp);
    }
    void x_147(Smoke::Stack x) {
	// showEvent(QShowEvent*)
	this->QListBox::showEvent((QShowEvent*)x[1].s_voidp);
    }
    void x_148(Smoke::Stack x) {
	// eventFilter(QObject*, QEvent*)
	bool xret = this->QListBox::eventFilter((QObject*)x[1].s_voidp,(QEvent*)x[2].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_149(Smoke::Stack x) {
	// updateItem(int)
	this->QListBox::updateItem((int)x[1].s_int);
    }
    void x_150(Smoke::Stack x) {
	// updateItem(QListBoxItem*)
	this->QListBox::updateItem((QListBoxItem*)x[1].s_voidp);
    }
    void x_151(Smoke::Stack x) {
	// updateCellWidth()
	this->QListBox::updateCellWidth();
    }
    void x_152(Smoke::Stack x) const {
	// totalWidth()
	int xret = this->QListBox::totalWidth();
	x[0].s_int = (int)xret;
    }
    void x_153(Smoke::Stack x) const {
	// totalHeight()
	int xret = this->QListBox::totalHeight();
	x[0].s_int = (int)xret;
    }
    void x_154(Smoke::Stack x) {
	// paintCell(QPainter*, int, int)
	this->QListBox::paintCell((QPainter*)x[1].s_voidp,(int)x[2].s_int,(int)x[3].s_int);
    }
    void x_155(Smoke::Stack x) {
	// toggleCurrentItem()
	this->QListBox::toggleCurrentItem();
    }
    void x_156(Smoke::Stack x) const {
	// isRubberSelecting()
	bool xret = this->QListBox::isRubberSelecting();
	x[0].s_bool = (bool)xret;
    }
    void x_157(Smoke::Stack x) const {
	// doLayout()
	this->QListBox::doLayout();
    }
    void x_158(Smoke::Stack x) {
	// windowActivationChange(bool)
	this->QListBox::windowActivationChange((bool)x[1].s_bool);
    }
    void x_159(Smoke::Stack x) const {
	// itemYPos(int, int*)
	bool xret = this->QListBox::itemYPos((int)x[1].s_int,(int*)x[2].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_160(Smoke::Stack x) const {
	// findItem(int)
	int xret = this->QListBox::findItem((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_161(Smoke::Stack x) {
	// clearInputString()
	this->QListBox::clearInputString();
    }
    virtual void addChild(QWidget* x1, int x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 6584, x)) return;
	this->QScrollView::addChild(x1, x2, x3);
    }
    virtual void adjustSize() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9609, x)) return;
	this->QWidget::adjustSize();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(call_method((void*)this, 5469, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5465, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void clearSelection() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4352, x)) return;
	this->QListBox::clearSelection();
    }
    virtual bool close(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9596, x)) return (bool)x[0].s_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9704, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	Smoke::StackItem x[4];
	x[1].s_int = (int)x1;
	x[2].s_voidp = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(call_method((void*)this, 5552, x)) return (bool)x[0].s_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5467, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contentsContextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4381, x)) return;
	this->QListBox::contentsContextMenuEvent(x1);
    }
    virtual void contentsDragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6650, x)) return;
	this->QScrollView::contentsDragEnterEvent(x1);
    }
    virtual void contentsDragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6652, x)) return;
	this->QScrollView::contentsDragLeaveEvent(x1);
    }
    virtual void contentsDragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6651, x)) return;
	this->QScrollView::contentsDragMoveEvent(x1);
    }
    virtual void contentsDropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6653, x)) return;
	this->QScrollView::contentsDropEvent(x1);
    }
    virtual void contentsMouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6648, x)) return;
	this->QScrollView::contentsMouseDoubleClickEvent(x1);
    }
    virtual void contentsMouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6649, x)) return;
	this->QScrollView::contentsMouseMoveEvent(x1);
    }
    virtual void contentsMousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6646, x)) return;
	this->QScrollView::contentsMousePressEvent(x1);
    }
    virtual void contentsMouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6647, x)) return;
	this->QScrollView::contentsMouseReleaseEvent(x1);
    }
    virtual void contentsWheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6654, x)) return;
	this->QScrollView::contentsWheelEvent(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6683, x)) return;
	this->QScrollView::contextMenuEvent(x1);
    }
    virtual void create(WId x1, bool x2, bool x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)&x1;
	x[2].s_bool = (bool)x2;
	x[3].s_bool = (bool)x3;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5466, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9634, x)) return (bool)x[0].s_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void destroy(bool x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_bool = (bool)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5468, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9710, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9712, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void drawContents(QPainter* x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6644, x)) return;
	this->QScrollView::drawContents(x1, x2, x3, x4, x5);
    }
    virtual void drawContentsOffset(QPainter* x1, int x2, int x3, int x4, int x5, int x6, int x7) {
	Smoke::StackItem x[8];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	x[6].s_int = (int)x6;
	x[7].s_int = (int)x7;
	if(call_method((void*)this, 6645, x)) return;
	this->QScrollView::drawContentsOffset(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual void drawFrame(QPainter* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void ensureCurrentVisible() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4351, x)) return;
	this->QListBox::ensureCurrentVisible();
    }
    virtual void enterEvent(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9699, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9689, x)) return (bool)x[0].s_bool;
	return this->QWidget::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	if(call_method((void*)this, 4387, x)) return (bool)x[0].s_bool;
	return this->QListBox::eventFilter(x1, x2);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4383, x)) return;
	this->QListBox::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6674, x)) return (bool)x[0].s_bool;
	return this->QScrollView::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4384, x)) return;
	this->QListBox::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 5557, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	Smoke::StackItem x[5];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_voidp = (void*)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 5554, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 6668, x)) return;
	this->QScrollView::frameChanged();
    }
    virtual int heightForWidth(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 9608, x)) return (int)x[0].s_int;
	return this->QWidget::heightForWidth(x1);
    }
    virtual void hide() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9666, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9715, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::imStartEvent(x1);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5427, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void invertSelection() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4354, x)) return;
	this->QListBox::invertSelection();
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4382, x)) return;
	this->QListBox::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9696, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9700, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 9722, x)) return (int)x[0].s_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4298, x)) {
	    QSize *xptr = (QSize *)x[0].s_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QListBox::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4379, x)) return;
	this->QListBox::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4380, x)) return;
	this->QListBox::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4377, x)) return;
	this->QListBox::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4378, x)) return;
	this->QListBox::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveChild(QWidget* x1, int x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 6587, x)) return;
	this->QScrollView::moveChild(x1, x2, x3);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9702, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintCell(QPainter* x1, int x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 4393, x)) return;
	this->QListBox::paintCell(x1, x2, x3);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void polish() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9672, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5441, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6631, x)) return;
	this->QScrollView::removeChild(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	Smoke::StackItem x[5];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	x[3].s_voidp = (void*)&x3;
	x[4].s_bool = (bool)x4;
	if(call_method((void*)this, 9612, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 6609, x)) return;
	this->QScrollView::resize(x1, x2);
    }
    virtual void resizeContents(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 6634, x)) return;
	this->QScrollView::resizeContents(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4385, x)) return;
	this->QListBox::resizeEvent(x1);
    }
    virtual int resolution() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 5550, x)) return (int)x[0].s_int;
	return this->QPaintDevice::resolution();
    }
    virtual void selectAll(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4353, x)) return;
	this->QListBox::selectAll(x1);
    }
    virtual void setAcceptDrops(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9629, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9583, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAutoMask(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9630, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9579, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9541, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9632, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9581, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setBottomItem(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4287, x)) return;
	this->QListBox::setBottomItem(x1);
    }
    virtual void setCaption(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9647, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setColumnMode(QListBox::LayoutMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4306, x)) return;
	this->QListBox::setColumnMode(x1);
    }
    virtual void setColumnMode(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4307, x)) return;
	this->QListBox::setColumnMode(x1);
    }
    virtual void setContentsPos(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 6636, x)) return;
	this->QScrollView::setContentsPos(x1, x2);
    }
    virtual void setCornerWidget(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6598, x)) return;
	this->QScrollView::setCornerWidget(x1);
    }
    virtual void setCurrentItem(QListBoxItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4283, x)) return;
	this->QListBox::setCurrentItem(x1);
    }
    virtual void setCurrentItem(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4282, x)) return;
	this->QListBox::setCurrentItem(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9568, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setDragAutoScroll(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6632, x)) return;
	this->QScrollView::setDragAutoScroll(x1);
    }
    virtual void setEnabled(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6642, x)) return;
	this->QScrollView::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9545, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9547, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFocus() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9651, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9586, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4251, x)) return;
	this->QListBox::setFont(x1);
    }
    virtual void setFrameRect(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 2938, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2922, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9683, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	Smoke::StackItem x[5];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 9682, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)&x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6675, x)) return;
	this->QScrollView::setHBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setHScrollBarMode(QScrollView::ScrollBarMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6596, x)) return;
	this->QScrollView::setHScrollBarMode(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9648, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9649, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setKeyCompression(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2932, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setMargin(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2934, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMargins(int x1, int x2, int x3, int x4) {
	Smoke::StackItem x[5];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 6669, x)) return;
	this->QScrollView::setMargins(x1, x2, x3, x4);
    }
    virtual void setMask(const QBitmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9575, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9576, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9518, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	Smoke::StackItem x[7];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_bool = (bool)x5;
	x[6].s_voidp = (void*)x6;
	if(call_method((void*)this, 9742, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2936, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9516, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setMouseTracking(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9650, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9485, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9551, x)) return;
	this->QWidget::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9558, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 5440, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setResizePolicy(QScrollView::ResizePolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6580, x)) return;
	this->QScrollView::setResizePolicy(x1);
    }
    virtual void setResolution(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 5549, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setRowMode(QListBox::LayoutMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4308, x)) return;
	this->QListBox::setRowMode(x1);
    }
    virtual void setRowMode(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4309, x)) return;
	this->QListBox::setRowMode(x1);
    }
    virtual void setSelected(QListBoxItem* x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 4293, x)) return;
	this->QListBox::setSelected(x1, x2);
    }
    virtual void setSelectionMode(QListBox::SelectionMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4289, x)) return;
	this->QListBox::setSelectionMode(x1);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9607, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setTopItem(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4286, x)) return;
	this->QListBox::setTopItem(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9653, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)&x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6676, x)) return;
	this->QScrollView::setVBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setVScrollBarMode(QScrollView::ScrollBarMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6594, x)) return;
	this->QScrollView::setVScrollBarMode(x1);
    }
    virtual void setVariableHeight(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4317, x)) return;
	this->QListBox::setVariableHeight(x1);
    }
    virtual void setVariableWidth(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4315, x)) return;
	this->QListBox::setVariableWidth(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9735, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	Smoke::StackItem x[2];
	x[1].s_uint = (uint)x1;
	if(call_method((void*)this, 9732, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void show() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 6611, x)) return;
	this->QScrollView::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4386, x)) return;
	this->QListBox::showEvent(x1);
    }
    virtual void showMaximized() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9669, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9668, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9671, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4297, x)) {
	    QSize *xptr = (QSize *)x[0].s_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QListBox::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9606, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].s_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6582, x)) return;
	this->QScrollView::styleChange(x1);
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5464, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void unsetCursor() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9569, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9716, x)) return;
	this->QWidget::updateMask();
    }
    virtual void viewportContextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6667, x)) return;
	this->QScrollView::viewportContextMenuEvent(x1);
    }
    virtual void viewportDragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6662, x)) return;
	this->QScrollView::viewportDragEnterEvent(x1);
    }
    virtual void viewportDragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6664, x)) return;
	this->QScrollView::viewportDragLeaveEvent(x1);
    }
    virtual void viewportDragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6663, x)) return;
	this->QScrollView::viewportDragMoveEvent(x1);
    }
    virtual void viewportDropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6665, x)) return;
	this->QScrollView::viewportDropEvent(x1);
    }
    virtual void viewportMouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6660, x)) return;
	this->QScrollView::viewportMouseDoubleClickEvent(x1);
    }
    virtual void viewportMouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6661, x)) return;
	this->QScrollView::viewportMouseMoveEvent(x1);
    }
    virtual void viewportMousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6658, x)) return;
	this->QScrollView::viewportMousePressEvent(x1);
    }
    virtual void viewportMouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6659, x)) return;
	this->QScrollView::viewportMouseReleaseEvent(x1);
    }
    virtual void viewportPaintEvent(QPaintEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4318, x)) return;
	this->QListBox::viewportPaintEvent(x1);
    }
    virtual void viewportResizeEvent(QResizeEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6657, x)) return;
	this->QScrollView::viewportResizeEvent(x1);
    }
    virtual void viewportWheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6666, x)) return;
	this->QScrollView::viewportWheelEvent(x1);
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6682, x)) return;
	this->QScrollView::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4397, x)) return;
	this->QListBox::windowActivationChange(x1);
    }
    ~x_QListBox() {}
};
void xcall_QListBox(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QListBox *xself = (x_QListBox*)obj;
    switch(xi) {
	case 0: x_QListBox::x_0(args);	break;
	case 1: x_QListBox::x_1(args);	break;
	case 2: x_QListBox::x_2(args);	break;
	case 3: x_QListBox::x_3(args);	break;
	case 4: x_QListBox::x_4(args);	break;
	case 5: x_QListBox::x_5(args);	break;
	case 6: x_QListBox::x_6(args);	break;
	case 7: x_QListBox::x_7(args);	break;
	case 8: x_QListBox::x_8(args);	break;
	case 9: x_QListBox::x_9(args);	break;
	case 10: x_QListBox::x_10(args);	break;
	case 11: x_QListBox::x_11(args);	break;
	case 12: xself->x_12(args);	break;
	case 13: xself->x_13(args);	break;
	case 14: xself->x_14(args);	break;
	case 15: xself->x_15(args);	break;
	case 16: xself->x_16(args);	break;
	case 17: xself->x_17(args);	break;
	case 18: xself->x_18(args);	break;
	case 19: xself->x_19(args);	break;
	case 20: xself->x_20(args);	break;
	case 21: xself->x_21(args);	break;
	case 22: xself->x_22(args);	break;
	case 23: xself->x_23(args);	break;
	case 24: xself->x_24(args);	break;
	case 25: xself->x_25(args);	break;
	case 26: xself->x_26(args);	break;
	case 27: xself->x_27(args);	break;
	case 28: xself->x_28(args);	break;
	case 29: xself->x_29(args);	break;
	case 30: xself->x_30(args);	break;
	case 31: xself->x_31(args);	break;
	case 32: xself->x_32(args);	break;
	case 33: xself->x_33(args);	break;
	case 34: xself->x_34(args);	break;
	case 35: xself->x_35(args);	break;
	case 36: xself->x_36(args);	break;
	case 37: xself->x_37(args);	break;
	case 38: xself->x_38(args);	break;
	case 39: xself->x_39(args);	break;
	case 40: xself->x_40(args);	break;
	case 41: xself->x_41(args);	break;
	case 42: xself->x_42(args);	break;
	case 43: xself->x_43(args);	break;
	case 44: xself->x_44(args);	break;
	case 45: xself->x_45(args);	break;
	case 46: xself->x_46(args);	break;
	case 47: xself->x_47(args);	break;
	case 48: xself->x_48(args);	break;
	case 49: xself->x_49(args);	break;
	case 50: xself->x_50(args);	break;
	case 51: xself->x_51(args);	break;
	case 52: xself->x_52(args);	break;
	case 53: xself->x_53(args);	break;
	case 54: xself->x_54(args);	break;
	case 55: xself->x_55(args);	break;
	case 56: xself->x_56(args);	break;
	case 57: xself->x_57(args);	break;
	case 58: xself->x_58(args);	break;
	case 59: xself->x_59(args);	break;
	case 60: xself->x_60(args);	break;
	case 61: xself->x_61(args);	break;
	case 62: xself->x_62(args);	break;
	case 63: xself->x_63(args);	break;
	case 64: xself->x_64(args);	break;
	case 65: xself->x_65(args);	break;
	case 66: xself->x_66(args);	break;
	case 67: xself->x_67(args);	break;
	case 68: xself->x_68(args);	break;
	case 69: xself->x_69(args);	break;
	case 70: xself->x_70(args);	break;
	case 71: xself->x_71(args);	break;
	case 72: xself->x_72(args);	break;
	case 73: xself->x_73(args);	break;
	case 74: xself->x_74(args);	break;
	case 75: xself->x_75(args);	break;
	case 76: xself->x_76(args);	break;
	case 77: xself->x_77(args);	break;
	case 78: xself->x_78(args);	break;
	case 79: xself->x_79(args);	break;
	case 80: xself->x_80(args);	break;
	case 81: xself->x_81(args);	break;
	case 82: xself->x_82(args);	break;
	case 83: xself->x_83(args);	break;
	case 84: xself->x_84(args);	break;
	case 85: xself->x_85(args);	break;
	case 86: xself->x_86(args);	break;
	case 87: xself->x_87(args);	break;
	case 88: xself->x_88(args);	break;
	case 89: xself->x_89(args);	break;
	case 90: xself->x_90(args);	break;
	case 91: xself->x_91(args);	break;
	case 92: xself->x_92(args);	break;
	case 93: xself->x_93(args);	break;
	case 94: xself->x_94(args);	break;
	case 95: xself->x_95(args);	break;
	case 96: xself->x_96(args);	break;
	case 97: xself->x_97(args);	break;
	case 98: xself->x_98(args);	break;
	case 99: xself->x_99(args);	break;
	case 100: xself->x_100(args);	break;
	case 101: xself->x_101(args);	break;
	case 102: xself->x_102(args);	break;
	case 103: xself->x_103(args);	break;
	case 104: xself->x_104(args);	break;
	case 105: xself->x_105(args);	break;
	case 106: xself->x_106(args);	break;
	case 107: xself->x_107(args);	break;
	case 108: xself->x_108(args);	break;
	case 109: xself->x_109(args);	break;
	case 110: xself->x_110(args);	break;
	case 111: xself->x_111(args);	break;
	case 112: xself->x_112(args);	break;
	case 113: xself->x_113(args);	break;
	case 114: xself->x_114(args);	break;
	case 115: xself->x_115(args);	break;
	case 116: xself->x_116(args);	break;
	case 117: xself->x_117(args);	break;
	case 118: xself->x_118(args);	break;
	case 119: xself->x_119(args);	break;
	case 120: xself->x_120(args);	break;
	case 121: xself->x_121(args);	break;
	case 122: xself->x_122(args);	break;
	case 123: xself->x_123(args);	break;
	case 124: xself->x_124(args);	break;
	case 125: xself->x_125(args);	break;
	case 126: xself->x_126(args);	break;
	case 127: xself->x_127(args);	break;
	case 128: xself->x_128(args);	break;
	case 129: xself->x_129(args);	break;
	case 130: xself->x_130(args);	break;
	case 131: xself->x_131(args);	break;
	case 132: xself->x_132(args);	break;
	case 133: xself->x_133(args);	break;
	case 134: xself->x_134(args);	break;
	case 135: xself->x_135(args);	break;
	case 136: xself->x_136(args);	break;
	case 137: xself->x_137(args);	break;
	case 138: xself->x_138(args);	break;
	case 139: xself->x_139(args);	break;
	case 140: xself->x_140(args);	break;
	case 141: xself->x_141(args);	break;
	case 142: xself->x_142(args);	break;
	case 143: xself->x_143(args);	break;
	case 144: xself->x_144(args);	break;
	case 145: xself->x_145(args);	break;
	case 146: xself->x_146(args);	break;
	case 147: xself->x_147(args);	break;
	case 148: xself->x_148(args);	break;
	case 149: xself->x_149(args);	break;
	case 150: xself->x_150(args);	break;
	case 151: xself->x_151(args);	break;
	case 152: xself->x_152(args);	break;
	case 153: xself->x_153(args);	break;
	case 154: xself->x_154(args);	break;
	case 155: xself->x_155(args);	break;
	case 156: xself->x_156(args);	break;
	case 157: xself->x_157(args);	break;
	case 158: xself->x_158(args);	break;
	case 159: xself->x_159(args);	break;
	case 160: xself->x_160(args);	break;
	case 161: xself->x_161(args);	break;
	case 162: delete (QListBox*)xself;	break;
    }
}
