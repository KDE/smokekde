//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qnamespace.h>

class x_Qt {
private:
    Qt *xthis;
public:
    x_Qt(void *x) : xthis((Qt*)x) {}
    static void x_0(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoButton;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LeftButton;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_long = (long)Qt::RightButton;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MidButton;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MouseButtonMask;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ShiftButton;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ControlButton;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AltButton;
    }
    static void x_8(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MetaButton;
    }
    static void x_9(Smoke::Stack x) {
	x[0].s_long = (long)Qt::KeyButtonMask;
    }
    static void x_10(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Keypad;
    }
    static void x_11(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Horizontal;
    }
    static void x_12(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Vertical;
    }
    static void x_13(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignAuto;
    }
    static void x_14(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignLeft;
    }
    static void x_15(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignRight;
    }
    static void x_16(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignHCenter;
    }
    static void x_17(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignJustify;
    }
    static void x_18(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignHorizontal_Mask;
    }
    static void x_19(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignTop;
    }
    static void x_20(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignBottom;
    }
    static void x_21(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignVCenter;
    }
    static void x_22(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignVertical_Mask;
    }
    static void x_23(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlignCenter;
    }
    static void x_24(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SingleLine;
    }
    static void x_25(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DontClip;
    }
    static void x_26(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ExpandTabs;
    }
    static void x_27(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ShowPrefix;
    }
    static void x_28(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WordBreak;
    }
    static void x_29(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BreakAnywhere;
    }
    static void x_30(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DontPrint;
    }
    static void x_31(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoAccel;
    }
    static void x_32(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Created;
    }
    static void x_33(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Disabled;
    }
    static void x_34(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Visible;
    }
    static void x_35(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_ForceHide;
    }
    static void x_36(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_OwnCursor;
    }
    static void x_37(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_MouseTracking;
    }
    static void x_38(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_CompressKeys;
    }
    static void x_39(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_BlockUpdates;
    }
    static void x_40(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_InPaintEvent;
    }
    static void x_41(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Reparented;
    }
    static void x_42(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_ConfigPending;
    }
    static void x_43(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Resized;
    }
    static void x_44(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_AutoMask;
    }
    static void x_45(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Polished;
    }
    static void x_46(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_DND;
    }
    static void x_47(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Reserved0;
    }
    static void x_48(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Reserved1;
    }
    static void x_49(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Reserved2;
    }
    static void x_50(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Reserved3;
    }
    static void x_51(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Maximized;
    }
    static void x_52(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Minimized;
    }
    static void x_53(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_ForceDisabled;
    }
    static void x_54(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_Exposed;
    }
    static void x_55(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WState_HasMouse;
    }
    static void x_56(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_TopLevel;
    }
    static void x_57(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_Dialog;
    }
    static void x_58(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_Popup;
    }
    static void x_59(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_Desktop;
    }
    static void x_60(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_Mask;
    }
    static void x_61(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Customize;
    }
    static void x_62(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_NormalBorder;
    }
    static void x_63(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_DialogBorder;
    }
    static void x_64(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_NoBorder;
    }
    static void x_65(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Title;
    }
    static void x_66(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_SysMenu;
    }
    static void x_67(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Minimize;
    }
    static void x_68(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Maximize;
    }
    static void x_69(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_MinMax;
    }
    static void x_70(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Tool;
    }
    static void x_71(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_StaysOnTop;
    }
    static void x_72(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_ContextHelp;
    }
    static void x_73(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Reserved;
    }
    static void x_74(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Mask;
    }
    static void x_75(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WDestructiveClose;
    }
    static void x_76(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WPaintDesktop;
    }
    static void x_77(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WPaintUnclipped;
    }
    static void x_78(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WPaintClever;
    }
    static void x_79(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WResizeNoErase;
    }
    static void x_80(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WMouseNoMask;
    }
    static void x_81(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStaticContents;
    }
    static void x_82(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WRepaintNoErase;
    }
    static void x_83(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WX11BypassWM;
    }
    static void x_84(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WWinOwnDC;
    }
    static void x_85(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WGroupLeader;
    }
    static void x_86(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WShowModal;
    }
    static void x_87(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WNoMousePropagation;
    }
    static void x_88(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WSubWindow;
    }
    static void x_89(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WNorthWestGravity;
    }
    static void x_90(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WType_Modal;
    }
    static void x_91(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_Dialog;
    }
    static void x_92(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WStyle_NoBorderEx;
    }
    static void x_93(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ColorMode_Mask;
    }
    static void x_94(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AutoColor;
    }
    static void x_95(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ColorOnly;
    }
    static void x_96(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MonoOnly;
    }
    static void x_97(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AlphaDither_Mask;
    }
    static void x_98(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ThresholdAlphaDither;
    }
    static void x_99(Smoke::Stack x) {
	x[0].s_long = (long)Qt::OrderedAlphaDither;
    }
    static void x_100(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DiffuseAlphaDither;
    }
    static void x_101(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoAlpha;
    }
    static void x_102(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dither_Mask;
    }
    static void x_103(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DiffuseDither;
    }
    static void x_104(Smoke::Stack x) {
	x[0].s_long = (long)Qt::OrderedDither;
    }
    static void x_105(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ThresholdDither;
    }
    static void x_106(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DitherMode_Mask;
    }
    static void x_107(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AutoDither;
    }
    static void x_108(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PreferDither;
    }
    static void x_109(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AvoidDither;
    }
    static void x_110(Smoke::Stack x) {
	x[0].s_long = (long)Qt::TransparentMode;
    }
    static void x_111(Smoke::Stack x) {
	x[0].s_long = (long)Qt::OpaqueMode;
    }
    static void x_112(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PixelUnit;
    }
    static void x_113(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LoMetricUnit;
    }
    static void x_114(Smoke::Stack x) {
	x[0].s_long = (long)Qt::HiMetricUnit;
    }
    static void x_115(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LoEnglishUnit;
    }
    static void x_116(Smoke::Stack x) {
	x[0].s_long = (long)Qt::HiEnglishUnit;
    }
    static void x_117(Smoke::Stack x) {
	x[0].s_long = (long)Qt::TwipsUnit;
    }
    static void x_118(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WindowsStyle;
    }
    static void x_119(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MotifStyle;
    }
    static void x_120(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SHIFT;
    }
    static void x_121(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CTRL;
    }
    static void x_122(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ALT;
    }
    static void x_123(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MODIFIER_MASK;
    }
    static void x_124(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UNICODE_ACCEL;
    }
    static void x_125(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ASCII_ACCEL;
    }
    static void x_126(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Escape;
    }
    static void x_127(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Tab;
    }
    static void x_128(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Backtab;
    }
    static void x_129(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BackTab;
    }
    static void x_130(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Backspace;
    }
    static void x_131(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BackSpace;
    }
    static void x_132(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Return;
    }
    static void x_133(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Enter;
    }
    static void x_134(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Insert;
    }
    static void x_135(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Delete;
    }
    static void x_136(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Pause;
    }
    static void x_137(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Print;
    }
    static void x_138(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_SysReq;
    }
    static void x_139(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Home;
    }
    static void x_140(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_End;
    }
    static void x_141(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Left;
    }
    static void x_142(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Up;
    }
    static void x_143(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Right;
    }
    static void x_144(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Down;
    }
    static void x_145(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Prior;
    }
    static void x_146(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_PageUp;
    }
    static void x_147(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Next;
    }
    static void x_148(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_PageDown;
    }
    static void x_149(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Shift;
    }
    static void x_150(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Control;
    }
    static void x_151(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Meta;
    }
    static void x_152(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Alt;
    }
    static void x_153(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_CapsLock;
    }
    static void x_154(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_NumLock;
    }
    static void x_155(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ScrollLock;
    }
    static void x_156(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F1;
    }
    static void x_157(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F2;
    }
    static void x_158(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F3;
    }
    static void x_159(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F4;
    }
    static void x_160(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F5;
    }
    static void x_161(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F6;
    }
    static void x_162(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F7;
    }
    static void x_163(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F8;
    }
    static void x_164(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F9;
    }
    static void x_165(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F10;
    }
    static void x_166(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F11;
    }
    static void x_167(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F12;
    }
    static void x_168(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F13;
    }
    static void x_169(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F14;
    }
    static void x_170(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F15;
    }
    static void x_171(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F16;
    }
    static void x_172(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F17;
    }
    static void x_173(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F18;
    }
    static void x_174(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F19;
    }
    static void x_175(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F20;
    }
    static void x_176(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F21;
    }
    static void x_177(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F22;
    }
    static void x_178(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F23;
    }
    static void x_179(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F24;
    }
    static void x_180(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F25;
    }
    static void x_181(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F26;
    }
    static void x_182(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F27;
    }
    static void x_183(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F28;
    }
    static void x_184(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F29;
    }
    static void x_185(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F30;
    }
    static void x_186(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F31;
    }
    static void x_187(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F32;
    }
    static void x_188(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F33;
    }
    static void x_189(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F34;
    }
    static void x_190(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F35;
    }
    static void x_191(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Super_L;
    }
    static void x_192(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Super_R;
    }
    static void x_193(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Menu;
    }
    static void x_194(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Hyper_L;
    }
    static void x_195(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Hyper_R;
    }
    static void x_196(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Help;
    }
    static void x_197(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Direction_L;
    }
    static void x_198(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Direction_R;
    }
    static void x_199(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Space;
    }
    static void x_200(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Any;
    }
    static void x_201(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Exclam;
    }
    static void x_202(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_QuoteDbl;
    }
    static void x_203(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_NumberSign;
    }
    static void x_204(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Dollar;
    }
    static void x_205(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Percent;
    }
    static void x_206(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ampersand;
    }
    static void x_207(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Apostrophe;
    }
    static void x_208(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ParenLeft;
    }
    static void x_209(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ParenRight;
    }
    static void x_210(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Asterisk;
    }
    static void x_211(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Plus;
    }
    static void x_212(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Comma;
    }
    static void x_213(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Minus;
    }
    static void x_214(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Period;
    }
    static void x_215(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Slash;
    }
    static void x_216(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_0;
    }
    static void x_217(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_1;
    }
    static void x_218(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_2;
    }
    static void x_219(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_3;
    }
    static void x_220(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_4;
    }
    static void x_221(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_5;
    }
    static void x_222(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_6;
    }
    static void x_223(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_7;
    }
    static void x_224(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_8;
    }
    static void x_225(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_9;
    }
    static void x_226(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Colon;
    }
    static void x_227(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Semicolon;
    }
    static void x_228(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Less;
    }
    static void x_229(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Equal;
    }
    static void x_230(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Greater;
    }
    static void x_231(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Question;
    }
    static void x_232(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_At;
    }
    static void x_233(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_A;
    }
    static void x_234(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_B;
    }
    static void x_235(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_C;
    }
    static void x_236(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_D;
    }
    static void x_237(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_E;
    }
    static void x_238(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_F;
    }
    static void x_239(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_G;
    }
    static void x_240(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_H;
    }
    static void x_241(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_I;
    }
    static void x_242(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_J;
    }
    static void x_243(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_K;
    }
    static void x_244(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_L;
    }
    static void x_245(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_M;
    }
    static void x_246(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_N;
    }
    static void x_247(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_O;
    }
    static void x_248(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_P;
    }
    static void x_249(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Q;
    }
    static void x_250(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_R;
    }
    static void x_251(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_S;
    }
    static void x_252(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_T;
    }
    static void x_253(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_U;
    }
    static void x_254(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_V;
    }
    static void x_255(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_W;
    }
    static void x_256(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_X;
    }
    static void x_257(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Y;
    }
    static void x_258(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Z;
    }
    static void x_259(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BracketLeft;
    }
    static void x_260(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Backslash;
    }
    static void x_261(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BracketRight;
    }
    static void x_262(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_AsciiCircum;
    }
    static void x_263(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Underscore;
    }
    static void x_264(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_QuoteLeft;
    }
    static void x_265(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BraceLeft;
    }
    static void x_266(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Bar;
    }
    static void x_267(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_BraceRight;
    }
    static void x_268(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_AsciiTilde;
    }
    static void x_269(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_nobreakspace;
    }
    static void x_270(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_exclamdown;
    }
    static void x_271(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_cent;
    }
    static void x_272(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_sterling;
    }
    static void x_273(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_currency;
    }
    static void x_274(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_yen;
    }
    static void x_275(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_brokenbar;
    }
    static void x_276(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_section;
    }
    static void x_277(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_diaeresis;
    }
    static void x_278(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_copyright;
    }
    static void x_279(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ordfeminine;
    }
    static void x_280(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_guillemotleft;
    }
    static void x_281(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_notsign;
    }
    static void x_282(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_hyphen;
    }
    static void x_283(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_registered;
    }
    static void x_284(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_macron;
    }
    static void x_285(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_degree;
    }
    static void x_286(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_plusminus;
    }
    static void x_287(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_twosuperior;
    }
    static void x_288(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_threesuperior;
    }
    static void x_289(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_acute;
    }
    static void x_290(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_mu;
    }
    static void x_291(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_paragraph;
    }
    static void x_292(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_periodcentered;
    }
    static void x_293(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_cedilla;
    }
    static void x_294(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_onesuperior;
    }
    static void x_295(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_masculine;
    }
    static void x_296(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_guillemotright;
    }
    static void x_297(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_onequarter;
    }
    static void x_298(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_onehalf;
    }
    static void x_299(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_threequarters;
    }
    static void x_300(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_questiondown;
    }
    static void x_301(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Agrave;
    }
    static void x_302(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Aacute;
    }
    static void x_303(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Acircumflex;
    }
    static void x_304(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Atilde;
    }
    static void x_305(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Adiaeresis;
    }
    static void x_306(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Aring;
    }
    static void x_307(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_AE;
    }
    static void x_308(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ccedilla;
    }
    static void x_309(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Egrave;
    }
    static void x_310(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Eacute;
    }
    static void x_311(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ecircumflex;
    }
    static void x_312(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ediaeresis;
    }
    static void x_313(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Igrave;
    }
    static void x_314(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Iacute;
    }
    static void x_315(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Icircumflex;
    }
    static void x_316(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Idiaeresis;
    }
    static void x_317(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ETH;
    }
    static void x_318(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ntilde;
    }
    static void x_319(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ograve;
    }
    static void x_320(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Oacute;
    }
    static void x_321(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ocircumflex;
    }
    static void x_322(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Otilde;
    }
    static void x_323(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Odiaeresis;
    }
    static void x_324(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_multiply;
    }
    static void x_325(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ooblique;
    }
    static void x_326(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ugrave;
    }
    static void x_327(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Uacute;
    }
    static void x_328(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Ucircumflex;
    }
    static void x_329(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Udiaeresis;
    }
    static void x_330(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_Yacute;
    }
    static void x_331(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_THORN;
    }
    static void x_332(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ssharp;
    }
    static void x_333(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_agrave;
    }
    static void x_334(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_aacute;
    }
    static void x_335(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_acircumflex;
    }
    static void x_336(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_atilde;
    }
    static void x_337(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_adiaeresis;
    }
    static void x_338(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_aring;
    }
    static void x_339(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ae;
    }
    static void x_340(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ccedilla;
    }
    static void x_341(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_egrave;
    }
    static void x_342(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_eacute;
    }
    static void x_343(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ecircumflex;
    }
    static void x_344(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ediaeresis;
    }
    static void x_345(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_igrave;
    }
    static void x_346(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_iacute;
    }
    static void x_347(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_icircumflex;
    }
    static void x_348(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_idiaeresis;
    }
    static void x_349(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_eth;
    }
    static void x_350(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ntilde;
    }
    static void x_351(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ograve;
    }
    static void x_352(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_oacute;
    }
    static void x_353(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ocircumflex;
    }
    static void x_354(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_otilde;
    }
    static void x_355(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_odiaeresis;
    }
    static void x_356(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_division;
    }
    static void x_357(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_oslash;
    }
    static void x_358(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ugrave;
    }
    static void x_359(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_uacute;
    }
    static void x_360(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ucircumflex;
    }
    static void x_361(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_udiaeresis;
    }
    static void x_362(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_yacute;
    }
    static void x_363(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_thorn;
    }
    static void x_364(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_ydiaeresis;
    }
    static void x_365(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Key_unknown;
    }
    static void x_366(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UpArrow;
    }
    static void x_367(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DownArrow;
    }
    static void x_368(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LeftArrow;
    }
    static void x_369(Smoke::Stack x) {
	x[0].s_long = (long)Qt::RightArrow;
    }
    static void x_370(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CopyROP;
    }
    static void x_371(Smoke::Stack x) {
	x[0].s_long = (long)Qt::OrROP;
    }
    static void x_372(Smoke::Stack x) {
	x[0].s_long = (long)Qt::XorROP;
    }
    static void x_373(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotAndROP;
    }
    static void x_374(Smoke::Stack x) {
	x[0].s_long = (long)Qt::EraseROP;
    }
    static void x_375(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotCopyROP;
    }
    static void x_376(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotOrROP;
    }
    static void x_377(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotXorROP;
    }
    static void x_378(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AndROP;
    }
    static void x_379(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotEraseROP;
    }
    static void x_380(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NotROP;
    }
    static void x_381(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ClearROP;
    }
    static void x_382(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SetROP;
    }
    static void x_383(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NopROP;
    }
    static void x_384(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AndNotROP;
    }
    static void x_385(Smoke::Stack x) {
	x[0].s_long = (long)Qt::OrNotROP;
    }
    static void x_386(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NandROP;
    }
    static void x_387(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NorROP;
    }
    static void x_388(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LastROP;
    }
    static void x_389(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoPen;
    }
    static void x_390(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SolidLine;
    }
    static void x_391(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DashLine;
    }
    static void x_392(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DotLine;
    }
    static void x_393(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DashDotLine;
    }
    static void x_394(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DashDotDotLine;
    }
    static void x_395(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MPenStyle;
    }
    static void x_396(Smoke::Stack x) {
	x[0].s_long = (long)Qt::FlatCap;
    }
    static void x_397(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SquareCap;
    }
    static void x_398(Smoke::Stack x) {
	x[0].s_long = (long)Qt::RoundCap;
    }
    static void x_399(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MPenCapStyle;
    }
    static void x_400(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MiterJoin;
    }
    static void x_401(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BevelJoin;
    }
    static void x_402(Smoke::Stack x) {
	x[0].s_long = (long)Qt::RoundJoin;
    }
    static void x_403(Smoke::Stack x) {
	x[0].s_long = (long)Qt::MPenJoinStyle;
    }
    static void x_404(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoBrush;
    }
    static void x_405(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SolidPattern;
    }
    static void x_406(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense1Pattern;
    }
    static void x_407(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense2Pattern;
    }
    static void x_408(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense3Pattern;
    }
    static void x_409(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense4Pattern;
    }
    static void x_410(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense5Pattern;
    }
    static void x_411(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense6Pattern;
    }
    static void x_412(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Dense7Pattern;
    }
    static void x_413(Smoke::Stack x) {
	x[0].s_long = (long)Qt::HorPattern;
    }
    static void x_414(Smoke::Stack x) {
	x[0].s_long = (long)Qt::VerPattern;
    }
    static void x_415(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CrossPattern;
    }
    static void x_416(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BDiagPattern;
    }
    static void x_417(Smoke::Stack x) {
	x[0].s_long = (long)Qt::FDiagPattern;
    }
    static void x_418(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DiagCrossPattern;
    }
    static void x_419(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CustomPattern;
    }
    static void x_420(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_32s;
    }
    static void x_421(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_95;
    }
    static void x_422(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_98;
    }
    static void x_423(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_Me;
    }
    static void x_424(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_DOS_based;
    }
    static void x_425(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_NT;
    }
    static void x_426(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_2000;
    }
    static void x_427(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_XP;
    }
    static void x_428(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WV_NT_based;
    }
    static void x_429(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_General;
    }
    static void x_430(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_AnimateMenu;
    }
    static void x_431(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_FadeMenu;
    }
    static void x_432(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_AnimateCombo;
    }
    static void x_433(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_AnimateTooltip;
    }
    static void x_434(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UI_FadeTooltip;
    }
    static void x_435(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ArrowCursor;
    }
    static void x_436(Smoke::Stack x) {
	x[0].s_long = (long)Qt::UpArrowCursor;
    }
    static void x_437(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CrossCursor;
    }
    static void x_438(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WaitCursor;
    }
    static void x_439(Smoke::Stack x) {
	x[0].s_long = (long)Qt::IbeamCursor;
    }
    static void x_440(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SizeVerCursor;
    }
    static void x_441(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SizeHorCursor;
    }
    static void x_442(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SizeBDiagCursor;
    }
    static void x_443(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SizeFDiagCursor;
    }
    static void x_444(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SizeAllCursor;
    }
    static void x_445(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BlankCursor;
    }
    static void x_446(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SplitVCursor;
    }
    static void x_447(Smoke::Stack x) {
	x[0].s_long = (long)Qt::SplitHCursor;
    }
    static void x_448(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PointingHandCursor;
    }
    static void x_449(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ForbiddenCursor;
    }
    static void x_450(Smoke::Stack x) {
	x[0].s_long = (long)Qt::WhatsThisCursor;
    }
    static void x_451(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LastCursor;
    }
    static void x_452(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BitmapCursor;
    }
    static void x_453(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PlainText;
    }
    static void x_454(Smoke::Stack x) {
	x[0].s_long = (long)Qt::RichText;
    }
    static void x_455(Smoke::Stack x) {
	x[0].s_long = (long)Qt::AutoText;
    }
    static void x_456(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockUnmanaged;
    }
    static void x_457(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockTornOff;
    }
    static void x_458(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockTop;
    }
    static void x_459(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockBottom;
    }
    static void x_460(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockRight;
    }
    static void x_461(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockLeft;
    }
    static void x_462(Smoke::Stack x) {
	x[0].s_long = (long)Qt::DockMinimized;
    }
    static void x_463(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Unmanaged;
    }
    static void x_464(Smoke::Stack x) {
	x[0].s_long = (long)Qt::TornOff;
    }
    static void x_465(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Top;
    }
    static void x_466(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Bottom;
    }
    static void x_467(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Right;
    }
    static void x_468(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Left;
    }
    static void x_469(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Minimized;
    }
    static void x_470(Smoke::Stack x) {
	x[0].s_long = (long)Qt::TextDate;
    }
    static void x_471(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ISODate;
    }
    static void x_472(Smoke::Stack x) {
	x[0].s_long = (long)Qt::LocalDate;
    }
    static void x_473(Smoke::Stack x) {
	x[0].s_long = (long)Qt::FixedColor;
    }
    static void x_474(Smoke::Stack x) {
	x[0].s_long = (long)Qt::FixedPixmap;
    }
    static void x_475(Smoke::Stack x) {
	x[0].s_long = (long)Qt::NoBackground;
    }
    static void x_476(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteForeground;
    }
    static void x_477(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteButton;
    }
    static void x_478(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteLight;
    }
    static void x_479(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteMidlight;
    }
    static void x_480(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteDark;
    }
    static void x_481(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteMid;
    }
    static void x_482(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteText;
    }
    static void x_483(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteBrightText;
    }
    static void x_484(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteBase;
    }
    static void x_485(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteBackground;
    }
    static void x_486(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteShadow;
    }
    static void x_487(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteHighlight;
    }
    static void x_488(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteHighlightedText;
    }
    static void x_489(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteButtonText;
    }
    static void x_490(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteLink;
    }
    static void x_491(Smoke::Stack x) {
	x[0].s_long = (long)Qt::PaletteLinkVisited;
    }
    static void x_492(Smoke::Stack x) {
	x[0].s_long = (long)Qt::X11ParentRelative;
    }
    static void x_493(Smoke::Stack x) {
	x[0].s_long = (long)Qt::CaseSensitive;
    }
    static void x_494(Smoke::Stack x) {
	x[0].s_long = (long)Qt::BeginsWith;
    }
    static void x_495(Smoke::Stack x) {
	x[0].s_long = (long)Qt::EndsWith;
    }
    static void x_496(Smoke::Stack x) {
	x[0].s_long = (long)Qt::Contains;
    }
    static void x_497(Smoke::Stack x) {
	x[0].s_long = (long)Qt::ExactMatch;
    }
    ~x_Qt() {}
};
void xcall_Qt(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_Qt xtmp(obj), *xself = &xtmp;
    switch(xi) {
	case 0: x_Qt::x_0(args);	break;
	case 1: x_Qt::x_1(args);	break;
	case 2: x_Qt::x_2(args);	break;
	case 3: x_Qt::x_3(args);	break;
	case 4: x_Qt::x_4(args);	break;
	case 5: x_Qt::x_5(args);	break;
	case 6: x_Qt::x_6(args);	break;
	case 7: x_Qt::x_7(args);	break;
	case 8: x_Qt::x_8(args);	break;
	case 9: x_Qt::x_9(args);	break;
	case 10: x_Qt::x_10(args);	break;
	case 11: x_Qt::x_11(args);	break;
	case 12: x_Qt::x_12(args);	break;
	case 13: x_Qt::x_13(args);	break;
	case 14: x_Qt::x_14(args);	break;
	case 15: x_Qt::x_15(args);	break;
	case 16: x_Qt::x_16(args);	break;
	case 17: x_Qt::x_17(args);	break;
	case 18: x_Qt::x_18(args);	break;
	case 19: x_Qt::x_19(args);	break;
	case 20: x_Qt::x_20(args);	break;
	case 21: x_Qt::x_21(args);	break;
	case 22: x_Qt::x_22(args);	break;
	case 23: x_Qt::x_23(args);	break;
	case 24: x_Qt::x_24(args);	break;
	case 25: x_Qt::x_25(args);	break;
	case 26: x_Qt::x_26(args);	break;
	case 27: x_Qt::x_27(args);	break;
	case 28: x_Qt::x_28(args);	break;
	case 29: x_Qt::x_29(args);	break;
	case 30: x_Qt::x_30(args);	break;
	case 31: x_Qt::x_31(args);	break;
	case 32: x_Qt::x_32(args);	break;
	case 33: x_Qt::x_33(args);	break;
	case 34: x_Qt::x_34(args);	break;
	case 35: x_Qt::x_35(args);	break;
	case 36: x_Qt::x_36(args);	break;
	case 37: x_Qt::x_37(args);	break;
	case 38: x_Qt::x_38(args);	break;
	case 39: x_Qt::x_39(args);	break;
	case 40: x_Qt::x_40(args);	break;
	case 41: x_Qt::x_41(args);	break;
	case 42: x_Qt::x_42(args);	break;
	case 43: x_Qt::x_43(args);	break;
	case 44: x_Qt::x_44(args);	break;
	case 45: x_Qt::x_45(args);	break;
	case 46: x_Qt::x_46(args);	break;
	case 47: x_Qt::x_47(args);	break;
	case 48: x_Qt::x_48(args);	break;
	case 49: x_Qt::x_49(args);	break;
	case 50: x_Qt::x_50(args);	break;
	case 51: x_Qt::x_51(args);	break;
	case 52: x_Qt::x_52(args);	break;
	case 53: x_Qt::x_53(args);	break;
	case 54: x_Qt::x_54(args);	break;
	case 55: x_Qt::x_55(args);	break;
	case 56: x_Qt::x_56(args);	break;
	case 57: x_Qt::x_57(args);	break;
	case 58: x_Qt::x_58(args);	break;
	case 59: x_Qt::x_59(args);	break;
	case 60: x_Qt::x_60(args);	break;
	case 61: x_Qt::x_61(args);	break;
	case 62: x_Qt::x_62(args);	break;
	case 63: x_Qt::x_63(args);	break;
	case 64: x_Qt::x_64(args);	break;
	case 65: x_Qt::x_65(args);	break;
	case 66: x_Qt::x_66(args);	break;
	case 67: x_Qt::x_67(args);	break;
	case 68: x_Qt::x_68(args);	break;
	case 69: x_Qt::x_69(args);	break;
	case 70: x_Qt::x_70(args);	break;
	case 71: x_Qt::x_71(args);	break;
	case 72: x_Qt::x_72(args);	break;
	case 73: x_Qt::x_73(args);	break;
	case 74: x_Qt::x_74(args);	break;
	case 75: x_Qt::x_75(args);	break;
	case 76: x_Qt::x_76(args);	break;
	case 77: x_Qt::x_77(args);	break;
	case 78: x_Qt::x_78(args);	break;
	case 79: x_Qt::x_79(args);	break;
	case 80: x_Qt::x_80(args);	break;
	case 81: x_Qt::x_81(args);	break;
	case 82: x_Qt::x_82(args);	break;
	case 83: x_Qt::x_83(args);	break;
	case 84: x_Qt::x_84(args);	break;
	case 85: x_Qt::x_85(args);	break;
	case 86: x_Qt::x_86(args);	break;
	case 87: x_Qt::x_87(args);	break;
	case 88: x_Qt::x_88(args);	break;
	case 89: x_Qt::x_89(args);	break;
	case 90: x_Qt::x_90(args);	break;
	case 91: x_Qt::x_91(args);	break;
	case 92: x_Qt::x_92(args);	break;
	case 93: x_Qt::x_93(args);	break;
	case 94: x_Qt::x_94(args);	break;
	case 95: x_Qt::x_95(args);	break;
	case 96: x_Qt::x_96(args);	break;
	case 97: x_Qt::x_97(args);	break;
	case 98: x_Qt::x_98(args);	break;
	case 99: x_Qt::x_99(args);	break;
	case 100: x_Qt::x_100(args);	break;
	case 101: x_Qt::x_101(args);	break;
	case 102: x_Qt::x_102(args);	break;
	case 103: x_Qt::x_103(args);	break;
	case 104: x_Qt::x_104(args);	break;
	case 105: x_Qt::x_105(args);	break;
	case 106: x_Qt::x_106(args);	break;
	case 107: x_Qt::x_107(args);	break;
	case 108: x_Qt::x_108(args);	break;
	case 109: x_Qt::x_109(args);	break;
	case 110: x_Qt::x_110(args);	break;
	case 111: x_Qt::x_111(args);	break;
	case 112: x_Qt::x_112(args);	break;
	case 113: x_Qt::x_113(args);	break;
	case 114: x_Qt::x_114(args);	break;
	case 115: x_Qt::x_115(args);	break;
	case 116: x_Qt::x_116(args);	break;
	case 117: x_Qt::x_117(args);	break;
	case 118: x_Qt::x_118(args);	break;
	case 119: x_Qt::x_119(args);	break;
	case 120: x_Qt::x_120(args);	break;
	case 121: x_Qt::x_121(args);	break;
	case 122: x_Qt::x_122(args);	break;
	case 123: x_Qt::x_123(args);	break;
	case 124: x_Qt::x_124(args);	break;
	case 125: x_Qt::x_125(args);	break;
	case 126: x_Qt::x_126(args);	break;
	case 127: x_Qt::x_127(args);	break;
	case 128: x_Qt::x_128(args);	break;
	case 129: x_Qt::x_129(args);	break;
	case 130: x_Qt::x_130(args);	break;
	case 131: x_Qt::x_131(args);	break;
	case 132: x_Qt::x_132(args);	break;
	case 133: x_Qt::x_133(args);	break;
	case 134: x_Qt::x_134(args);	break;
	case 135: x_Qt::x_135(args);	break;
	case 136: x_Qt::x_136(args);	break;
	case 137: x_Qt::x_137(args);	break;
	case 138: x_Qt::x_138(args);	break;
	case 139: x_Qt::x_139(args);	break;
	case 140: x_Qt::x_140(args);	break;
	case 141: x_Qt::x_141(args);	break;
	case 142: x_Qt::x_142(args);	break;
	case 143: x_Qt::x_143(args);	break;
	case 144: x_Qt::x_144(args);	break;
	case 145: x_Qt::x_145(args);	break;
	case 146: x_Qt::x_146(args);	break;
	case 147: x_Qt::x_147(args);	break;
	case 148: x_Qt::x_148(args);	break;
	case 149: x_Qt::x_149(args);	break;
	case 150: x_Qt::x_150(args);	break;
	case 151: x_Qt::x_151(args);	break;
	case 152: x_Qt::x_152(args);	break;
	case 153: x_Qt::x_153(args);	break;
	case 154: x_Qt::x_154(args);	break;
	case 155: x_Qt::x_155(args);	break;
	case 156: x_Qt::x_156(args);	break;
	case 157: x_Qt::x_157(args);	break;
	case 158: x_Qt::x_158(args);	break;
	case 159: x_Qt::x_159(args);	break;
	case 160: x_Qt::x_160(args);	break;
	case 161: x_Qt::x_161(args);	break;
	case 162: x_Qt::x_162(args);	break;
	case 163: x_Qt::x_163(args);	break;
	case 164: x_Qt::x_164(args);	break;
	case 165: x_Qt::x_165(args);	break;
	case 166: x_Qt::x_166(args);	break;
	case 167: x_Qt::x_167(args);	break;
	case 168: x_Qt::x_168(args);	break;
	case 169: x_Qt::x_169(args);	break;
	case 170: x_Qt::x_170(args);	break;
	case 171: x_Qt::x_171(args);	break;
	case 172: x_Qt::x_172(args);	break;
	case 173: x_Qt::x_173(args);	break;
	case 174: x_Qt::x_174(args);	break;
	case 175: x_Qt::x_175(args);	break;
	case 176: x_Qt::x_176(args);	break;
	case 177: x_Qt::x_177(args);	break;
	case 178: x_Qt::x_178(args);	break;
	case 179: x_Qt::x_179(args);	break;
	case 180: x_Qt::x_180(args);	break;
	case 181: x_Qt::x_181(args);	break;
	case 182: x_Qt::x_182(args);	break;
	case 183: x_Qt::x_183(args);	break;
	case 184: x_Qt::x_184(args);	break;
	case 185: x_Qt::x_185(args);	break;
	case 186: x_Qt::x_186(args);	break;
	case 187: x_Qt::x_187(args);	break;
	case 188: x_Qt::x_188(args);	break;
	case 189: x_Qt::x_189(args);	break;
	case 190: x_Qt::x_190(args);	break;
	case 191: x_Qt::x_191(args);	break;
	case 192: x_Qt::x_192(args);	break;
	case 193: x_Qt::x_193(args);	break;
	case 194: x_Qt::x_194(args);	break;
	case 195: x_Qt::x_195(args);	break;
	case 196: x_Qt::x_196(args);	break;
	case 197: x_Qt::x_197(args);	break;
	case 198: x_Qt::x_198(args);	break;
	case 199: x_Qt::x_199(args);	break;
	case 200: x_Qt::x_200(args);	break;
	case 201: x_Qt::x_201(args);	break;
	case 202: x_Qt::x_202(args);	break;
	case 203: x_Qt::x_203(args);	break;
	case 204: x_Qt::x_204(args);	break;
	case 205: x_Qt::x_205(args);	break;
	case 206: x_Qt::x_206(args);	break;
	case 207: x_Qt::x_207(args);	break;
	case 208: x_Qt::x_208(args);	break;
	case 209: x_Qt::x_209(args);	break;
	case 210: x_Qt::x_210(args);	break;
	case 211: x_Qt::x_211(args);	break;
	case 212: x_Qt::x_212(args);	break;
	case 213: x_Qt::x_213(args);	break;
	case 214: x_Qt::x_214(args);	break;
	case 215: x_Qt::x_215(args);	break;
	case 216: x_Qt::x_216(args);	break;
	case 217: x_Qt::x_217(args);	break;
	case 218: x_Qt::x_218(args);	break;
	case 219: x_Qt::x_219(args);	break;
	case 220: x_Qt::x_220(args);	break;
	case 221: x_Qt::x_221(args);	break;
	case 222: x_Qt::x_222(args);	break;
	case 223: x_Qt::x_223(args);	break;
	case 224: x_Qt::x_224(args);	break;
	case 225: x_Qt::x_225(args);	break;
	case 226: x_Qt::x_226(args);	break;
	case 227: x_Qt::x_227(args);	break;
	case 228: x_Qt::x_228(args);	break;
	case 229: x_Qt::x_229(args);	break;
	case 230: x_Qt::x_230(args);	break;
	case 231: x_Qt::x_231(args);	break;
	case 232: x_Qt::x_232(args);	break;
	case 233: x_Qt::x_233(args);	break;
	case 234: x_Qt::x_234(args);	break;
	case 235: x_Qt::x_235(args);	break;
	case 236: x_Qt::x_236(args);	break;
	case 237: x_Qt::x_237(args);	break;
	case 238: x_Qt::x_238(args);	break;
	case 239: x_Qt::x_239(args);	break;
	case 240: x_Qt::x_240(args);	break;
	case 241: x_Qt::x_241(args);	break;
	case 242: x_Qt::x_242(args);	break;
	case 243: x_Qt::x_243(args);	break;
	case 244: x_Qt::x_244(args);	break;
	case 245: x_Qt::x_245(args);	break;
	case 246: x_Qt::x_246(args);	break;
	case 247: x_Qt::x_247(args);	break;
	case 248: x_Qt::x_248(args);	break;
	case 249: x_Qt::x_249(args);	break;
	case 250: x_Qt::x_250(args);	break;
	case 251: x_Qt::x_251(args);	break;
	case 252: x_Qt::x_252(args);	break;
	case 253: x_Qt::x_253(args);	break;
	case 254: x_Qt::x_254(args);	break;
	case 255: x_Qt::x_255(args);	break;
	case 256: x_Qt::x_256(args);	break;
	case 257: x_Qt::x_257(args);	break;
	case 258: x_Qt::x_258(args);	break;
	case 259: x_Qt::x_259(args);	break;
	case 260: x_Qt::x_260(args);	break;
	case 261: x_Qt::x_261(args);	break;
	case 262: x_Qt::x_262(args);	break;
	case 263: x_Qt::x_263(args);	break;
	case 264: x_Qt::x_264(args);	break;
	case 265: x_Qt::x_265(args);	break;
	case 266: x_Qt::x_266(args);	break;
	case 267: x_Qt::x_267(args);	break;
	case 268: x_Qt::x_268(args);	break;
	case 269: x_Qt::x_269(args);	break;
	case 270: x_Qt::x_270(args);	break;
	case 271: x_Qt::x_271(args);	break;
	case 272: x_Qt::x_272(args);	break;
	case 273: x_Qt::x_273(args);	break;
	case 274: x_Qt::x_274(args);	break;
	case 275: x_Qt::x_275(args);	break;
	case 276: x_Qt::x_276(args);	break;
	case 277: x_Qt::x_277(args);	break;
	case 278: x_Qt::x_278(args);	break;
	case 279: x_Qt::x_279(args);	break;
	case 280: x_Qt::x_280(args);	break;
	case 281: x_Qt::x_281(args);	break;
	case 282: x_Qt::x_282(args);	break;
	case 283: x_Qt::x_283(args);	break;
	case 284: x_Qt::x_284(args);	break;
	case 285: x_Qt::x_285(args);	break;
	case 286: x_Qt::x_286(args);	break;
	case 287: x_Qt::x_287(args);	break;
	case 288: x_Qt::x_288(args);	break;
	case 289: x_Qt::x_289(args);	break;
	case 290: x_Qt::x_290(args);	break;
	case 291: x_Qt::x_291(args);	break;
	case 292: x_Qt::x_292(args);	break;
	case 293: x_Qt::x_293(args);	break;
	case 294: x_Qt::x_294(args);	break;
	case 295: x_Qt::x_295(args);	break;
	case 296: x_Qt::x_296(args);	break;
	case 297: x_Qt::x_297(args);	break;
	case 298: x_Qt::x_298(args);	break;
	case 299: x_Qt::x_299(args);	break;
	case 300: x_Qt::x_300(args);	break;
	case 301: x_Qt::x_301(args);	break;
	case 302: x_Qt::x_302(args);	break;
	case 303: x_Qt::x_303(args);	break;
	case 304: x_Qt::x_304(args);	break;
	case 305: x_Qt::x_305(args);	break;
	case 306: x_Qt::x_306(args);	break;
	case 307: x_Qt::x_307(args);	break;
	case 308: x_Qt::x_308(args);	break;
	case 309: x_Qt::x_309(args);	break;
	case 310: x_Qt::x_310(args);	break;
	case 311: x_Qt::x_311(args);	break;
	case 312: x_Qt::x_312(args);	break;
	case 313: x_Qt::x_313(args);	break;
	case 314: x_Qt::x_314(args);	break;
	case 315: x_Qt::x_315(args);	break;
	case 316: x_Qt::x_316(args);	break;
	case 317: x_Qt::x_317(args);	break;
	case 318: x_Qt::x_318(args);	break;
	case 319: x_Qt::x_319(args);	break;
	case 320: x_Qt::x_320(args);	break;
	case 321: x_Qt::x_321(args);	break;
	case 322: x_Qt::x_322(args);	break;
	case 323: x_Qt::x_323(args);	break;
	case 324: x_Qt::x_324(args);	break;
	case 325: x_Qt::x_325(args);	break;
	case 326: x_Qt::x_326(args);	break;
	case 327: x_Qt::x_327(args);	break;
	case 328: x_Qt::x_328(args);	break;
	case 329: x_Qt::x_329(args);	break;
	case 330: x_Qt::x_330(args);	break;
	case 331: x_Qt::x_331(args);	break;
	case 332: x_Qt::x_332(args);	break;
	case 333: x_Qt::x_333(args);	break;
	case 334: x_Qt::x_334(args);	break;
	case 335: x_Qt::x_335(args);	break;
	case 336: x_Qt::x_336(args);	break;
	case 337: x_Qt::x_337(args);	break;
	case 338: x_Qt::x_338(args);	break;
	case 339: x_Qt::x_339(args);	break;
	case 340: x_Qt::x_340(args);	break;
	case 341: x_Qt::x_341(args);	break;
	case 342: x_Qt::x_342(args);	break;
	case 343: x_Qt::x_343(args);	break;
	case 344: x_Qt::x_344(args);	break;
	case 345: x_Qt::x_345(args);	break;
	case 346: x_Qt::x_346(args);	break;
	case 347: x_Qt::x_347(args);	break;
	case 348: x_Qt::x_348(args);	break;
	case 349: x_Qt::x_349(args);	break;
	case 350: x_Qt::x_350(args);	break;
	case 351: x_Qt::x_351(args);	break;
	case 352: x_Qt::x_352(args);	break;
	case 353: x_Qt::x_353(args);	break;
	case 354: x_Qt::x_354(args);	break;
	case 355: x_Qt::x_355(args);	break;
	case 356: x_Qt::x_356(args);	break;
	case 357: x_Qt::x_357(args);	break;
	case 358: x_Qt::x_358(args);	break;
	case 359: x_Qt::x_359(args);	break;
	case 360: x_Qt::x_360(args);	break;
	case 361: x_Qt::x_361(args);	break;
	case 362: x_Qt::x_362(args);	break;
	case 363: x_Qt::x_363(args);	break;
	case 364: x_Qt::x_364(args);	break;
	case 365: x_Qt::x_365(args);	break;
	case 366: x_Qt::x_366(args);	break;
	case 367: x_Qt::x_367(args);	break;
	case 368: x_Qt::x_368(args);	break;
	case 369: x_Qt::x_369(args);	break;
	case 370: x_Qt::x_370(args);	break;
	case 371: x_Qt::x_371(args);	break;
	case 372: x_Qt::x_372(args);	break;
	case 373: x_Qt::x_373(args);	break;
	case 374: x_Qt::x_374(args);	break;
	case 375: x_Qt::x_375(args);	break;
	case 376: x_Qt::x_376(args);	break;
	case 377: x_Qt::x_377(args);	break;
	case 378: x_Qt::x_378(args);	break;
	case 379: x_Qt::x_379(args);	break;
	case 380: x_Qt::x_380(args);	break;
	case 381: x_Qt::x_381(args);	break;
	case 382: x_Qt::x_382(args);	break;
	case 383: x_Qt::x_383(args);	break;
	case 384: x_Qt::x_384(args);	break;
	case 385: x_Qt::x_385(args);	break;
	case 386: x_Qt::x_386(args);	break;
	case 387: x_Qt::x_387(args);	break;
	case 388: x_Qt::x_388(args);	break;
	case 389: x_Qt::x_389(args);	break;
	case 390: x_Qt::x_390(args);	break;
	case 391: x_Qt::x_391(args);	break;
	case 392: x_Qt::x_392(args);	break;
	case 393: x_Qt::x_393(args);	break;
	case 394: x_Qt::x_394(args);	break;
	case 395: x_Qt::x_395(args);	break;
	case 396: x_Qt::x_396(args);	break;
	case 397: x_Qt::x_397(args);	break;
	case 398: x_Qt::x_398(args);	break;
	case 399: x_Qt::x_399(args);	break;
	case 400: x_Qt::x_400(args);	break;
	case 401: x_Qt::x_401(args);	break;
	case 402: x_Qt::x_402(args);	break;
	case 403: x_Qt::x_403(args);	break;
	case 404: x_Qt::x_404(args);	break;
	case 405: x_Qt::x_405(args);	break;
	case 406: x_Qt::x_406(args);	break;
	case 407: x_Qt::x_407(args);	break;
	case 408: x_Qt::x_408(args);	break;
	case 409: x_Qt::x_409(args);	break;
	case 410: x_Qt::x_410(args);	break;
	case 411: x_Qt::x_411(args);	break;
	case 412: x_Qt::x_412(args);	break;
	case 413: x_Qt::x_413(args);	break;
	case 414: x_Qt::x_414(args);	break;
	case 415: x_Qt::x_415(args);	break;
	case 416: x_Qt::x_416(args);	break;
	case 417: x_Qt::x_417(args);	break;
	case 418: x_Qt::x_418(args);	break;
	case 419: x_Qt::x_419(args);	break;
	case 420: x_Qt::x_420(args);	break;
	case 421: x_Qt::x_421(args);	break;
	case 422: x_Qt::x_422(args);	break;
	case 423: x_Qt::x_423(args);	break;
	case 424: x_Qt::x_424(args);	break;
	case 425: x_Qt::x_425(args);	break;
	case 426: x_Qt::x_426(args);	break;
	case 427: x_Qt::x_427(args);	break;
	case 428: x_Qt::x_428(args);	break;
	case 429: x_Qt::x_429(args);	break;
	case 430: x_Qt::x_430(args);	break;
	case 431: x_Qt::x_431(args);	break;
	case 432: x_Qt::x_432(args);	break;
	case 433: x_Qt::x_433(args);	break;
	case 434: x_Qt::x_434(args);	break;
	case 435: x_Qt::x_435(args);	break;
	case 436: x_Qt::x_436(args);	break;
	case 437: x_Qt::x_437(args);	break;
	case 438: x_Qt::x_438(args);	break;
	case 439: x_Qt::x_439(args);	break;
	case 440: x_Qt::x_440(args);	break;
	case 441: x_Qt::x_441(args);	break;
	case 442: x_Qt::x_442(args);	break;
	case 443: x_Qt::x_443(args);	break;
	case 444: x_Qt::x_444(args);	break;
	case 445: x_Qt::x_445(args);	break;
	case 446: x_Qt::x_446(args);	break;
	case 447: x_Qt::x_447(args);	break;
	case 448: x_Qt::x_448(args);	break;
	case 449: x_Qt::x_449(args);	break;
	case 450: x_Qt::x_450(args);	break;
	case 451: x_Qt::x_451(args);	break;
	case 452: x_Qt::x_452(args);	break;
	case 453: x_Qt::x_453(args);	break;
	case 454: x_Qt::x_454(args);	break;
	case 455: x_Qt::x_455(args);	break;
	case 456: x_Qt::x_456(args);	break;
	case 457: x_Qt::x_457(args);	break;
	case 458: x_Qt::x_458(args);	break;
	case 459: x_Qt::x_459(args);	break;
	case 460: x_Qt::x_460(args);	break;
	case 461: x_Qt::x_461(args);	break;
	case 462: x_Qt::x_462(args);	break;
	case 463: x_Qt::x_463(args);	break;
	case 464: x_Qt::x_464(args);	break;
	case 465: x_Qt::x_465(args);	break;
	case 466: x_Qt::x_466(args);	break;
	case 467: x_Qt::x_467(args);	break;
	case 468: x_Qt::x_468(args);	break;
	case 469: x_Qt::x_469(args);	break;
	case 470: x_Qt::x_470(args);	break;
	case 471: x_Qt::x_471(args);	break;
	case 472: x_Qt::x_472(args);	break;
	case 473: x_Qt::x_473(args);	break;
	case 474: x_Qt::x_474(args);	break;
	case 475: x_Qt::x_475(args);	break;
	case 476: x_Qt::x_476(args);	break;
	case 477: x_Qt::x_477(args);	break;
	case 478: x_Qt::x_478(args);	break;
	case 479: x_Qt::x_479(args);	break;
	case 480: x_Qt::x_480(args);	break;
	case 481: x_Qt::x_481(args);	break;
	case 482: x_Qt::x_482(args);	break;
	case 483: x_Qt::x_483(args);	break;
	case 484: x_Qt::x_484(args);	break;
	case 485: x_Qt::x_485(args);	break;
	case 486: x_Qt::x_486(args);	break;
	case 487: x_Qt::x_487(args);	break;
	case 488: x_Qt::x_488(args);	break;
	case 489: x_Qt::x_489(args);	break;
	case 490: x_Qt::x_490(args);	break;
	case 491: x_Qt::x_491(args);	break;
	case 492: x_Qt::x_492(args);	break;
	case 493: x_Qt::x_493(args);	break;
	case 494: x_Qt::x_494(args);	break;
	case 495: x_Qt::x_495(args);	break;
	case 496: x_Qt::x_496(args);	break;
	case 497: x_Qt::x_497(args);	break;
    }
}
