//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qstring.h>
#include <qlistbox.h>

class x_QListBoxItem : public QListBoxItem {
public:
    static void x_0(xargs *x) {
	// QListBoxItem(QListBox*)
	x_QListBoxItem* xret = new x_QListBoxItem((QListBox*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QListBoxItem(QListBox* x1) : QListBoxItem(x1) {
    }
    static void x_1(xargs *x) {
	// QListBoxItem()
	x_QListBoxItem* xret = new x_QListBoxItem();
	x[0].x_voidp = (void*)xret;
    }
    x_QListBoxItem() : QListBoxItem() {
    }
    static void x_2(xargs *x) {
	// QListBoxItem(QListBox*, QListBoxItem*)
	x_QListBoxItem* xret = new x_QListBoxItem((QListBox*)x[1].x_voidp,(QListBoxItem*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QListBoxItem(QListBox* x1, QListBoxItem* x2) : QListBoxItem(x1, x2) {
    }
    void x_3(xargs *x) const {
	// text()
	QString xret = this->QListBoxItem::text();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_4(xargs *x) const {
	// pixmap()
	const QPixmap* xret = this->QListBoxItem::pixmap();
	x[0].x_voidp = (void*)xret;
    }
    void x_5(xargs *x) const {
	// height(const QListBox*)
	int xret = this->QListBoxItem::height((const QListBox*)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_6(xargs *x) const {
	// width(const QListBox*)
	int xret = this->QListBoxItem::width((const QListBox*)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_7(xargs *x) const {
	// isSelected()
	bool xret = this->QListBoxItem::isSelected();
	x[0].x_bool = (bool)xret;
    }
    void x_8(xargs *x) const {
	// isCurrent()
	bool xret = this->QListBoxItem::isCurrent();
	x[0].x_bool = (bool)xret;
    }
    void x_9(xargs *x) const {
	// selected()
	bool xret = this->QListBoxItem::selected();
	x[0].x_bool = (bool)xret;
    }
    void x_10(xargs *x) const {
	// current()
	bool xret = this->QListBoxItem::current();
	x[0].x_bool = (bool)xret;
    }
    void x_11(xargs *x) const {
	// listBox()
	QListBox* xret = this->QListBoxItem::listBox();
	x[0].x_voidp = (void*)xret;
    }
    void x_12(xargs *x) {
	// setSelectable(bool)
	this->QListBoxItem::setSelectable((bool)x[1].x_bool);
    }
    void x_13(xargs *x) const {
	// isSelectable()
	bool xret = this->QListBoxItem::isSelectable();
	x[0].x_bool = (bool)xret;
    }
    void x_14(xargs *x) const {
	// next()
	QListBoxItem* xret = this->QListBoxItem::next();
	x[0].x_voidp = (void*)xret;
    }
    void x_15(xargs *x) const {
	// prev()
	QListBoxItem* xret = this->QListBoxItem::prev();
	x[0].x_voidp = (void*)xret;
    }
    void x_16(xargs *x) const {
	// rtti()
	int xret = this->QListBoxItem::rtti();
	x[0].x_int = (int)xret;
    }
    void x_17(xargs *x) {
	// paint(QPainter*)
	this->QListBoxItem::paint((QPainter*)x[1].x_voidp);
    }
    void x_18(xargs *x) {
	// setText(const QString&)
	this->QListBoxItem::setText(*(const QString *)x[1].x_voidp);
    }
    void x_19(xargs *x) {
	// setCustomHighlighting(bool)
	this->QListBoxItem::setCustomHighlighting((bool)x[1].x_bool);
    }
    virtual int height(const QListBox* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 4413, x)) return (int)x[0].x_int;
	return this->QListBoxItem::height(x1);
    }
    virtual void paint(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	call_method_abstract((void*)this, 4425, x);
	return;
	// ABSTRACT
    }
    virtual const QPixmap* pixmap() const {
	xargs x[1];
	if(call_method((void*)this, 4412, x)) 	return (const QPixmap*)x[0].x_voidp;
	return this->QListBoxItem::pixmap();
    }
    virtual int rtti() const {
	xargs x[1];
	if(call_method((void*)this, 4424, x)) return (int)x[0].x_int;
	return this->QListBoxItem::rtti();
    }
    virtual void setText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 4426, x)) return;
	this->QListBoxItem::setText(x1);
    }
    virtual QString text() const {
	xargs x[1];
	if(call_method((void*)this, 4411, x)) {
	    QString *xptr = (QString *)x[0].x_voidp;
	    QString xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QListBoxItem::text();
    }
    virtual int width(const QListBox* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 4414, x)) return (int)x[0].x_int;
	return this->QListBoxItem::width(x1);
    }
    ~x_QListBoxItem() {}
};
void xcall_QListBoxItem(xargs *x, void *s, int xi) {
    x_QListBoxItem *xself = (x_QListBoxItem*)s;
    switch(xi) {
	case 0: x_QListBoxItem::x_0(x);	break;
	case 1: x_QListBoxItem::x_1(x);	break;
	case 2: x_QListBoxItem::x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: delete (QListBoxItem*)xself;	break;
    }
}
