//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qvariant.h>
#include <qsizepolicy.h>
#include <qlayout.h>
#include <qstring.h>
#include <qnamespace.h>
#include <qdockarea.h>
#include <qrect.h>
#include <qsize.h>

class x_QDockAreaLayout : public QDockAreaLayout {
public:
    void x_0(Smoke::Stack x) const {
	// metaObject()
	QMetaObject* xret = this->QDockAreaLayout::metaObject();
	x[0].s_class = (void*)xret;
    }
    void x_1(Smoke::Stack x) const {
	// className()
	const char* xret = this->QDockAreaLayout::className();
	x[0].s_voidp = (void*)xret;
    }
    void x_2(Smoke::Stack x) {
	// qt_cast(const char*)
	void* xret = this->QDockAreaLayout::qt_cast((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_3(Smoke::Stack x) {
	// qt_invoke(int, QUObject*)
	bool xret = this->QDockAreaLayout::qt_invoke((int)x[1].s_int,(QUObject*)x[2].s_voidp);
	x[0].s_bool = xret;
    }
    void x_4(Smoke::Stack x) {
	// qt_emit(int, QUObject*)
	bool xret = this->QDockAreaLayout::qt_emit((int)x[1].s_int,(QUObject*)x[2].s_voidp);
	x[0].s_bool = xret;
    }
    void x_5(Smoke::Stack x) {
	// qt_property(int, int, QVariant*)
	bool xret = this->QDockAreaLayout::qt_property((int)x[1].s_int,(int)x[2].s_int,(QVariant*)x[3].s_class);
	x[0].s_bool = xret;
    }
    void x_6(Smoke::Stack x) {
	// qObject()
	QObject* xret = this->QDockAreaLayout::qObject();
	x[0].s_class = (void*)xret;
    }
    static void x_7(Smoke::Stack x) {
	// QDockAreaLayout(QWidget*, Qt::Orientation, QPtrList<QDockWindow>*, int, int, const char*)
	x_QDockAreaLayout* xret = new x_QDockAreaLayout((QWidget*)x[1].s_class,(Qt::Orientation)x[2].s_enum,(QPtrList<QDockWindow>*)x[3].s_voidp,(int)x[4].s_int,(int)x[5].s_int,(const char*)x[6].s_voidp);
	x[0].s_class = (void*)xret;
    }
    x_QDockAreaLayout(QWidget* x1, Qt::Orientation x2, QPtrList<QDockWindow>* x3, int x4, int x5, const char* x6) : QDockAreaLayout(x1, x2, x3, x4, x5, x6) {
    }
    static void x_8(Smoke::Stack x) {
	// QDockAreaLayout(QWidget*, Qt::Orientation, QPtrList<QDockWindow>*, int, int)
	x_QDockAreaLayout* xret = new x_QDockAreaLayout((QWidget*)x[1].s_class,(Qt::Orientation)x[2].s_enum,(QPtrList<QDockWindow>*)x[3].s_voidp,(int)x[4].s_int,(int)x[5].s_int);
	x[0].s_class = (void*)xret;
    }
    x_QDockAreaLayout(QWidget* x1, Qt::Orientation x2, QPtrList<QDockWindow>* x3, int x4, int x5) : QDockAreaLayout(x1, x2, x3, x4, x5) {
    }
    static void x_9(Smoke::Stack x) {
	// QDockAreaLayout(QWidget*, Qt::Orientation, QPtrList<QDockWindow>*, int)
	x_QDockAreaLayout* xret = new x_QDockAreaLayout((QWidget*)x[1].s_class,(Qt::Orientation)x[2].s_enum,(QPtrList<QDockWindow>*)x[3].s_voidp,(int)x[4].s_int);
	x[0].s_class = (void*)xret;
    }
    x_QDockAreaLayout(QWidget* x1, Qt::Orientation x2, QPtrList<QDockWindow>* x3, int x4) : QDockAreaLayout(x1, x2, x3, x4) {
    }
    static void x_10(Smoke::Stack x) {
	// QDockAreaLayout(QWidget*, Qt::Orientation, QPtrList<QDockWindow>*)
	x_QDockAreaLayout* xret = new x_QDockAreaLayout((QWidget*)x[1].s_class,(Qt::Orientation)x[2].s_enum,(QPtrList<QDockWindow>*)x[3].s_voidp);
	x[0].s_class = (void*)xret;
    }
    x_QDockAreaLayout(QWidget* x1, Qt::Orientation x2, QPtrList<QDockWindow>* x3) : QDockAreaLayout(x1, x2, x3) {
    }
    void x_11(Smoke::Stack x) {
	// addItem(QLayoutItem*)
	this->QDockAreaLayout::addItem((QLayoutItem*)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    void x_12(Smoke::Stack x) const {
	// hasHeightForWidth()
	bool xret = this->QDockAreaLayout::hasHeightForWidth();
	x[0].s_bool = xret;
    }
    void x_13(Smoke::Stack x) const {
	// heightForWidth(int)
	int xret = this->QDockAreaLayout::heightForWidth((int)x[1].s_int);
	x[0].s_int = xret;
    }
    void x_14(Smoke::Stack x) const {
	// widthForHeight(int)
	int xret = this->QDockAreaLayout::widthForHeight((int)x[1].s_int);
	x[0].s_int = xret;
    }
    void x_15(Smoke::Stack x) const {
	// sizeHint()
	QSize xret = this->QDockAreaLayout::sizeHint();
	x[0].s_class = (void*)new QSize(xret);
    }
    void x_16(Smoke::Stack x) const {
	// minimumSize()
	QSize xret = this->QDockAreaLayout::minimumSize();
	x[0].s_class = (void*)new QSize(xret);
    }
    void x_17(Smoke::Stack x) {
	// iterator()
	QLayoutIterator xret = this->QDockAreaLayout::iterator();
	x[0].s_class = (void*)new QLayoutIterator(xret);
    }
    void x_18(Smoke::Stack x) const {
	// expanding()
	QSizePolicy::ExpandData xret = this->QDockAreaLayout::expanding();
	x[0].s_enum = xret;
    }
    void x_19(Smoke::Stack x) {
	// invalidate()
	this->QDockAreaLayout::invalidate();
	(void)x; // noop (for compiler warning)
    }
    void x_20(Smoke::Stack x) const {
	// orientation()
	Qt::Orientation xret = this->QDockAreaLayout::orientation();
	x[0].s_enum = xret;
    }
    void x_21(Smoke::Stack x) const {
	// lineList()
	QValueList<QRect> xret = this->QDockAreaLayout::lineList();
	x[0].s_voidp = (void*)new QValueList<QRect>(xret);
    }
    void x_22(Smoke::Stack x) const {
	// lineStarts()
	QPtrList<QDockWindow> xret = this->QDockAreaLayout::lineStarts();
	x[0].s_voidp = (void*)new QPtrList<QDockWindow>(xret);
    }
    static void x_23(Smoke::Stack x) {
	// staticMetaObject()
	QMetaObject* xret = QDockAreaLayout::staticMetaObject();
	x[0].s_class = (void*)xret;
    }
    static void x_24(Smoke::Stack x) {
	// tr(const char*, const char*)
	QString xret = QDockAreaLayout::tr((const char*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_25(Smoke::Stack x) {
	// tr(const char*)
	QString xret = QDockAreaLayout::tr((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_26(Smoke::Stack x) {
	// trUtf8(const char*, const char*)
	QString xret = QDockAreaLayout::trUtf8((const char*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_27(Smoke::Stack x) {
	// trUtf8(const char*)
	QString xret = QDockAreaLayout::trUtf8((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QString(xret);
    }
    void x_28(Smoke::Stack x) {
	// setGeometry(const QRect&)
	this->QDockAreaLayout::setGeometry(*(const QRect *)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    virtual void addItem(QLayoutItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(2348, (void*)this, x)) return;
	this->QDockAreaLayout::addItem(x1);
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_class = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(qt_Smoke->binding->callMethod(6521, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(4971, (void*)this, x)) return;
	this->QLayout::childEvent(x1);
    }
    virtual const char* className() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2337, (void*)this, x)) return (const char*)x[0].s_class;
	return this->QDockAreaLayout::className();
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6519, (void*)this, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6518, (void*)this, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6520, (void*)this, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6455, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)x2;
	if(qt_Smoke->binding->callMethod(4970, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QLayout::eventFilter(x1, x2);
    }
    virtual QSizePolicy::ExpandData expanding() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2355, (void*)this, x)) {
	    QSizePolicy::ExpandData *xptr = (QSizePolicy::ExpandData *)x[0].s_class;
	    QSizePolicy::ExpandData xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockAreaLayout::expanding();
    }
    virtual QRect geometry() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4947, (void*)this, x)) {
	    QRect *xptr = (QRect *)x[0].s_class;
	    QRect xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QLayout::geometry();
    }
    virtual bool hasHeightForWidth() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2349, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QDockAreaLayout::hasHeightForWidth();
    }
    virtual int heightForWidth(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	if(qt_Smoke->binding->callMethod(2350, (void*)this, x)) return (int)x[0].s_int;
	return this->QDockAreaLayout::heightForWidth(x1);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6478, (void*)this, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void invalidate() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2356, (void*)this, x)) return;
	this->QDockAreaLayout::invalidate();
    }
    virtual bool isEmpty() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4956, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QLayout::isEmpty();
    }
    virtual QLayoutIterator iterator() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2354, (void*)this, x)) {
	    QLayoutIterator *xptr = (QLayoutIterator *)x[0].s_class;
	    QLayoutIterator xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockAreaLayout::iterator();
    }
    virtual QLayout* layout() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4961, (void*)this, x)) return (QLayout*)x[0].s_class;
	return this->QLayout::layout();
    }
    virtual QSize maximumSize() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4953, (void*)this, x)) {
	    QSize *xptr = (QSize *)x[0].s_class;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QLayout::maximumSize();
    }
    virtual QMetaObject* metaObject() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2336, (void*)this, x)) return (QMetaObject*)x[0].s_class;
	return this->QDockAreaLayout::metaObject();
    }
    virtual QSize minimumSize() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2353, (void*)this, x)) {
	    QSize *xptr = (QSize *)x[0].s_class;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockAreaLayout::minimumSize();
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6492, (void*)this, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_class;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void* qt_cast(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(2338, (void*)this, x)) return (void*)x[0].s_voidp;
	return this->QDockAreaLayout::qt_cast(x1);
    }
    virtual bool qt_emit(int x1, QUObject* x2) {
	Smoke::StackItem x[3];
	x[1].s_int = x1;
	x[2].s_voidp = (void*)x2;
	if(qt_Smoke->binding->callMethod(2340, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QDockAreaLayout::qt_emit(x1, x2);
    }
    virtual bool qt_invoke(int x1, QUObject* x2) {
	Smoke::StackItem x[3];
	x[1].s_int = x1;
	x[2].s_voidp = (void*)x2;
	if(qt_Smoke->binding->callMethod(2339, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QDockAreaLayout::qt_invoke(x1, x2);
    }
    virtual bool qt_property(int x1, int x2, QVariant* x3) {
	Smoke::StackItem x[4];
	x[1].s_int = x1;
	x[2].s_int = x2;
	x[3].s_class = (void*)x3;
	if(qt_Smoke->binding->callMethod(2341, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QDockAreaLayout::qt_property(x1, x2, x3);
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6479, (void*)this, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setAlignment(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	if(qt_Smoke->binding->callMethod(4994, (void*)this, x)) return;
	this->QLayoutItem::setAlignment(x1);
    }
    virtual void setAutoAdd(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = x1;
	if(qt_Smoke->binding->callMethod(4944, (void*)this, x)) return;
	this->QLayout::setAutoAdd(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->binding->callMethod(2365, (void*)this, x)) return;
	this->QDockAreaLayout::setGeometry(x1);
    }
    virtual void setMargin(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	if(qt_Smoke->binding->callMethod(4933, (void*)this, x)) return;
	this->QLayout::setMargin(x1);
    }
    virtual void setMenuBar(QMenuBar* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(4940, (void*)this, x)) return;
	this->QLayout::setMenuBar(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(qt_Smoke->binding->callMethod(6461, (void*)this, x)) return;
	this->QObject::setName(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_class = (void*)&x2;
	if(qt_Smoke->binding->callMethod(6491, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setSpacing(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	if(qt_Smoke->binding->callMethod(4934, (void*)this, x)) return;
	this->QLayout::setSpacing(x1);
    }
    virtual QSize sizeHint() const {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(2352, (void*)this, x)) {
	    QSize *xptr = (QSize *)x[0].s_class;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockAreaLayout::sizeHint();
    }
    virtual QSpacerItem* spacerItem() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4992, (void*)this, x)) return (QSpacerItem*)x[0].s_class;
	return this->QLayoutItem::spacerItem();
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->binding->callMethod(6516, (void*)this, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual QWidget* widget() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(4989, (void*)this, x)) return (QWidget*)x[0].s_class;
	return this->QLayoutItem::widget();
    }
    ~x_QDockAreaLayout() { qt_Smoke->binding->deleted(78, (void*)this); }
};
void xcall_QDockAreaLayout(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QDockAreaLayout *xself = (x_QDockAreaLayout*)obj;
    switch(xi) {
	case 0: xself->x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: x_QDockAreaLayout::x_7(args);	break;
	case 8: x_QDockAreaLayout::x_8(args);	break;
	case 9: x_QDockAreaLayout::x_9(args);	break;
	case 10: x_QDockAreaLayout::x_10(args);	break;
	case 11: xself->x_11(args);	break;
	case 12: xself->x_12(args);	break;
	case 13: xself->x_13(args);	break;
	case 14: xself->x_14(args);	break;
	case 15: xself->x_15(args);	break;
	case 16: xself->x_16(args);	break;
	case 17: xself->x_17(args);	break;
	case 18: xself->x_18(args);	break;
	case 19: xself->x_19(args);	break;
	case 20: xself->x_20(args);	break;
	case 21: xself->x_21(args);	break;
	case 22: xself->x_22(args);	break;
	case 23: x_QDockAreaLayout::x_23(args);	break;
	case 24: x_QDockAreaLayout::x_24(args);	break;
	case 25: x_QDockAreaLayout::x_25(args);	break;
	case 26: x_QDockAreaLayout::x_26(args);	break;
	case 27: x_QDockAreaLayout::x_27(args);	break;
	case 28: xself->x_28(args);	break;
	case 29: delete (QDockAreaLayout*)xself;	break;
    }
}
