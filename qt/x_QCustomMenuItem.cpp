//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpalette.h>
#include <qfont.h>
#include <qmenudata.h>
#include <qsize.h>

class x_QCustomMenuItem : public QCustomMenuItem {
public:
    static void x_0(xargs *x) {
	// QCustomMenuItem()
	x_QCustomMenuItem* xret = new x_QCustomMenuItem();
	x[0].x_voidp = (void*)xret;
    }
    x_QCustomMenuItem() : QCustomMenuItem() {
    }
    void x_1(xargs *x) const {
	// fullSpan()
	bool xret = this->QCustomMenuItem::fullSpan();
	x[0].x_bool = (bool)xret;
    }
    void x_2(xargs *x) const {
	// isSeparator()
	bool xret = this->QCustomMenuItem::isSeparator();
	x[0].x_bool = (bool)xret;
    }
    void x_3(xargs *x) {
	// setFont(const QFont&)
	this->QCustomMenuItem::setFont(*(const QFont *)x[1].x_voidp);
    }
    void x_4(xargs *x) {
	// paint(QPainter*, const QColorGroup&, bool, bool, int, int, int, int)
	this->QCustomMenuItem::paint((QPainter*)x[1].x_voidp,*(const QColorGroup *)x[2].x_voidp,(bool)x[3].x_bool,(bool)x[4].x_bool,(int)x[5].x_int,(int)x[6].x_int,(int)x[7].x_int,(int)x[8].x_int);
    }
    void x_5(xargs *x) {
	// sizeHint()
	QSize xret = this->QCustomMenuItem::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    virtual bool fullSpan() const {
	xargs x[1];
	if(call_method((void*)this, 1239, x)) return (bool)x[0].x_bool;
	return this->QCustomMenuItem::fullSpan();
    }
    virtual bool isSeparator() const {
	xargs x[1];
	if(call_method((void*)this, 1240, x)) return (bool)x[0].x_bool;
	return this->QCustomMenuItem::isSeparator();
    }
    virtual void paint(QPainter* x1, const QColorGroup& x2, bool x3, bool x4, int x5, int x6, int x7, int x8) {
	xargs x[9];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_bool = (bool)x3;
	x[4].x_bool = (bool)x4;
	x[5].x_int = (int)x5;
	x[6].x_int = (int)x6;
	x[7].x_int = (int)x7;
	x[8].x_int = (int)x8;
	call_method_abstract((void*)this, 1242, x);
	return;
	// ABSTRACT
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 1241, x)) return;
	this->QCustomMenuItem::setFont(x1);
    }
    virtual QSize sizeHint() {
	xargs x[1];
	call_method_abstract((void*)this, 1243, x);
	QSize *xptr = (QSize *)x[0].x_voidp;
	QSize xret(*xptr);
	delete xptr;
	return xret;
	// ABSTRACT
    }
    ~x_QCustomMenuItem() {}
};
void xcall_QCustomMenuItem(xargs *x, void *s, int xi) {
    x_QCustomMenuItem *xself = (x_QCustomMenuItem*)s;
    switch(xi) {
	case 0: x_QCustomMenuItem::x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: delete (QCustomMenuItem*)xself;	break;
    }
}
