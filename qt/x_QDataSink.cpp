//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qasyncio.h>

class x_QDataSink {
private:
    QDataSink *xthis;
public:
    x_QDataSink(void *x) : xthis((QDataSink*)x) {}
    void x_0(xargs *x) {
	// readyToReceive()
	int xret = xthis->QDataSink::readyToReceive();
	x[0].x_int = (int)xret;
    }
    void x_1(xargs *x) {
	// receive(const uchar*, int)
	xthis->QDataSink::receive((const uchar*)x[1].x_voidp,(int)x[2].x_int);
    }
    void x_2(xargs *x) {
	// eof()
	xthis->QDataSink::eof();
    }
    void x_3(xargs *x) {
	// maybeReady()
	xthis->QDataSink::maybeReady();
    }
    ~x_QDataSink() {}
};
void xcall_QDataSink(xargs *x, void *s, int xi) {
    x_QDataSink xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: xself->x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
    }
}
