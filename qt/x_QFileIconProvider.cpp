//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qvariant.h>
#include <qfileinfo.h>
#include <qfiledialog.h>

class x_QFileIconProvider : public QFileIconProvider {
public:
    static void x_0(Smoke::Stack x) {
	// QFileIconProvider(QObject*, const char*)
	x_QFileIconProvider* xret = new x_QFileIconProvider((QObject*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QFileIconProvider(QObject* x1, const char* x2) : QFileIconProvider(x1, x2) {
    }
    static void x_1(Smoke::Stack x) {
	// QFileIconProvider(QObject*)
	x_QFileIconProvider* xret = new x_QFileIconProvider((QObject*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QFileIconProvider(QObject* x1) : QFileIconProvider(x1) {
    }
    static void x_2(Smoke::Stack x) {
	// QFileIconProvider()
	x_QFileIconProvider* xret = new x_QFileIconProvider();
	x[0].s_voidp = (void*)xret;
    }
    x_QFileIconProvider() : QFileIconProvider() {
    }
    void x_3(Smoke::Stack x) {
	// pixmap(const QFileInfo&)
	const QPixmap* xret = this->QFileIconProvider::pixmap(*(const QFileInfo *)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(call_method((void*)this, 5473, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5469, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5408, x)) return (bool)x[0].s_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	if(call_method((void*)this, 5409, x)) return (bool)x[0].s_bool;
	return this->QObject::eventFilter(x1, x2);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5431, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual const QPixmap* pixmap(const QFileInfo& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 2581, x)) 	return (const QPixmap*)x[0].s_voidp;
	return this->QFileIconProvider::pixmap(x1);
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5445, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5432, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5414, x)) return;
	this->QObject::setName(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 5444, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5468, x)) return;
	this->QObject::timerEvent(x1);
    }
    ~x_QFileIconProvider() {}
};
void xcall_QFileIconProvider(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QFileIconProvider *xself = (x_QFileIconProvider*)obj;
    switch(xi) {
	case 0: x_QFileIconProvider::x_0(args);	break;
	case 1: x_QFileIconProvider::x_1(args);	break;
	case 2: x_QFileIconProvider::x_2(args);	break;
	case 3: xself->x_3(args);	break;
    }
}
