//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qimage.h>

class x_QImageTextKeyLang : public QImageTextKeyLang {
public:
    static void x_0(xargs *x) {
	// QImageTextKeyLang(const char*, const char*)
	x_QImageTextKeyLang* xret = new x_QImageTextKeyLang((const char*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QImageTextKeyLang(const char* x1, const char* x2) : QImageTextKeyLang(x1, x2) {
    }
    static void x_1(xargs *x) {
	// QImageTextKeyLang()
	x_QImageTextKeyLang* xret = new x_QImageTextKeyLang();
	x[0].x_voidp = (void*)xret;
    }
    x_QImageTextKeyLang() : QImageTextKeyLang() {
    }
    void x_2(xargs *x) const {
	// operator<(const QImageTextKeyLang&)
	bool xret = this->QImageTextKeyLang::operator<(*(const QImageTextKeyLang *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_3(xargs *x) const {
	// operator==(const QImageTextKeyLang&)
	bool xret = this->QImageTextKeyLang::operator==(*(const QImageTextKeyLang *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    ~x_QImageTextKeyLang() {}
};
void xcall_QImageTextKeyLang(xargs *x, void *s, int xi) {
    x_QImageTextKeyLang *xself = (x_QImageTextKeyLang*)s;
    switch(xi) {
	case 0: x_QImageTextKeyLang::x_0(x);	break;
	case 1: x_QImageTextKeyLang::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
    }
}
