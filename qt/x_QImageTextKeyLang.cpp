//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qimage.h>

class x_QImageTextKeyLang : public QImageTextKeyLang {
public:
    static void x_0(Smoke::Stack x) {
	// QImageTextKeyLang(const char*, const char*)
	x_QImageTextKeyLang* xret = new x_QImageTextKeyLang((const char*)x[1].s_class,(const char*)x[2].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageTextKeyLang(const char* x1, const char* x2) : QImageTextKeyLang(x1, x2) {
    }
    static void x_1(Smoke::Stack x) {
	// QImageTextKeyLang()
	x_QImageTextKeyLang* xret = new x_QImageTextKeyLang();
	x[0].s_class = (void*)xret;
    }
    x_QImageTextKeyLang() : QImageTextKeyLang() {
    }
    void x_2(Smoke::Stack x) const {
	// operator<(const QImageTextKeyLang&)
	bool xret = this->QImageTextKeyLang::operator<(*(const QImageTextKeyLang *)x[1].s_class);
	x[0].s_bool = (bool)xret;
    }
    void x_3(Smoke::Stack x) const {
	// operator==(const QImageTextKeyLang&)
	bool xret = this->QImageTextKeyLang::operator==(*(const QImageTextKeyLang *)x[1].s_class);
	x[0].s_bool = (bool)xret;
    }
    ~x_QImageTextKeyLang() {}
};
void xcall_QImageTextKeyLang(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QImageTextKeyLang *xself = (x_QImageTextKeyLang*)obj;
    switch(xi) {
	case 0: x_QImageTextKeyLang::x_0(args);	break;
	case 1: x_QImageTextKeyLang::x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: delete (QImageTextKeyLang*)xself;	break;
    }
}
