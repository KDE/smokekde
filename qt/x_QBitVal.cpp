//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qbitarray.h>

class x_QBitVal : public QBitVal {
public:
    static void x_0(xargs *x) {
	// QBitVal(QBitArray*, uint)
	x_QBitVal* xret = new x_QBitVal((QBitArray*)x[1].x_voidp,(uint)x[2].x_uint);
	x[0].x_voidp = (void*)xret;
    }
    x_QBitVal(QBitArray* x1, uint x2) : QBitVal(x1, x2) {
    }
    void x_1(xargs *x) {
	// operator=(const QBitVal&)
	QBitVal& xret = this->QBitVal::operator=(*(const QBitVal *)x[1].x_voidp);
	x[0].x_voidp = (void*)&xret;
    }
    void x_2(xargs *x) {
	// operator=(bool)
	QBitVal& xret = this->QBitVal::operator=((bool)x[1].x_bool);
	x[0].x_voidp = (void*)&xret;
    }
    ~x_QBitVal() {}
};
void xcall_QBitVal(xargs *x, void *s, int xi) {
    x_QBitVal *xself = (x_QBitVal*)s;
    switch(xi) {
	case 0: x_QBitVal::x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
    }
}
