//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qiconset.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qscrollview.h>
#include <qpoint.h>
#include <qfont.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qlistview.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qwidget.h>
#include <qrect.h>
#include <qpixmap.h>
#include <qstyle.h>
#include <qscrollbar.h>

class x_QListView : public QListView {
public:
    static void x_0(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Manual;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Maximum;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Single;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Multi;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Extended;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_long = (long)QListView::NoSelection;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_long = (long)QListView::NoColumn;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_long = (long)QListView::AllColumns;
    }
    static void x_8(Smoke::Stack x) {
	x[0].s_long = (long)QListView::LastColumn;
    }
    static void x_9(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Accept;
    }
    static void x_10(Smoke::Stack x) {
	x[0].s_long = (long)QListView::Reject;
    }
    static void x_11(Smoke::Stack x) {
	// QListView(QWidget*, const char*, Qt::WFlags)
	x_QListView* xret = new x_QListView((QWidget*)x[1].s_voidp,(const char*)x[2].s_voidp,*(Qt::WFlags *)x[3].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListView(QWidget* x1, const char* x2, Qt::WFlags x3) : QListView(x1, x2, x3) {
    }
    static void x_12(Smoke::Stack x) {
	// QListView(QWidget*, const char*)
	x_QListView* xret = new x_QListView((QWidget*)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListView(QWidget* x1, const char* x2) : QListView(x1, x2) {
    }
    static void x_13(Smoke::Stack x) {
	// QListView(QWidget*)
	x_QListView* xret = new x_QListView((QWidget*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QListView(QWidget* x1) : QListView(x1) {
    }
    static void x_14(Smoke::Stack x) {
	// QListView()
	x_QListView* xret = new x_QListView();
	x[0].s_voidp = (void*)xret;
    }
    x_QListView() : QListView() {
    }
    void x_15(Smoke::Stack x) const {
	// treeStepSize()
	int xret = this->QListView::treeStepSize();
	x[0].s_int = (int)xret;
    }
    void x_16(Smoke::Stack x) {
	// setTreeStepSize(int)
	this->QListView::setTreeStepSize((int)x[1].s_int);
    }
    void x_17(Smoke::Stack x) {
	// insertItem(QListViewItem*)
	this->QListView::insertItem((QListViewItem*)x[1].s_voidp);
    }
    void x_18(Smoke::Stack x) {
	// takeItem(QListViewItem*)
	this->QListView::takeItem((QListViewItem*)x[1].s_voidp);
    }
    void x_19(Smoke::Stack x) {
	// removeItem(QListViewItem*)
	this->QListView::removeItem((QListViewItem*)x[1].s_voidp);
    }
    void x_20(Smoke::Stack x) const {
	// header()
	QHeader* xret = this->QListView::header();
	x[0].s_voidp = (void*)xret;
    }
    void x_21(Smoke::Stack x) {
	// addColumn(const QString&, int)
	int xret = this->QListView::addColumn(*(const QString *)x[1].s_voidp,(int)x[2].s_int);
	x[0].s_int = (int)xret;
    }
    void x_22(Smoke::Stack x) {
	// addColumn(const QString&)
	int xret = this->QListView::addColumn(*(const QString *)x[1].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_23(Smoke::Stack x) {
	// addColumn(const QIconSet&, const QString&, int)
	int xret = this->QListView::addColumn(*(const QIconSet *)x[1].s_voidp,*(const QString *)x[2].s_voidp,(int)x[3].s_int);
	x[0].s_int = (int)xret;
    }
    void x_24(Smoke::Stack x) {
	// addColumn(const QIconSet&, const QString&)
	int xret = this->QListView::addColumn(*(const QIconSet *)x[1].s_voidp,*(const QString *)x[2].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_25(Smoke::Stack x) {
	// removeColumn(int)
	this->QListView::removeColumn((int)x[1].s_int);
    }
    void x_26(Smoke::Stack x) {
	// setColumnText(int, const QString&)
	this->QListView::setColumnText((int)x[1].s_int,*(const QString *)x[2].s_voidp);
    }
    void x_27(Smoke::Stack x) {
	// setColumnText(int, const QIconSet&, const QString&)
	this->QListView::setColumnText((int)x[1].s_int,*(const QIconSet *)x[2].s_voidp,*(const QString *)x[3].s_voidp);
    }
    void x_28(Smoke::Stack x) const {
	// columnText(int)
	QString xret = this->QListView::columnText((int)x[1].s_int);
	x[0].s_voidp = (void*)new QString(xret);
    }
    void x_29(Smoke::Stack x) {
	// setColumnWidth(int, int)
	this->QListView::setColumnWidth((int)x[1].s_int,(int)x[2].s_int);
    }
    void x_30(Smoke::Stack x) const {
	// columnWidth(int)
	int xret = this->QListView::columnWidth((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_31(Smoke::Stack x) {
	// setColumnWidthMode(int, QListView::WidthMode)
	this->QListView::setColumnWidthMode((int)x[1].s_int,*(QListView::WidthMode *)x[2].s_voidp);
    }
    void x_32(Smoke::Stack x) const {
	// columnWidthMode(int)
	QListView::WidthMode xret = this->QListView::columnWidthMode((int)x[1].s_int);
	x[0].s_voidp = (void*)new QListView::WidthMode(xret);
    }
    void x_33(Smoke::Stack x) const {
	// columns()
	int xret = this->QListView::columns();
	x[0].s_int = (int)xret;
    }
    void x_34(Smoke::Stack x) {
	// setColumnAlignment(int, int)
	this->QListView::setColumnAlignment((int)x[1].s_int,(int)x[2].s_int);
    }
    void x_35(Smoke::Stack x) const {
	// columnAlignment(int)
	int xret = this->QListView::columnAlignment((int)x[1].s_int);
	x[0].s_int = (int)xret;
    }
    void x_36(Smoke::Stack x) {
	// show()
	this->QListView::show();
    }
    void x_37(Smoke::Stack x) const {
	// itemAt(const QPoint&)
	QListViewItem* xret = this->QListView::itemAt(*(const QPoint *)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_38(Smoke::Stack x) const {
	// itemRect(const QListViewItem*)
	QRect xret = this->QListView::itemRect((const QListViewItem*)x[1].s_voidp);
	x[0].s_voidp = (void*)new QRect(xret);
    }
    void x_39(Smoke::Stack x) {
	// itemPos(const QListViewItem*)
	int xret = this->QListView::itemPos((const QListViewItem*)x[1].s_voidp);
	x[0].s_int = (int)xret;
    }
    void x_40(Smoke::Stack x) {
	// ensureItemVisible(const QListViewItem*)
	this->QListView::ensureItemVisible((const QListViewItem*)x[1].s_voidp);
    }
    void x_41(Smoke::Stack x) const {
	// repaintItem(const QListViewItem*)
	this->QListView::repaintItem((const QListViewItem*)x[1].s_voidp);
    }
    void x_42(Smoke::Stack x) {
	// setMultiSelection(bool)
	this->QListView::setMultiSelection((bool)x[1].s_bool);
    }
    void x_43(Smoke::Stack x) const {
	// isMultiSelection()
	bool xret = this->QListView::isMultiSelection();
	x[0].s_bool = (bool)xret;
    }
    void x_44(Smoke::Stack x) {
	// setSelectionMode(QListView::SelectionMode)
	this->QListView::setSelectionMode(*(QListView::SelectionMode *)x[1].s_voidp);
    }
    void x_45(Smoke::Stack x) const {
	// selectionMode()
	QListView::SelectionMode xret = this->QListView::selectionMode();
	x[0].s_voidp = (void*)new QListView::SelectionMode(xret);
    }
    void x_46(Smoke::Stack x) {
	// clearSelection()
	this->QListView::clearSelection();
    }
    void x_47(Smoke::Stack x) {
	// setSelected(QListViewItem*, bool)
	this->QListView::setSelected((QListViewItem*)x[1].s_voidp,(bool)x[2].s_bool);
    }
    void x_48(Smoke::Stack x) const {
	// isSelected(const QListViewItem*)
	bool xret = this->QListView::isSelected((const QListViewItem*)x[1].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_49(Smoke::Stack x) const {
	// selectedItem()
	QListViewItem* xret = this->QListView::selectedItem();
	x[0].s_voidp = (void*)xret;
    }
    void x_50(Smoke::Stack x) {
	// setOpen(QListViewItem*, bool)
	this->QListView::setOpen((QListViewItem*)x[1].s_voidp,(bool)x[2].s_bool);
    }
    void x_51(Smoke::Stack x) const {
	// isOpen(const QListViewItem*)
	bool xret = this->QListView::isOpen((const QListViewItem*)x[1].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_52(Smoke::Stack x) {
	// setCurrentItem(QListViewItem*)
	this->QListView::setCurrentItem((QListViewItem*)x[1].s_voidp);
    }
    void x_53(Smoke::Stack x) const {
	// currentItem()
	QListViewItem* xret = this->QListView::currentItem();
	x[0].s_voidp = (void*)xret;
    }
    void x_54(Smoke::Stack x) const {
	// firstChild()
	QListViewItem* xret = this->QListView::firstChild();
	x[0].s_voidp = (void*)xret;
    }
    void x_55(Smoke::Stack x) const {
	// lastItem()
	QListViewItem* xret = this->QListView::lastItem();
	x[0].s_voidp = (void*)xret;
    }
    void x_56(Smoke::Stack x) const {
	// childCount()
	int xret = this->QListView::childCount();
	x[0].s_int = (int)xret;
    }
    void x_57(Smoke::Stack x) {
	// setAllColumnsShowFocus(bool)
	this->QListView::setAllColumnsShowFocus((bool)x[1].s_bool);
    }
    void x_58(Smoke::Stack x) const {
	// allColumnsShowFocus()
	bool xret = this->QListView::allColumnsShowFocus();
	x[0].s_bool = (bool)xret;
    }
    void x_59(Smoke::Stack x) {
	// setItemMargin(int)
	this->QListView::setItemMargin((int)x[1].s_int);
    }
    void x_60(Smoke::Stack x) const {
	// itemMargin()
	int xret = this->QListView::itemMargin();
	x[0].s_int = (int)xret;
    }
    void x_61(Smoke::Stack x) {
	// setRootIsDecorated(bool)
	this->QListView::setRootIsDecorated((bool)x[1].s_bool);
    }
    void x_62(Smoke::Stack x) const {
	// rootIsDecorated()
	bool xret = this->QListView::rootIsDecorated();
	x[0].s_bool = (bool)xret;
    }
    void x_63(Smoke::Stack x) {
	// setSorting(int, bool)
	this->QListView::setSorting((int)x[1].s_int,(bool)x[2].s_bool);
    }
    void x_64(Smoke::Stack x) {
	// setSorting(int)
	this->QListView::setSorting((int)x[1].s_int);
    }
    void x_65(Smoke::Stack x) {
	// sort()
	this->QListView::sort();
    }
    void x_66(Smoke::Stack x) {
	// setFont(const QFont&)
	this->QListView::setFont(*(const QFont *)x[1].s_voidp);
    }
    void x_67(Smoke::Stack x) {
	// setPalette(const QPalette&)
	this->QListView::setPalette(*(const QPalette *)x[1].s_voidp);
    }
    void x_68(Smoke::Stack x) {
	// eventFilter(QObject*, QEvent*)
	bool xret = this->QListView::eventFilter((QObject*)x[1].s_voidp,(QEvent*)x[2].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    void x_69(Smoke::Stack x) const {
	// sizeHint()
	QSize xret = this->QListView::sizeHint();
	x[0].s_voidp = (void*)new QSize(xret);
    }
    void x_70(Smoke::Stack x) const {
	// minimumSizeHint()
	QSize xret = this->QListView::minimumSizeHint();
	x[0].s_voidp = (void*)new QSize(xret);
    }
    void x_71(Smoke::Stack x) {
	// setShowSortIndicator(bool)
	this->QListView::setShowSortIndicator((bool)x[1].s_bool);
    }
    void x_72(Smoke::Stack x) const {
	// showSortIndicator()
	bool xret = this->QListView::showSortIndicator();
	x[0].s_bool = (bool)xret;
    }
    void x_73(Smoke::Stack x) {
	// setShowToolTips(bool)
	this->QListView::setShowToolTips((bool)x[1].s_bool);
    }
    void x_74(Smoke::Stack x) const {
	// showToolTips()
	bool xret = this->QListView::showToolTips();
	x[0].s_bool = (bool)xret;
    }
    void x_75(Smoke::Stack x) {
	// setResizeMode(QListView::ResizeMode)
	this->QListView::setResizeMode(*(QListView::ResizeMode *)x[1].s_voidp);
    }
    void x_76(Smoke::Stack x) const {
	// resizeMode()
	QListView::ResizeMode xret = this->QListView::resizeMode();
	x[0].s_voidp = (void*)new QListView::ResizeMode(xret);
    }
    void x_77(Smoke::Stack x) const {
	// findItem(const QString&, int, Qt::ComparisonFlags)
	QListViewItem* xret = this->QListView::findItem(*(const QString *)x[1].s_voidp,(int)x[2].s_int,*(Qt::ComparisonFlags *)x[3].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_78(Smoke::Stack x) const {
	// findItem(const QString&, int)
	QListViewItem* xret = this->QListView::findItem(*(const QString *)x[1].s_voidp,(int)x[2].s_int);
	x[0].s_voidp = (void*)xret;
    }
    void x_79(Smoke::Stack x) {
	// setDefaultRenameAction(QListView::RenameAction)
	this->QListView::setDefaultRenameAction(*(QListView::RenameAction *)x[1].s_voidp);
    }
    void x_80(Smoke::Stack x) const {
	// defaultRenameAction()
	QListView::RenameAction xret = this->QListView::defaultRenameAction();
	x[0].s_voidp = (void*)new QListView::RenameAction(xret);
    }
    void x_81(Smoke::Stack x) const {
	// isRenaming()
	bool xret = this->QListView::isRenaming();
	x[0].s_bool = (bool)xret;
    }
    void x_82(Smoke::Stack x) {
	// clear()
	this->QListView::clear();
    }
    void x_83(Smoke::Stack x) {
	// invertSelection()
	this->QListView::invertSelection();
    }
    void x_84(Smoke::Stack x) {
	// selectAll(bool)
	this->QListView::selectAll((bool)x[1].s_bool);
    }
    void x_85(Smoke::Stack x) {
	// triggerUpdate()
	this->QListView::triggerUpdate();
    }
    void x_86(Smoke::Stack x) {
	// setContentsPos(int, int)
	this->QListView::setContentsPos((int)x[1].s_int,(int)x[2].s_int);
    }
    void x_87(Smoke::Stack x) {
	// selectionChanged()
	this->QListView::selectionChanged();
    }
    void x_88(Smoke::Stack x) {
	// selectionChanged(QListViewItem*)
	this->QListView::selectionChanged((QListViewItem*)x[1].s_voidp);
    }
    void x_89(Smoke::Stack x) {
	// currentChanged(QListViewItem*)
	this->QListView::currentChanged((QListViewItem*)x[1].s_voidp);
    }
    void x_90(Smoke::Stack x) {
	// clicked(QListViewItem*)
	this->QListView::clicked((QListViewItem*)x[1].s_voidp);
    }
    void x_91(Smoke::Stack x) {
	// clicked(QListViewItem*, const QPoint&, int)
	this->QListView::clicked((QListViewItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_92(Smoke::Stack x) {
	// pressed(QListViewItem*)
	this->QListView::pressed((QListViewItem*)x[1].s_voidp);
    }
    void x_93(Smoke::Stack x) {
	// pressed(QListViewItem*, const QPoint&, int)
	this->QListView::pressed((QListViewItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_94(Smoke::Stack x) {
	// doubleClicked(QListViewItem*)
	this->QListView::doubleClicked((QListViewItem*)x[1].s_voidp);
    }
    void x_95(Smoke::Stack x) {
	// returnPressed(QListViewItem*)
	this->QListView::returnPressed((QListViewItem*)x[1].s_voidp);
    }
    void x_96(Smoke::Stack x) {
	// spacePressed(QListViewItem*)
	this->QListView::spacePressed((QListViewItem*)x[1].s_voidp);
    }
    void x_97(Smoke::Stack x) {
	// rightButtonClicked(QListViewItem*, const QPoint&, int)
	this->QListView::rightButtonClicked((QListViewItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_98(Smoke::Stack x) {
	// rightButtonPressed(QListViewItem*, const QPoint&, int)
	this->QListView::rightButtonPressed((QListViewItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_99(Smoke::Stack x) {
	// mouseButtonPressed(int, QListViewItem*, const QPoint&, int)
	this->QListView::mouseButtonPressed((int)x[1].s_int,(QListViewItem*)x[2].s_voidp,*(const QPoint *)x[3].s_voidp,(int)x[4].s_int);
    }
    void x_100(Smoke::Stack x) {
	// mouseButtonClicked(int, QListViewItem*, const QPoint&, int)
	this->QListView::mouseButtonClicked((int)x[1].s_int,(QListViewItem*)x[2].s_voidp,*(const QPoint *)x[3].s_voidp,(int)x[4].s_int);
    }
    void x_101(Smoke::Stack x) {
	// contextMenuRequested(QListViewItem*, const QPoint&, int)
	this->QListView::contextMenuRequested((QListViewItem*)x[1].s_voidp,*(const QPoint *)x[2].s_voidp,(int)x[3].s_int);
    }
    void x_102(Smoke::Stack x) {
	// onItem(QListViewItem*)
	this->QListView::onItem((QListViewItem*)x[1].s_voidp);
    }
    void x_103(Smoke::Stack x) {
	// onViewport()
	this->QListView::onViewport();
    }
    void x_104(Smoke::Stack x) {
	// expanded(QListViewItem*)
	this->QListView::expanded((QListViewItem*)x[1].s_voidp);
    }
    void x_105(Smoke::Stack x) {
	// collapsed(QListViewItem*)
	this->QListView::collapsed((QListViewItem*)x[1].s_voidp);
    }
    void x_106(Smoke::Stack x) {
	// dropped(QDropEvent*)
	this->QListView::dropped((QDropEvent*)x[1].s_voidp);
    }
    void x_107(Smoke::Stack x) {
	// itemRenamed(QListViewItem*, int, const QString&)
	this->QListView::itemRenamed((QListViewItem*)x[1].s_voidp,(int)x[2].s_int,*(const QString *)x[3].s_voidp);
    }
    void x_108(Smoke::Stack x) {
	// itemRenamed(QListViewItem*, int)
	this->QListView::itemRenamed((QListViewItem*)x[1].s_voidp,(int)x[2].s_int);
    }
    void x_109(Smoke::Stack x) {
	// contentsMousePressEvent(QMouseEvent*)
	this->QListView::contentsMousePressEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_110(Smoke::Stack x) {
	// contentsMouseReleaseEvent(QMouseEvent*)
	this->QListView::contentsMouseReleaseEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_111(Smoke::Stack x) {
	// contentsMouseMoveEvent(QMouseEvent*)
	this->QListView::contentsMouseMoveEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_112(Smoke::Stack x) {
	// contentsMouseDoubleClickEvent(QMouseEvent*)
	this->QListView::contentsMouseDoubleClickEvent((QMouseEvent*)x[1].s_voidp);
    }
    void x_113(Smoke::Stack x) {
	// contentsContextMenuEvent(QContextMenuEvent*)
	this->QListView::contentsContextMenuEvent((QContextMenuEvent*)x[1].s_voidp);
    }
    void x_114(Smoke::Stack x) {
	// contentsDragEnterEvent(QDragEnterEvent*)
	this->QListView::contentsDragEnterEvent((QDragEnterEvent*)x[1].s_voidp);
    }
    void x_115(Smoke::Stack x) {
	// contentsDragMoveEvent(QDragMoveEvent*)
	this->QListView::contentsDragMoveEvent((QDragMoveEvent*)x[1].s_voidp);
    }
    void x_116(Smoke::Stack x) {
	// contentsDragLeaveEvent(QDragLeaveEvent*)
	this->QListView::contentsDragLeaveEvent((QDragLeaveEvent*)x[1].s_voidp);
    }
    void x_117(Smoke::Stack x) {
	// contentsDropEvent(QDropEvent*)
	this->QListView::contentsDropEvent((QDropEvent*)x[1].s_voidp);
    }
    void x_118(Smoke::Stack x) {
	// dragObject()
	QDragObject* xret = this->QListView::dragObject();
	x[0].s_voidp = (void*)xret;
    }
    void x_119(Smoke::Stack x) {
	// startDrag()
	this->QListView::startDrag();
    }
    void x_120(Smoke::Stack x) {
	// focusInEvent(QFocusEvent*)
	this->QListView::focusInEvent((QFocusEvent*)x[1].s_voidp);
    }
    void x_121(Smoke::Stack x) {
	// focusOutEvent(QFocusEvent*)
	this->QListView::focusOutEvent((QFocusEvent*)x[1].s_voidp);
    }
    void x_122(Smoke::Stack x) {
	// keyPressEvent(QKeyEvent*)
	this->QListView::keyPressEvent((QKeyEvent*)x[1].s_voidp);
    }
    void x_123(Smoke::Stack x) {
	// resizeEvent(QResizeEvent*)
	this->QListView::resizeEvent((QResizeEvent*)x[1].s_voidp);
    }
    void x_124(Smoke::Stack x) {
	// viewportResizeEvent(QResizeEvent*)
	this->QListView::viewportResizeEvent((QResizeEvent*)x[1].s_voidp);
    }
    void x_125(Smoke::Stack x) {
	// showEvent(QShowEvent*)
	this->QListView::showEvent((QShowEvent*)x[1].s_voidp);
    }
    void x_126(Smoke::Stack x) {
	// drawContentsOffset(QPainter*, int, int, int, int, int, int)
	this->QListView::drawContentsOffset((QPainter*)x[1].s_voidp,(int)x[2].s_int,(int)x[3].s_int,(int)x[4].s_int,(int)x[5].s_int,(int)x[6].s_int,(int)x[7].s_int);
    }
    void x_127(Smoke::Stack x) {
	// paintEmptyArea(QPainter*, const QRect&)
	this->QListView::paintEmptyArea((QPainter*)x[1].s_voidp,*(const QRect *)x[2].s_voidp);
    }
    void x_128(Smoke::Stack x) {
	// styleChange(QStyle&)
	this->QListView::styleChange(*(QStyle *)x[1].s_voidp);
    }
    void x_129(Smoke::Stack x) {
	// windowActivationChange(bool)
	this->QListView::windowActivationChange((bool)x[1].s_bool);
    }
    void x_130(Smoke::Stack x) {
	// updateContents()
	this->QListView::updateContents();
    }
    void x_131(Smoke::Stack x) {
	// doAutoScroll()
	this->QListView::doAutoScroll();
    }
    virtual void addChild(QWidget* x1, int x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 6584, x)) return;
	this->QScrollView::addChild(x1, x2, x3);
    }
    virtual int addColumn(const QIconSet& x1, const QString& x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)&x1;
	x[2].s_voidp = (void*)&x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 4468, x)) return (int)x[0].s_int;
	return this->QListView::addColumn(x1, x2, x3);
    }
    virtual int addColumn(const QString& x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)&x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 4466, x)) return (int)x[0].s_int;
	return this->QListView::addColumn(x1, x2);
    }
    virtual void adjustSize() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9609, x)) return;
	this->QWidget::adjustSize();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(call_method((void*)this, 5469, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5465, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void clear() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4527, x)) return;
	this->QListView::clear();
    }
    virtual void clearSelection() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4491, x)) return;
	this->QListView::clearSelection();
    }
    virtual bool close(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9596, x)) return (bool)x[0].s_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9704, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	Smoke::StackItem x[4];
	x[1].s_int = (int)x1;
	x[2].s_voidp = (void*)x2;
	x[3].s_voidp = (void*)x3;
	if(call_method((void*)this, 5552, x)) return (bool)x[0].s_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5467, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contentsContextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4558, x)) return;
	this->QListView::contentsContextMenuEvent(x1);
    }
    virtual void contentsDragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4559, x)) return;
	this->QListView::contentsDragEnterEvent(x1);
    }
    virtual void contentsDragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4561, x)) return;
	this->QListView::contentsDragLeaveEvent(x1);
    }
    virtual void contentsDragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4560, x)) return;
	this->QListView::contentsDragMoveEvent(x1);
    }
    virtual void contentsDropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4562, x)) return;
	this->QListView::contentsDropEvent(x1);
    }
    virtual void contentsMouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4557, x)) return;
	this->QListView::contentsMouseDoubleClickEvent(x1);
    }
    virtual void contentsMouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4556, x)) return;
	this->QListView::contentsMouseMoveEvent(x1);
    }
    virtual void contentsMousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4554, x)) return;
	this->QListView::contentsMousePressEvent(x1);
    }
    virtual void contentsMouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4555, x)) return;
	this->QListView::contentsMouseReleaseEvent(x1);
    }
    virtual void contentsWheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6654, x)) return;
	this->QScrollView::contentsWheelEvent(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6683, x)) return;
	this->QScrollView::contextMenuEvent(x1);
    }
    virtual void create(WId x1, bool x2, bool x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)&x1;
	x[2].s_bool = (bool)x2;
	x[3].s_bool = (bool)x3;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5466, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9634, x)) return (bool)x[0].s_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void destroy(bool x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_bool = (bool)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5468, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9710, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9712, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual QDragObject* dragObject() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4563, x)) 	return (QDragObject*)x[0].s_voidp;
	return this->QListView::dragObject();
    }
    virtual void drawContents(QPainter* x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6644, x)) return;
	this->QScrollView::drawContents(x1, x2, x3, x4, x5);
    }
    virtual void drawContentsOffset(QPainter* x1, int x2, int x3, int x4, int x5, int x6, int x7) {
	Smoke::StackItem x[8];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	x[6].s_int = (int)x6;
	x[7].s_int = (int)x7;
	if(call_method((void*)this, 4571, x)) return;
	this->QListView::drawContentsOffset(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual void drawFrame(QPainter* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void enterEvent(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9699, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9689, x)) return (bool)x[0].s_bool;
	return this->QWidget::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)x2;
	if(call_method((void*)this, 4513, x)) return (bool)x[0].s_bool;
	return this->QListView::eventFilter(x1, x2);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4565, x)) return;
	this->QListView::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6674, x)) return (bool)x[0].s_bool;
	return this->QScrollView::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4566, x)) return;
	this->QListView::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 5557, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	Smoke::StackItem x[5];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_voidp = (void*)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 5554, x)) return (int)x[0].s_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 6668, x)) return;
	this->QScrollView::frameChanged();
    }
    virtual int heightForWidth(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 9608, x)) return (int)x[0].s_int;
	return this->QWidget::heightForWidth(x1);
    }
    virtual void hide() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9666, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9715, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::imStartEvent(x1);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5427, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void insertItem(QListViewItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4462, x)) return;
	this->QListView::insertItem(x1);
    }
    virtual void invertSelection() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4528, x)) return;
	this->QListView::invertSelection();
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4567, x)) return;
	this->QListView::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9696, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9700, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 9722, x)) return (int)x[0].s_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4515, x)) {
	    QSize *xptr = (QSize *)x[0].s_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QListView::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6680, x)) return;
	this->QScrollView::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6681, x)) return;
	this->QScrollView::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6678, x)) return;
	this->QScrollView::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6679, x)) return;
	this->QScrollView::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveChild(QWidget* x1, int x2, int x3) {
	Smoke::StackItem x[4];
	x[1].s_voidp = (void*)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	if(call_method((void*)this, 6587, x)) return;
	this->QScrollView::moveChild(x1, x2, x3);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9702, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintEmptyArea(QPainter* x1, const QRect& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 4572, x)) return;
	this->QListView::paintEmptyArea(x1, x2);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void polish() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9672, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5441, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6631, x)) return;
	this->QScrollView::removeChild(x1);
    }
    virtual void removeColumn(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4470, x)) return;
	this->QListView::removeColumn(x1);
    }
    virtual void removeItem(QListViewItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4464, x)) return;
	this->QListView::removeItem(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	Smoke::StackItem x[5];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	x[3].s_voidp = (void*)&x3;
	x[4].s_bool = (bool)x4;
	if(call_method((void*)this, 9612, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 6609, x)) return;
	this->QScrollView::resize(x1, x2);
    }
    virtual void resizeContents(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 6634, x)) return;
	this->QScrollView::resizeContents(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4568, x)) return;
	this->QListView::resizeEvent(x1);
    }
    virtual int resolution() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 5550, x)) return (int)x[0].s_int;
	return this->QPaintDevice::resolution();
    }
    virtual void selectAll(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4529, x)) return;
	this->QListView::selectAll(x1);
    }
    virtual void setAcceptDrops(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9629, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9583, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAllColumnsShowFocus(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4502, x)) return;
	this->QListView::setAllColumnsShowFocus(x1);
    }
    virtual void setAutoMask(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9630, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9579, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9541, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9632, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9581, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setCaption(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9647, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setColumnAlignment(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 4479, x)) return;
	this->QListView::setColumnAlignment(x1, x2);
    }
    virtual void setColumnText(int x1, const QIconSet& x2, const QString& x3) {
	Smoke::StackItem x[4];
	x[1].s_int = (int)x1;
	x[2].s_voidp = (void*)&x2;
	x[3].s_voidp = (void*)&x3;
	if(call_method((void*)this, 4472, x)) return;
	this->QListView::setColumnText(x1, x2, x3);
    }
    virtual void setColumnText(int x1, const QString& x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 4471, x)) return;
	this->QListView::setColumnText(x1, x2);
    }
    virtual void setColumnWidth(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 4474, x)) return;
	this->QListView::setColumnWidth(x1, x2);
    }
    virtual void setColumnWidthMode(int x1, QListView::WidthMode x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 4476, x)) return;
	this->QListView::setColumnWidthMode(x1, x2);
    }
    virtual void setContentsPos(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 4531, x)) return;
	this->QListView::setContentsPos(x1, x2);
    }
    virtual void setCornerWidget(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6598, x)) return;
	this->QScrollView::setCornerWidget(x1);
    }
    virtual void setCurrentItem(QListViewItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4497, x)) return;
	this->QListView::setCurrentItem(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9568, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setDefaultRenameAction(QListView::RenameAction x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4524, x)) return;
	this->QListView::setDefaultRenameAction(x1);
    }
    virtual void setDragAutoScroll(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6632, x)) return;
	this->QScrollView::setDragAutoScroll(x1);
    }
    virtual void setEnabled(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 6642, x)) return;
	this->QScrollView::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9545, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9547, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFocus() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9651, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9586, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4511, x)) return;
	this->QListView::setFont(x1);
    }
    virtual void setFrameRect(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 2938, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2922, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9683, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	Smoke::StackItem x[5];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 9682, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)&x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6675, x)) return;
	this->QScrollView::setHBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setHScrollBarMode(QScrollView::ScrollBarMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6596, x)) return;
	this->QScrollView::setHScrollBarMode(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9648, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9649, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setItemMargin(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4504, x)) return;
	this->QListView::setItemMargin(x1);
    }
    virtual void setKeyCompression(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2932, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setMargin(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2934, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMargins(int x1, int x2, int x3, int x4) {
	Smoke::StackItem x[5];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	if(call_method((void*)this, 6669, x)) return;
	this->QScrollView::setMargins(x1, x2, x3, x4);
    }
    virtual void setMask(const QBitmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9575, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9576, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9518, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	Smoke::StackItem x[7];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_bool = (bool)x5;
	x[6].s_voidp = (void*)x6;
	if(call_method((void*)this, 9742, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 2936, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9516, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setMouseTracking(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9650, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setMultiSelection(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4487, x)) return;
	this->QListView::setMultiSelection(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9485, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setOpen(QListViewItem* x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 4495, x)) return;
	this->QListView::setOpen(x1, x2);
    }
    virtual void setPalette(const QPalette& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4512, x)) return;
	this->QListView::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9558, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_voidp = (void*)&x2;
	if(call_method((void*)this, 5440, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setResizeMode(QListView::ResizeMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4520, x)) return;
	this->QListView::setResizeMode(x1);
    }
    virtual void setResizePolicy(QScrollView::ResizePolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6580, x)) return;
	this->QScrollView::setResizePolicy(x1);
    }
    virtual void setResolution(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 5549, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setRootIsDecorated(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4506, x)) return;
	this->QListView::setRootIsDecorated(x1);
    }
    virtual void setSelected(QListViewItem* x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_voidp = (void*)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 4492, x)) return;
	this->QListView::setSelected(x1, x2);
    }
    virtual void setShowSortIndicator(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4516, x)) return;
	this->QListView::setShowSortIndicator(x1);
    }
    virtual void setShowToolTips(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4518, x)) return;
	this->QListView::setShowToolTips(x1);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9607, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setSorting(int x1, bool x2) {
	Smoke::StackItem x[3];
	x[1].s_int = (int)x1;
	x[2].s_bool = (bool)x2;
	if(call_method((void*)this, 4508, x)) return;
	this->QListView::setSorting(x1, x2);
    }
    virtual void setTreeStepSize(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(call_method((void*)this, 4461, x)) return;
	this->QListView::setTreeStepSize(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 9653, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	Smoke::StackItem x[6];
	x[1].s_voidp = (void*)&x1;
	x[2].s_int = (int)x2;
	x[3].s_int = (int)x3;
	x[4].s_int = (int)x4;
	x[5].s_int = (int)x5;
	if(call_method((void*)this, 6676, x)) return;
	this->QScrollView::setVBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setVScrollBarMode(QScrollView::ScrollBarMode x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 6594, x)) return;
	this->QScrollView::setVScrollBarMode(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 9735, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	Smoke::StackItem x[2];
	x[1].s_uint = (uint)x1;
	if(call_method((void*)this, 9732, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void show() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4481, x)) return;
	this->QListView::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4570, x)) return;
	this->QListView::showEvent(x1);
    }
    virtual void showMaximized() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9669, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9668, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9671, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4514, x)) {
	    QSize *xptr = (QSize *)x[0].s_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QListView::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9606, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].s_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void sort() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4510, x)) return;
	this->QListView::sort();
    }
    virtual void startDrag() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 4564, x)) return;
	this->QListView::startDrag();
    }
    virtual void styleChange(QStyle& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 4573, x)) return;
	this->QListView::styleChange(x1);
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void takeItem(QListViewItem* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4463, x)) return;
	this->QListView::takeItem(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 5464, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void unsetCursor() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9569, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 9716, x)) return;
	this->QWidget::updateMask();
    }
    virtual void viewportContextMenuEvent(QContextMenuEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6667, x)) return;
	this->QScrollView::viewportContextMenuEvent(x1);
    }
    virtual void viewportDragEnterEvent(QDragEnterEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6662, x)) return;
	this->QScrollView::viewportDragEnterEvent(x1);
    }
    virtual void viewportDragLeaveEvent(QDragLeaveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6664, x)) return;
	this->QScrollView::viewportDragLeaveEvent(x1);
    }
    virtual void viewportDragMoveEvent(QDragMoveEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6663, x)) return;
	this->QScrollView::viewportDragMoveEvent(x1);
    }
    virtual void viewportDropEvent(QDropEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6665, x)) return;
	this->QScrollView::viewportDropEvent(x1);
    }
    virtual void viewportMouseDoubleClickEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6660, x)) return;
	this->QScrollView::viewportMouseDoubleClickEvent(x1);
    }
    virtual void viewportMouseMoveEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6661, x)) return;
	this->QScrollView::viewportMouseMoveEvent(x1);
    }
    virtual void viewportMousePressEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6658, x)) return;
	this->QScrollView::viewportMousePressEvent(x1);
    }
    virtual void viewportMouseReleaseEvent(QMouseEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6659, x)) return;
	this->QScrollView::viewportMouseReleaseEvent(x1);
    }
    virtual void viewportPaintEvent(QPaintEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6656, x)) return;
	this->QScrollView::viewportPaintEvent(x1);
    }
    virtual void viewportResizeEvent(QResizeEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 4569, x)) return;
	this->QListView::viewportResizeEvent(x1);
    }
    virtual void viewportWheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6666, x)) return;
	this->QScrollView::viewportWheelEvent(x1);
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)x1;
	if(call_method((void*)this, 6682, x)) return;
	this->QScrollView::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	Smoke::StackItem x[2];
	x[1].s_bool = (bool)x1;
	if(call_method((void*)this, 4574, x)) return;
	this->QListView::windowActivationChange(x1);
    }
    ~x_QListView() {}
};
void xcall_QListView(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QListView *xself = (x_QListView*)obj;
    switch(xi) {
	case 0: x_QListView::x_0(args);	break;
	case 1: x_QListView::x_1(args);	break;
	case 2: x_QListView::x_2(args);	break;
	case 3: x_QListView::x_3(args);	break;
	case 4: x_QListView::x_4(args);	break;
	case 5: x_QListView::x_5(args);	break;
	case 6: x_QListView::x_6(args);	break;
	case 7: x_QListView::x_7(args);	break;
	case 8: x_QListView::x_8(args);	break;
	case 9: x_QListView::x_9(args);	break;
	case 10: x_QListView::x_10(args);	break;
	case 11: x_QListView::x_11(args);	break;
	case 12: x_QListView::x_12(args);	break;
	case 13: x_QListView::x_13(args);	break;
	case 14: x_QListView::x_14(args);	break;
	case 15: xself->x_15(args);	break;
	case 16: xself->x_16(args);	break;
	case 17: xself->x_17(args);	break;
	case 18: xself->x_18(args);	break;
	case 19: xself->x_19(args);	break;
	case 20: xself->x_20(args);	break;
	case 21: xself->x_21(args);	break;
	case 22: xself->x_22(args);	break;
	case 23: xself->x_23(args);	break;
	case 24: xself->x_24(args);	break;
	case 25: xself->x_25(args);	break;
	case 26: xself->x_26(args);	break;
	case 27: xself->x_27(args);	break;
	case 28: xself->x_28(args);	break;
	case 29: xself->x_29(args);	break;
	case 30: xself->x_30(args);	break;
	case 31: xself->x_31(args);	break;
	case 32: xself->x_32(args);	break;
	case 33: xself->x_33(args);	break;
	case 34: xself->x_34(args);	break;
	case 35: xself->x_35(args);	break;
	case 36: xself->x_36(args);	break;
	case 37: xself->x_37(args);	break;
	case 38: xself->x_38(args);	break;
	case 39: xself->x_39(args);	break;
	case 40: xself->x_40(args);	break;
	case 41: xself->x_41(args);	break;
	case 42: xself->x_42(args);	break;
	case 43: xself->x_43(args);	break;
	case 44: xself->x_44(args);	break;
	case 45: xself->x_45(args);	break;
	case 46: xself->x_46(args);	break;
	case 47: xself->x_47(args);	break;
	case 48: xself->x_48(args);	break;
	case 49: xself->x_49(args);	break;
	case 50: xself->x_50(args);	break;
	case 51: xself->x_51(args);	break;
	case 52: xself->x_52(args);	break;
	case 53: xself->x_53(args);	break;
	case 54: xself->x_54(args);	break;
	case 55: xself->x_55(args);	break;
	case 56: xself->x_56(args);	break;
	case 57: xself->x_57(args);	break;
	case 58: xself->x_58(args);	break;
	case 59: xself->x_59(args);	break;
	case 60: xself->x_60(args);	break;
	case 61: xself->x_61(args);	break;
	case 62: xself->x_62(args);	break;
	case 63: xself->x_63(args);	break;
	case 64: xself->x_64(args);	break;
	case 65: xself->x_65(args);	break;
	case 66: xself->x_66(args);	break;
	case 67: xself->x_67(args);	break;
	case 68: xself->x_68(args);	break;
	case 69: xself->x_69(args);	break;
	case 70: xself->x_70(args);	break;
	case 71: xself->x_71(args);	break;
	case 72: xself->x_72(args);	break;
	case 73: xself->x_73(args);	break;
	case 74: xself->x_74(args);	break;
	case 75: xself->x_75(args);	break;
	case 76: xself->x_76(args);	break;
	case 77: xself->x_77(args);	break;
	case 78: xself->x_78(args);	break;
	case 79: xself->x_79(args);	break;
	case 80: xself->x_80(args);	break;
	case 81: xself->x_81(args);	break;
	case 82: xself->x_82(args);	break;
	case 83: xself->x_83(args);	break;
	case 84: xself->x_84(args);	break;
	case 85: xself->x_85(args);	break;
	case 86: xself->x_86(args);	break;
	case 87: xself->x_87(args);	break;
	case 88: xself->x_88(args);	break;
	case 89: xself->x_89(args);	break;
	case 90: xself->x_90(args);	break;
	case 91: xself->x_91(args);	break;
	case 92: xself->x_92(args);	break;
	case 93: xself->x_93(args);	break;
	case 94: xself->x_94(args);	break;
	case 95: xself->x_95(args);	break;
	case 96: xself->x_96(args);	break;
	case 97: xself->x_97(args);	break;
	case 98: xself->x_98(args);	break;
	case 99: xself->x_99(args);	break;
	case 100: xself->x_100(args);	break;
	case 101: xself->x_101(args);	break;
	case 102: xself->x_102(args);	break;
	case 103: xself->x_103(args);	break;
	case 104: xself->x_104(args);	break;
	case 105: xself->x_105(args);	break;
	case 106: xself->x_106(args);	break;
	case 107: xself->x_107(args);	break;
	case 108: xself->x_108(args);	break;
	case 109: xself->x_109(args);	break;
	case 110: xself->x_110(args);	break;
	case 111: xself->x_111(args);	break;
	case 112: xself->x_112(args);	break;
	case 113: xself->x_113(args);	break;
	case 114: xself->x_114(args);	break;
	case 115: xself->x_115(args);	break;
	case 116: xself->x_116(args);	break;
	case 117: xself->x_117(args);	break;
	case 118: xself->x_118(args);	break;
	case 119: xself->x_119(args);	break;
	case 120: xself->x_120(args);	break;
	case 121: xself->x_121(args);	break;
	case 122: xself->x_122(args);	break;
	case 123: xself->x_123(args);	break;
	case 124: xself->x_124(args);	break;
	case 125: xself->x_125(args);	break;
	case 126: xself->x_126(args);	break;
	case 127: xself->x_127(args);	break;
	case 128: xself->x_128(args);	break;
	case 129: xself->x_129(args);	break;
	case 130: xself->x_130(args);	break;
	case 131: xself->x_131(args);	break;
	case 132: delete (QListView*)xself;	break;
    }
}
