//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qdockwindow.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qpoint.h>
#include <qfont.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>

class x_QDockWindow : public QDockWindow {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QDockWindow::InDock;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QDockWindow::OutsideDock;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QDockWindow::Never;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QDockWindow::Docked;
    }
    static void x_4(xargs *x) {
	x[0].x_long = (long)QDockWindow::Undocked;
    }
    static void x_5(xargs *x) {
	x[0].x_long = (long)QDockWindow::Always;
    }
    static void x_6(xargs *x) {
	// QDockWindow(QDockWindow::Place, QWidget*, const char*, Qt::WFlags)
	x_QDockWindow* xret = new x_QDockWindow((QDockWindow::Place)x[1].x_long,(QWidget*)x[2].x_voidp,(const char*)x[3].x_voidp,*(Qt::WFlags *)x[4].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QDockWindow(QDockWindow::Place x1, QWidget* x2, const char* x3, Qt::WFlags x4) : QDockWindow(x1, x2, x3, x4) {
    }
    static void x_7(xargs *x) {
	// QDockWindow(QDockWindow::Place, QWidget*, const char*)
	x_QDockWindow* xret = new x_QDockWindow((QDockWindow::Place)x[1].x_long,(QWidget*)x[2].x_voidp,(const char*)x[3].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QDockWindow(QDockWindow::Place x1, QWidget* x2, const char* x3) : QDockWindow(x1, x2, x3) {
    }
    static void x_8(xargs *x) {
	// QDockWindow(QDockWindow::Place, QWidget*)
	x_QDockWindow* xret = new x_QDockWindow((QDockWindow::Place)x[1].x_long,(QWidget*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QDockWindow(QDockWindow::Place x1, QWidget* x2) : QDockWindow(x1, x2) {
    }
    static void x_9(xargs *x) {
	// QDockWindow(QDockWindow::Place)
	x_QDockWindow* xret = new x_QDockWindow((QDockWindow::Place)x[1].x_long);
	x[0].x_voidp = (void*)xret;
    }
    x_QDockWindow(QDockWindow::Place x1) : QDockWindow(x1) {
    }
    static void x_10(xargs *x) {
	// QDockWindow()
	x_QDockWindow* xret = new x_QDockWindow();
	x[0].x_voidp = (void*)xret;
    }
    x_QDockWindow() : QDockWindow() {
    }
    void x_11(xargs *x) {
	// setWidget(QWidget*)
	this->QDockWindow::setWidget((QWidget*)x[1].x_voidp);
    }
    void x_12(xargs *x) const {
	// widget()
	QWidget* xret = this->QDockWindow::widget();
	x[0].x_voidp = (void*)xret;
    }
    void x_13(xargs *x) const {
	// place()
	QDockWindow::Place xret = this->QDockWindow::place();
	x[0].x_long = (long)xret;
    }
    void x_14(xargs *x) const {
	// area()
	QDockArea* xret = this->QDockWindow::area();
	x[0].x_voidp = (void*)xret;
    }
    void x_15(xargs *x) {
	// setCloseMode(int)
	this->QDockWindow::setCloseMode((int)x[1].x_int);
    }
    void x_16(xargs *x) const {
	// isCloseEnabled()
	bool xret = this->QDockWindow::isCloseEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_17(xargs *x) const {
	// closeMode()
	int xret = this->QDockWindow::closeMode();
	x[0].x_int = (int)xret;
    }
    void x_18(xargs *x) {
	// setResizeEnabled(bool)
	this->QDockWindow::setResizeEnabled((bool)x[1].x_bool);
    }
    void x_19(xargs *x) {
	// setMovingEnabled(bool)
	this->QDockWindow::setMovingEnabled((bool)x[1].x_bool);
    }
    void x_20(xargs *x) const {
	// isResizeEnabled()
	bool xret = this->QDockWindow::isResizeEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_21(xargs *x) const {
	// isMovingEnabled()
	bool xret = this->QDockWindow::isMovingEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_22(xargs *x) {
	// setHorizontallyStretchable(bool)
	this->QDockWindow::setHorizontallyStretchable((bool)x[1].x_bool);
    }
    void x_23(xargs *x) {
	// setVerticallyStretchable(bool)
	this->QDockWindow::setVerticallyStretchable((bool)x[1].x_bool);
    }
    void x_24(xargs *x) const {
	// isHorizontallyStretchable()
	bool xret = this->QDockWindow::isHorizontallyStretchable();
	x[0].x_bool = (bool)xret;
    }
    void x_25(xargs *x) const {
	// isVerticallyStretchable()
	bool xret = this->QDockWindow::isVerticallyStretchable();
	x[0].x_bool = (bool)xret;
    }
    void x_26(xargs *x) {
	// setHorizontalStretchable(bool)
	this->QDockWindow::setHorizontalStretchable((bool)x[1].x_bool);
    }
    void x_27(xargs *x) {
	// setVerticalStretchable(bool)
	this->QDockWindow::setVerticalStretchable((bool)x[1].x_bool);
    }
    void x_28(xargs *x) const {
	// isHorizontalStretchable()
	bool xret = this->QDockWindow::isHorizontalStretchable();
	x[0].x_bool = (bool)xret;
    }
    void x_29(xargs *x) const {
	// isVerticalStretchable()
	bool xret = this->QDockWindow::isVerticalStretchable();
	x[0].x_bool = (bool)xret;
    }
    void x_30(xargs *x) const {
	// isStretchable()
	bool xret = this->QDockWindow::isStretchable();
	x[0].x_bool = (bool)xret;
    }
    void x_31(xargs *x) {
	// setOffset(int)
	this->QDockWindow::setOffset((int)x[1].x_int);
    }
    void x_32(xargs *x) const {
	// offset()
	int xret = this->QDockWindow::offset();
	x[0].x_int = (int)xret;
    }
    void x_33(xargs *x) {
	// setFixedExtentWidth(int)
	this->QDockWindow::setFixedExtentWidth((int)x[1].x_int);
    }
    void x_34(xargs *x) {
	// setFixedExtentHeight(int)
	this->QDockWindow::setFixedExtentHeight((int)x[1].x_int);
    }
    void x_35(xargs *x) const {
	// fixedExtent()
	QSize xret = this->QDockWindow::fixedExtent();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_36(xargs *x) {
	// setNewLine(bool)
	this->QDockWindow::setNewLine((bool)x[1].x_bool);
    }
    void x_37(xargs *x) const {
	// newLine()
	bool xret = this->QDockWindow::newLine();
	x[0].x_bool = (bool)xret;
    }
    void x_38(xargs *x) const {
	// orientation()
	Qt::Orientation xret = this->QDockWindow::orientation();
	x[0].x_long = (long)xret;
    }
    void x_39(xargs *x) const {
	// sizeHint()
	QSize xret = this->QDockWindow::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_40(xargs *x) const {
	// minimumSize()
	QSize xret = this->QDockWindow::minimumSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_41(xargs *x) const {
	// minimumSizeHint()
	QSize xret = this->QDockWindow::minimumSizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_42(xargs *x) {
	// boxLayout()
	QBoxLayout* xret = this->QDockWindow::boxLayout();
	x[0].x_voidp = (void*)xret;
    }
    void x_43(xargs *x) {
	// setOpaqueMoving(bool)
	this->QDockWindow::setOpaqueMoving((bool)x[1].x_bool);
    }
    void x_44(xargs *x) const {
	// opaqueMoving()
	bool xret = this->QDockWindow::opaqueMoving();
	x[0].x_bool = (bool)xret;
    }
    void x_45(xargs *x) {
	// eventFilter(QObject*, QEvent*)
	bool xret = this->QDockWindow::eventFilter((QObject*)x[1].x_voidp,(QEvent*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_46(xargs *x) const {
	// caption()
	QString xret = this->QDockWindow::caption();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_47(xargs *x) {
	// undock(QWidget*)
	this->QDockWindow::undock((QWidget*)x[1].x_voidp);
    }
    void x_48(xargs *x) {
	// undock()
	this->QDockWindow::undock();
    }
    void x_49(xargs *x) {
	// dock()
	this->QDockWindow::dock();
    }
    void x_50(xargs *x) {
	// setOrientation(Qt::Orientation)
	this->QDockWindow::setOrientation((Qt::Orientation)x[1].x_long);
    }
    void x_51(xargs *x) {
	// setCaption(const QString&)
	this->QDockWindow::setCaption(*(const QString *)x[1].x_voidp);
    }
    void x_52(xargs *x) {
	// orientationChanged(Qt::Orientation)
	this->QDockWindow::orientationChanged((Qt::Orientation)x[1].x_long);
    }
    void x_53(xargs *x) {
	// placeChanged(QDockWindow::Place)
	this->QDockWindow::placeChanged((QDockWindow::Place)x[1].x_long);
    }
    void x_54(xargs *x) {
	// visibilityChanged(bool)
	this->QDockWindow::visibilityChanged((bool)x[1].x_bool);
    }
    void x_55(xargs *x) {
	// resizeEvent(QResizeEvent*)
	this->QDockWindow::resizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_56(xargs *x) {
	// showEvent(QShowEvent*)
	this->QDockWindow::showEvent((QShowEvent*)x[1].x_voidp);
    }
    void x_57(xargs *x) {
	// hideEvent(QHideEvent*)
	this->QDockWindow::hideEvent((QHideEvent*)x[1].x_voidp);
    }
    void x_58(xargs *x) {
	// contextMenuEvent(QContextMenuEvent*)
	this->QDockWindow::contextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_59(xargs *x) {
	// drawFrame(QPainter*)
	this->QDockWindow::drawFrame((QPainter*)x[1].x_voidp);
    }
    void x_60(xargs *x) {
	// event(QEvent*)
	bool xret = this->QDockWindow::event((QEvent*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    virtual void adjustSize() {
	xargs x[1];
	if(call_method((void*)this, 9618, x)) return;
	this->QWidget::adjustSize();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual bool close(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9605, x)) return (bool)x[0].x_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5558, x)) return (bool)x[0].x_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1973, x)) return;
	this->QDockWindow::contextMenuEvent(x1);
    }
    virtual void create(WId x1, bool x2, bool x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 9733, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	xargs x[1];
	if(call_method((void*)this, 9643, x)) return (bool)x[0].x_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void destroy(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 9737, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void dock() {
	xargs x[1];
	if(call_method((void*)this, 1964, x)) return;
	this->QDockWindow::dock();
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9721, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void drawContents(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2947, x)) return;
	this->QFrame::drawContents(x1);
    }
    virtual void drawFrame(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1974, x)) return;
	this->QDockWindow::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9722, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9727, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void enterEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1975, x)) return (bool)x[0].x_bool;
	return this->QDockWindow::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 1960, x)) return (bool)x[0].x_bool;
	return this->QDockWindow::eventFilter(x1, x2);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9746, x)) return (bool)x[0].x_bool;
	return this->QWidget::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9729, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	xargs x[1];
	if(call_method((void*)this, 2948, x)) return;
	this->QFrame::frameChanged();
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9617, x)) return (int)x[0].x_int;
	return this->QWidget::heightForWidth(x1);
    }
    virtual void hide() {
	xargs x[1];
	if(call_method((void*)this, 9675, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1972, x)) return;
	this->QDockWindow::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9716, x)) return;
	this->QWidget::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9717, x)) return;
	this->QWidget::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9715, x)) return;
	this->QWidget::imStartEvent(x1);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9704, x)) return;
	this->QWidget::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9705, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9731, x)) return (int)x[0].x_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 1956, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockWindow::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9701, x)) return;
	this->QWidget::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9702, x)) return;
	this->QWidget::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9699, x)) return;
	this->QWidget::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9700, x)) return;
	this->QWidget::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9687, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2944, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void polish() {
	xargs x[1];
	if(call_method((void*)this, 9681, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5434, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_voidp = (void*)&x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 9621, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9689, x)) return;
	this->QWidget::resize(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1970, x)) return;
	this->QDockWindow::resizeEvent(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void setAcceptDrops(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9638, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	xargs x[1];
	if(call_method((void*)this, 9592, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAutoMask(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9639, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9550, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9641, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9590, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setCaption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 1966, x)) return;
	this->QDockWindow::setCaption(x1);
    }
    virtual void setCloseMode(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 1930, x)) return;
	this->QDockWindow::setCloseMode(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9577, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9654, x)) return;
	this->QWidget::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9554, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFixedExtentHeight(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 1949, x)) return;
	this->QDockWindow::setFixedExtentHeight(x1);
    }
    virtual void setFixedExtentWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 1948, x)) return;
	this->QDockWindow::setFixedExtentWidth(x1);
    }
    virtual void setFocus() {
	xargs x[1];
	if(call_method((void*)this, 9660, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9595, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9597, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9571, x)) return;
	this->QWidget::setFont(x1);
    }
    virtual void setFrameRect(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 2943, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2927, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9692, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 9691, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHorizontallyStretchable(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1937, x)) return;
	this->QDockWindow::setHorizontallyStretchable(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9657, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9658, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setKeyCompression(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9750, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2937, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setMargin(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMask(const QBitmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9584, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9585, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9527, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	xargs x[7];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_bool = (bool)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 9751, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setMouseTracking(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9659, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setMovingEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1934, x)) return;
	this->QDockWindow::setMovingEnabled(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9494, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setNewLine(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1951, x)) return;
	this->QDockWindow::setNewLine(x1);
    }
    virtual void setOffset(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 1946, x)) return;
	this->QDockWindow::setOffset(x1);
    }
    virtual void setOpaqueMoving(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1958, x)) return;
	this->QDockWindow::setOpaqueMoving(x1);
    }
    virtual void setOrientation(Qt::Orientation x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 1965, x)) return;
	this->QDockWindow::setOrientation(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9560, x)) return;
	this->QWidget::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9565, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9567, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setResizeEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1933, x)) return;
	this->QDockWindow::setResizeEnabled(x1);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9534, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9616, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9662, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVerticallyStretchable(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 1938, x)) return;
	this->QDockWindow::setVerticallyStretchable(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9744, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	xargs x[2];
	x[1].x_uint = (uint)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void setWidget(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1926, x)) return;
	this->QDockWindow::setWidget(x1);
    }
    virtual void show() {
	xargs x[1];
	if(call_method((void*)this, 9674, x)) return;
	this->QWidget::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1971, x)) return;
	this->QDockWindow::showEvent(x1);
    }
    virtual void showMaximized() {
	xargs x[1];
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	xargs x[1];
	if(call_method((void*)this, 9677, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	xargs x[1];
	if(call_method((void*)this, 9680, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 1954, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDockWindow::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	xargs x[1];
	if(call_method((void*)this, 9615, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].x_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9726, x)) return;
	this->QWidget::styleChange(x1);
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void undock() {
	xargs x[1];
	if(call_method((void*)this, 1963, x)) return;
	this->QDockWindow::undock();
    }
    virtual void undock(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 1962, x)) return;
	this->QDockWindow::undock(x1);
    }
    virtual void unsetCursor() {
	xargs x[1];
	if(call_method((void*)this, 9578, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	xargs x[1];
	if(call_method((void*)this, 9725, x)) return;
	this->QWidget::updateMask();
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9703, x)) return;
	this->QWidget::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9730, x)) return;
	this->QWidget::windowActivationChange(x1);
    }
    ~x_QDockWindow() {}
};
void xcall_QDockWindow(xargs *x, void *s, int xi) {
    x_QDockWindow *xself = (x_QDockWindow*)s;
    switch(xi) {
	case 0: x_QDockWindow::x_0(x);	break;
	case 1: x_QDockWindow::x_1(x);	break;
	case 2: x_QDockWindow::x_2(x);	break;
	case 3: x_QDockWindow::x_3(x);	break;
	case 4: x_QDockWindow::x_4(x);	break;
	case 5: x_QDockWindow::x_5(x);	break;
	case 6: x_QDockWindow::x_6(x);	break;
	case 7: x_QDockWindow::x_7(x);	break;
	case 8: x_QDockWindow::x_8(x);	break;
	case 9: x_QDockWindow::x_9(x);	break;
	case 10: x_QDockWindow::x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
	case 25: xself->x_25(x);	break;
	case 26: xself->x_26(x);	break;
	case 27: xself->x_27(x);	break;
	case 28: xself->x_28(x);	break;
	case 29: xself->x_29(x);	break;
	case 30: xself->x_30(x);	break;
	case 31: xself->x_31(x);	break;
	case 32: xself->x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: xself->x_54(x);	break;
	case 55: xself->x_55(x);	break;
	case 56: xself->x_56(x);	break;
	case 57: xself->x_57(x);	break;
	case 58: xself->x_58(x);	break;
	case 59: xself->x_59(x);	break;
	case 60: xself->x_60(x);	break;
	case 61: delete (QDockWindow*)xself;	break;
    }
}
