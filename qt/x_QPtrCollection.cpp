//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qptrcollection.h>

class x_QPtrCollection : public QPtrCollection {
public:
    void x_0(xargs *x) const {
	// autoDelete()
	bool xret = this->QPtrCollection::autoDelete();
	x[0].x_bool = (bool)xret;
    }
    void x_1(xargs *x) {
	// setAutoDelete(bool)
	this->QPtrCollection::setAutoDelete((bool)x[1].x_bool);
    }
    void x_2(xargs *x) const {
	// count()
	uint xret = this->QPtrCollection::count();
	x[0].x_uint = (uint)xret;
    }
    void x_3(xargs *x) {
	// clear()
	this->QPtrCollection::clear();
    }
    static void x_4(xargs *x) {
	// QPtrCollection()
	x_QPtrCollection* xret = new x_QPtrCollection();
	x[0].x_voidp = (void*)xret;
    }
    x_QPtrCollection() : QPtrCollection() {
    }
    static void x_5(xargs *x) {
	// QPtrCollection(const QPtrCollection&)
	x_QPtrCollection* xret = new x_QPtrCollection(*(const QPtrCollection *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QPtrCollection(const QPtrCollection& x1) : QPtrCollection(x1) {
    }
    void x_6(xargs *x) {
	// newItem(Item)
	Item xret = this->QPtrCollection::newItem(*(Item *)x[1].x_voidp);
	x[0].x_voidp = (void*)new Item(xret);
    }
    void x_7(xargs *x) {
	// deleteItem(Item)
	this->QPtrCollection::deleteItem(*(Item *)x[1].x_voidp);
    }
    virtual void clear() {
	xargs x[1];
	call_method_abstract((void*)this, 6284, x);
	return;
	// ABSTRACT
    }
    virtual uint count() const {
	xargs x[1];
	call_method_abstract((void*)this, 6283, x);
return (uint)x[0].x_uint;
	// ABSTRACT
    }
    virtual void deleteItem(Item x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	call_method_abstract((void*)this, 6289, x);
	return;
	// ABSTRACT
    }
    virtual Item newItem(Item x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6288, x)) {
	    Item *xptr = (Item *)x[0].x_voidp;
	    Item xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QPtrCollection::newItem(x1);
    }
    ~x_QPtrCollection() {}
};
void xcall_QPtrCollection(xargs *x, void *s, int xi) {
    x_QPtrCollection *xself = (x_QPtrCollection*)s;
    switch(xi) {
	case 0: xself->x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: x_QPtrCollection::x_4(x);	break;
	case 5: x_QPtrCollection::x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
    }
}
