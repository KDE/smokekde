//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qobjectlist.h>

class x_QObjectListIt : public QObjectListIt {
public:
    static void x_0(Smoke::Stack x) {
	// QObjectListIt(const QObjectList&)
	x_QObjectListIt* xret = new x_QObjectListIt(*(const QObjectList *)x[1].s_voidp);
	x[0].s_class = (void*)xret;
    }
    x_QObjectListIt(const QObjectList& x1) : QObjectListIt(x1) {
    }
    void x_1(Smoke::Stack x) {
	// operator=(const QObjectListIt&)
	QObjectListIt& xret = this->QObjectListIt::operator=(*(const QObjectListIt *)x[1].s_voidp);
	x[0].s_voidp = (void*)&xret;
    }
    ~x_QObjectListIt() {}
};
void xcall_QObjectListIt(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QObjectListIt *xself = (x_QObjectListIt*)obj;
    switch(xi) {
	case 0: x_QObjectListIt::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: delete (QObjectListIt*)xself;	break;
    }
}
