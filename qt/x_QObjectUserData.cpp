//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qobject.h>

class x_QObjectUserData : public QObjectUserData {
public:
    static void x_0(Smoke::Stack x) {
	// QObjectUserData()
	x_QObjectUserData* xret = new x_QObjectUserData();
	x[0].s_class = (void*)xret;
    }
    x_QObjectUserData() : QObjectUserData() {
    }
    static void x_1(Smoke::Stack x) {
	// QObjectUserData(const QObjectUserData&)
	x_QObjectUserData* xret = new x_QObjectUserData(*(const QObjectUserData *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QObjectUserData(const QObjectUserData& x1) : QObjectUserData(x1) {
    }
    ~x_QObjectUserData() { qt_Smoke->binding->deleted(221, (void*)this); }
};
void xcall_QObjectUserData(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QObjectUserData *xself = (x_QObjectUserData*)obj;
    switch(xi) {
	case 0: x_QObjectUserData::x_0(args);	break;
	case 1: x_QObjectUserData::x_1(args);	break;
	case 2: delete (QObjectUserData*)xself;	break;
    }
}
