//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qtextstream.h>

class x_QTSManip : public QTSManip {
public:
    static void x_0(Smoke::Stack x) {
	// QTSManip(QTSMFI, int)
	x_QTSManip* xret = new x_QTSManip((QTSMFI)x[1].s_int,(int)x[2].s_int);
	x[0].s_class = (void*)xret;
    }
    x_QTSManip(QTSMFI x1, int x2) : QTSManip(x1, x2) {
    }
    void x_1(Smoke::Stack x) {
	// exec(QTextStream&)
	this->QTSManip::exec(*(QTextStream *)x[1].s_class);
	(void)x; // noop (for compiler warning)
    }
    static void x_2(Smoke::Stack x) {
	// QTSManip(const QTSManip&)
	x_QTSManip* xret = new x_QTSManip(*(const QTSManip *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QTSManip(const QTSManip& x1) : QTSManip(x1) {
    }
    ~x_QTSManip() { qt_Smoke->binding->deleted(307, (void*)this); }
};
void xcall_QTSManip(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QTSManip *xself = (x_QTSManip*)obj;
    switch(xi) {
	case 0: x_QTSManip::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: x_QTSManip::x_2(args);	break;
	case 3: delete (QTSManip*)xself;	break;
    }
}
