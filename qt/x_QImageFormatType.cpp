//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qasyncimageio.h>

class x_QImageFormatType : public QImageFormatType {
public:
    void x_0(Smoke::Stack x) {
	// decoderFor(const uchar*, int)
	QImageFormat* xret = this->QImageFormatType::decoderFor((const uchar*)x[1].s_class,(int)x[2].s_int);
	x[0].s_class = (void*)xret;
    }
    void x_1(Smoke::Stack x) const {
	// formatName()
	const char* xret = this->QImageFormatType::formatName();
	x[0].s_class = (void*)xret;
    }
    static void x_2(Smoke::Stack x) {
	// QImageFormatType()
	x_QImageFormatType* xret = new x_QImageFormatType();
	x[0].s_class = (void*)xret;
    }
    x_QImageFormatType() : QImageFormatType() {
    }
    virtual QImageFormat* decoderFor(const uchar* x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_int = (int)x2;
	qt_Smoke->callMethod(3820, (void*)this, x, true /*pure virtual*/);
	return (QImageFormat*)x[0].s_class;
	// ABSTRACT
    }
    virtual const char* formatName() const {
	Smoke::StackItem x[1];
	qt_Smoke->callMethod(3821, (void*)this, x, true /*pure virtual*/);
	return (const char*)x[0].s_class;
	// ABSTRACT
    }
    ~x_QImageFormatType() {}
};
void xcall_QImageFormatType(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QImageFormatType *xself = (x_QImageFormatType*)obj;
    switch(xi) {
	case 0: xself->x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: x_QImageFormatType::x_2(args);	break;
	case 3: delete (QImageFormatType*)xself;	break;
    }
}
