//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qevent.h>
#include <qstring.h>

class x_QIMComposeEvent : public QIMComposeEvent {
public:
    static void x_0(Smoke::Stack x) {
	// QIMComposeEvent(QEvent::Type, const QString&, int, int)
	x_QIMComposeEvent* xret = new x_QIMComposeEvent((QEvent::Type)x[1].s_enum,*(const QString *)x[2].s_voidp,(int)x[3].s_int,(int)x[4].s_int);
	x[0].s_class = (void*)xret;
    }
    x_QIMComposeEvent(QEvent::Type x1, const QString& x2, int x3, int x4) : QIMComposeEvent(x1, x2, x3, x4) {
    }
    static void x_1(Smoke::Stack x) {
	// QIMComposeEvent(const QIMComposeEvent&)
	x_QIMComposeEvent* xret = new x_QIMComposeEvent(*(const QIMComposeEvent *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QIMComposeEvent(const QIMComposeEvent& x1) : QIMComposeEvent(x1) {
    }
    ~x_QIMComposeEvent() { qt_Smoke->binding->deleted(152, (void*)this); }
};
void xcall_QIMComposeEvent(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QIMComposeEvent *xself = (x_QIMComposeEvent*)obj;
    switch(xi) {
	case 0: x_QIMComposeEvent::x_0(args);	break;
	case 1: x_QIMComposeEvent::x_1(args);	break;
	case 2: delete (QIMComposeEvent*)xself;	break;
    }
}
