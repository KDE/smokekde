//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qglist.h>
#include <qptrcollection.h>

class x_QGListIterator : public QGListIterator {
public:
    static void x_0(Smoke::Stack x) {
	// QGListIterator(const QGList&)
	x_QGListIterator* xret = new x_QGListIterator(*(const QGList *)x[1].s_voidp);
	x[0].s_class = (void*)xret;
    }
    x_QGListIterator(const QGList& x1) : QGListIterator(x1) {
    }
    static void x_1(Smoke::Stack x) {
	// QGListIterator(const QGListIterator&)
	x_QGListIterator* xret = new x_QGListIterator(*(const QGListIterator *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QGListIterator(const QGListIterator& x1) : QGListIterator(x1) {
    }
    void x_2(Smoke::Stack x) {
	// operator=(const QGListIterator&)
	QGListIterator& xret = this->QGListIterator::operator=(*(const QGListIterator *)x[1].s_class);
	x[0].s_class = (void*)&xret;
    }
    void x_3(Smoke::Stack x) const {
	// atFirst()
	bool xret = this->QGListIterator::atFirst();
	x[0].s_bool = xret;
    }
    void x_4(Smoke::Stack x) const {
	// atLast()
	bool xret = this->QGListIterator::atLast();
	x[0].s_bool = xret;
    }
    void x_5(Smoke::Stack x) {
	// toFirst()
	QPtrCollection::Item xret = this->QGListIterator::toFirst();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_6(Smoke::Stack x) {
	// toLast()
	QPtrCollection::Item xret = this->QGListIterator::toLast();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_7(Smoke::Stack x) const {
	// get()
	QPtrCollection::Item xret = this->QGListIterator::get();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_8(Smoke::Stack x) {
	// operator()()
	QPtrCollection::Item xret = this->QGListIterator::operator()();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_9(Smoke::Stack x) {
	// operator++()
	QPtrCollection::Item xret = this->QGListIterator::operator++();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_10(Smoke::Stack x) {
	// operator+=(uint)
	QPtrCollection::Item xret = this->QGListIterator::operator+=((uint)x[1].s_uint);
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_11(Smoke::Stack x) {
	// operator--()
	QPtrCollection::Item xret = this->QGListIterator::operator--();
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    void x_12(Smoke::Stack x) {
	// operator-=(uint)
	QPtrCollection::Item xret = this->QGListIterator::operator-=((uint)x[1].s_uint);
	x[0].s_voidp = (void*)new QPtrCollection::Item(xret);
    }
    ~x_QGListIterator() { qt_Smoke->binding->deleted(129, (void*)this); }
};
void xcall_QGListIterator(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QGListIterator *xself = (x_QGListIterator*)obj;
    switch(xi) {
	case 0: x_QGListIterator::x_0(args);	break;
	case 1: x_QGListIterator::x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: xself->x_7(args);	break;
	case 8: xself->x_8(args);	break;
	case 9: xself->x_9(args);	break;
	case 10: xself->x_10(args);	break;
	case 11: xself->x_11(args);	break;
	case 12: xself->x_12(args);	break;
    }
}
