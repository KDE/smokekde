//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qfontinfo.h>
#include <qstring.h>
#include <qfont.h>

class x_QFontInfo : public QFontInfo {
public:
    static void x_0(xargs *x) {
	// QFontInfo(const QFont&)
	x_QFontInfo* xret = new x_QFontInfo(*(const QFont *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QFontInfo(const QFont& x1) : QFontInfo(x1) {
    }
    static void x_1(xargs *x) {
	// QFontInfo(const QFontInfo&)
	x_QFontInfo* xret = new x_QFontInfo(*(const QFontInfo *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QFontInfo(const QFontInfo& x1) : QFontInfo(x1) {
    }
    void x_2(xargs *x) {
	// operator=(const QFontInfo&)
	QFontInfo& xret = this->QFontInfo::operator=(*(const QFontInfo *)x[1].x_voidp);
	x[0].x_voidp = (void*)&xret;
    }
    void x_3(xargs *x) const {
	// family()
	QString xret = this->QFontInfo::family();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_4(xargs *x) const {
	// pixelSize()
	int xret = this->QFontInfo::pixelSize();
	x[0].x_int = (int)xret;
    }
    void x_5(xargs *x) const {
	// pointSize()
	int xret = this->QFontInfo::pointSize();
	x[0].x_int = (int)xret;
    }
    void x_6(xargs *x) const {
	// italic()
	bool xret = this->QFontInfo::italic();
	x[0].x_bool = (bool)xret;
    }
    void x_7(xargs *x) const {
	// weight()
	int xret = this->QFontInfo::weight();
	x[0].x_int = (int)xret;
    }
    void x_8(xargs *x) const {
	// bold()
	bool xret = this->QFontInfo::bold();
	x[0].x_bool = (bool)xret;
    }
    void x_9(xargs *x) const {
	// underline()
	bool xret = this->QFontInfo::underline();
	x[0].x_bool = (bool)xret;
    }
    void x_10(xargs *x) const {
	// strikeOut()
	bool xret = this->QFontInfo::strikeOut();
	x[0].x_bool = (bool)xret;
    }
    void x_11(xargs *x) const {
	// fixedPitch()
	bool xret = this->QFontInfo::fixedPitch();
	x[0].x_bool = (bool)xret;
    }
    void x_12(xargs *x) const {
	// styleHint()
	QFont::StyleHint xret = this->QFontInfo::styleHint();
	x[0].x_long = (long)xret;
    }
    void x_13(xargs *x) const {
	// rawMode()
	bool xret = this->QFontInfo::rawMode();
	x[0].x_bool = (bool)xret;
    }
    void x_14(xargs *x) const {
	// exactMatch()
	bool xret = this->QFontInfo::exactMatch();
	x[0].x_bool = (bool)xret;
    }
    ~x_QFontInfo() {}
};
void xcall_QFontInfo(xargs *x, void *s, int xi) {
    x_QFontInfo *xself = (x_QFontInfo*)s;
    switch(xi) {
	case 0: x_QFontInfo::x_0(x);	break;
	case 1: x_QFontInfo::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: delete (QFontInfo*)xself;	break;
    }
}
