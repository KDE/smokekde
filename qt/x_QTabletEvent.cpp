//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qevent.h>

class x_QTabletEvent : public QTabletEvent {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QTabletEvent::NoDevice;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QTabletEvent::Puck;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QTabletEvent::Stylus;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QTabletEvent::Eraser;
    }
    static void x_4(xargs *x) {
	// QTabletEvent(const QPoint&, int, int, int, int, const QPair<int, int>&)
	x_QTabletEvent* xret = new x_QTabletEvent(*(const QPoint *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,*(const QPair<int, int> *)x[6].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTabletEvent(const QPoint& x1, int x2, int x3, int x4, int x5, const QPair<int, int>& x6) : QTabletEvent(x1, x2, x3, x4, x5, x6) {
    }
    static void x_5(xargs *x) {
	// QTabletEvent(const QPoint&, const QPoint&, int, int, int, int, const QPair<int, int>&)
	x_QTabletEvent* xret = new x_QTabletEvent(*(const QPoint *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(int)x[6].x_int,*(const QPair<int, int> *)x[7].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTabletEvent(const QPoint& x1, const QPoint& x2, int x3, int x4, int x5, int x6, const QPair<int, int>& x7) : QTabletEvent(x1, x2, x3, x4, x5, x6, x7) {
    }
    void x_6(xargs *x) const {
	// pressure()
	int xret = this->QTabletEvent::pressure();
	x[0].x_int = (int)xret;
    }
    void x_7(xargs *x) const {
	// xTilt()
	int xret = this->QTabletEvent::xTilt();
	x[0].x_int = (int)xret;
    }
    void x_8(xargs *x) const {
	// yTilt()
	int xret = this->QTabletEvent::yTilt();
	x[0].x_int = (int)xret;
    }
    void x_9(xargs *x) const {
	// pos()
	const QPoint& xret = this->QTabletEvent::pos();
	x[0].x_voidp = (void*)&xret;
    }
    void x_10(xargs *x) const {
	// globalPos()
	const QPoint& xret = this->QTabletEvent::globalPos();
	x[0].x_voidp = (void*)&xret;
    }
    void x_11(xargs *x) const {
	// x()
	int xret = this->QTabletEvent::x();
	x[0].x_int = (int)xret;
    }
    void x_12(xargs *x) const {
	// y()
	int xret = this->QTabletEvent::y();
	x[0].x_int = (int)xret;
    }
    void x_13(xargs *x) const {
	// globalX()
	int xret = this->QTabletEvent::globalX();
	x[0].x_int = (int)xret;
    }
    void x_14(xargs *x) const {
	// globalY()
	int xret = this->QTabletEvent::globalY();
	x[0].x_int = (int)xret;
    }
    void x_15(xargs *x) const {
	// device()
	QTabletEvent::TabletDevice xret = this->QTabletEvent::device();
	x[0].x_long = (long)xret;
    }
    void x_16(xargs *x) const {
	// isAccepted()
	int xret = this->QTabletEvent::isAccepted();
	x[0].x_int = (int)xret;
    }
    void x_17(xargs *x) {
	// accept()
	this->QTabletEvent::accept();
    }
    void x_18(xargs *x) {
	// ignore()
	this->QTabletEvent::ignore();
    }
    void x_19(xargs *x) {
	// uniqueId()
	QPair<int,int> xret = this->QTabletEvent::uniqueId();
	x[0].x_voidp = (void*)new QPair<int,int>(xret);
    }
    ~x_QTabletEvent() {}
};
void xcall_QTabletEvent(xargs *x, void *s, int xi) {
    x_QTabletEvent *xself = (x_QTabletEvent*)s;
    switch(xi) {
	case 0: x_QTabletEvent::x_0(x);	break;
	case 1: x_QTabletEvent::x_1(x);	break;
	case 2: x_QTabletEvent::x_2(x);	break;
	case 3: x_QTabletEvent::x_3(x);	break;
	case 4: x_QTabletEvent::x_4(x);	break;
	case 5: x_QTabletEvent::x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
    }
}
