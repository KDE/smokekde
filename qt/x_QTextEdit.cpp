//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qbrush.h>
#include <qpoint.h>
#include <qfont.h>
#include <qcstring.h>
#include <qtextedit.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>
#include <qscrollbar.h>

class x_QTextEdit : public QTextEdit {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QTextEdit::NoWrap;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QTextEdit::WidgetWidth;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QTextEdit::FixedPixelWidth;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QTextEdit::FixedColumnWidth;
    }
    static void x_4(xargs *x) {
	x[0].x_long = (long)QTextEdit::AtWordBoundary;
    }
    static void x_5(xargs *x) {
	x[0].x_long = (long)QTextEdit::Anywhere;
    }
    static void x_6(xargs *x) {
	x[0].x_long = (long)QTextEdit::AtWhiteSpace;
    }
    static void x_7(xargs *x) {
	x[0].x_long = (long)QTextEdit::ActionBackspace;
    }
    static void x_8(xargs *x) {
	x[0].x_long = (long)QTextEdit::ActionDelete;
    }
    static void x_9(xargs *x) {
	x[0].x_long = (long)QTextEdit::ActionReturn;
    }
    static void x_10(xargs *x) {
	x[0].x_long = (long)QTextEdit::ActionKill;
    }
    static void x_11(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveBackward;
    }
    static void x_12(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveForward;
    }
    static void x_13(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveWordBackward;
    }
    static void x_14(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveWordForward;
    }
    static void x_15(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveUp;
    }
    static void x_16(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveDown;
    }
    static void x_17(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveLineStart;
    }
    static void x_18(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveLineEnd;
    }
    static void x_19(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveHome;
    }
    static void x_20(xargs *x) {
	x[0].x_long = (long)QTextEdit::MoveEnd;
    }
    static void x_21(xargs *x) {
	x[0].x_long = (long)QTextEdit::MovePgUp;
    }
    static void x_22(xargs *x) {
	x[0].x_long = (long)QTextEdit::MovePgDown;
    }
    static void x_23(xargs *x) {
	x[0].x_long = (long)QTextEdit::AlignNormal;
    }
    static void x_24(xargs *x) {
	x[0].x_long = (long)QTextEdit::AlignSuperScript;
    }
    static void x_25(xargs *x) {
	x[0].x_long = (long)QTextEdit::AlignSubScript;
    }
    static void x_26(xargs *x) {
	// QTextEdit(const QString&, const QString&, QWidget*, const char*)
	x_QTextEdit* xret = new x_QTextEdit(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp,(QWidget*)x[3].x_voidp,(const char*)x[4].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(const QString& x1, const QString& x2, QWidget* x3, const char* x4) : QTextEdit(x1, x2, x3, x4) {
    }
    static void x_27(xargs *x) {
	// QTextEdit(const QString&, const QString&, QWidget*)
	x_QTextEdit* xret = new x_QTextEdit(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp,(QWidget*)x[3].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(const QString& x1, const QString& x2, QWidget* x3) : QTextEdit(x1, x2, x3) {
    }
    static void x_28(xargs *x) {
	// QTextEdit(const QString&, const QString&)
	x_QTextEdit* xret = new x_QTextEdit(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(const QString& x1, const QString& x2) : QTextEdit(x1, x2) {
    }
    static void x_29(xargs *x) {
	// QTextEdit(const QString&)
	x_QTextEdit* xret = new x_QTextEdit(*(const QString *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(const QString& x1) : QTextEdit(x1) {
    }
    static void x_30(xargs *x) {
	// QTextEdit(QWidget*, const char*)
	x_QTextEdit* xret = new x_QTextEdit((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(QWidget* x1, const char* x2) : QTextEdit(x1, x2) {
    }
    static void x_31(xargs *x) {
	// QTextEdit(QWidget*)
	x_QTextEdit* xret = new x_QTextEdit((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit(QWidget* x1) : QTextEdit(x1) {
    }
    static void x_32(xargs *x) {
	// QTextEdit()
	x_QTextEdit* xret = new x_QTextEdit();
	x[0].x_voidp = (void*)xret;
    }
    x_QTextEdit() : QTextEdit() {
    }
    void x_33(xargs *x) {
	// setPalette(const QPalette&)
	this->QTextEdit::setPalette(*(const QPalette *)x[1].x_voidp);
    }
    void x_34(xargs *x) const {
	// text()
	QString xret = this->QTextEdit::text();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_35(xargs *x) const {
	// text(int)
	QString xret = this->QTextEdit::text((int)x[1].x_int);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_36(xargs *x) const {
	// textFormat()
	Qt::TextFormat xret = this->QTextEdit::textFormat();
	x[0].x_long = (long)xret;
    }
    void x_37(xargs *x) const {
	// context()
	QString xret = this->QTextEdit::context();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_38(xargs *x) const {
	// documentTitle()
	QString xret = this->QTextEdit::documentTitle();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_39(xargs *x) const {
	// getSelection(int*, int*, int*, int*, int)
	this->QTextEdit::getSelection((int*)x[1].x_voidp,(int*)x[2].x_voidp,(int*)x[3].x_voidp,(int*)x[4].x_voidp,(int)x[5].x_int);
    }
    void x_40(xargs *x) const {
	// getSelection(int*, int*, int*, int*)
	this->QTextEdit::getSelection((int*)x[1].x_voidp,(int*)x[2].x_voidp,(int*)x[3].x_voidp,(int*)x[4].x_voidp);
    }
    void x_41(xargs *x) {
	// find(const QString&, bool, bool, bool, int*, int*)
	bool xret = this->QTextEdit::find(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool,(bool)x[4].x_bool,(int*)x[5].x_voidp,(int*)x[6].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_42(xargs *x) {
	// find(const QString&, bool, bool, bool, int*)
	bool xret = this->QTextEdit::find(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool,(bool)x[4].x_bool,(int*)x[5].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_43(xargs *x) {
	// find(const QString&, bool, bool, bool)
	bool xret = this->QTextEdit::find(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool,(bool)x[4].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_44(xargs *x) {
	// find(const QString&, bool, bool)
	bool xret = this->QTextEdit::find(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_45(xargs *x) const {
	// paragraphs()
	int xret = this->QTextEdit::paragraphs();
	x[0].x_int = (int)xret;
    }
    void x_46(xargs *x) const {
	// lines()
	int xret = this->QTextEdit::lines();
	x[0].x_int = (int)xret;
    }
    void x_47(xargs *x) const {
	// linesOfParagraph(int)
	int xret = this->QTextEdit::linesOfParagraph((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_48(xargs *x) {
	// lineOfChar(int, int)
	int xret = this->QTextEdit::lineOfChar((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_int = (int)xret;
    }
    void x_49(xargs *x) const {
	// length()
	int xret = this->QTextEdit::length();
	x[0].x_int = (int)xret;
    }
    void x_50(xargs *x) const {
	// paragraphRect(int)
	QRect xret = this->QTextEdit::paragraphRect((int)x[1].x_int);
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_51(xargs *x) const {
	// paragraphAt(const QPoint&)
	int xret = this->QTextEdit::paragraphAt(*(const QPoint *)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_52(xargs *x) const {
	// charAt(const QPoint&, int*)
	int xret = this->QTextEdit::charAt(*(const QPoint *)x[1].x_voidp,(int*)x[2].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_53(xargs *x) const {
	// paragraphLength(int)
	int xret = this->QTextEdit::paragraphLength((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_54(xargs *x) const {
	// styleSheet()
	QStyleSheet* xret = this->QTextEdit::styleSheet();
	x[0].x_voidp = (void*)xret;
    }
    void x_55(xargs *x) const {
	// mimeSourceFactory()
	QMimeSourceFactory* xret = this->QTextEdit::mimeSourceFactory();
	x[0].x_voidp = (void*)xret;
    }
    void x_56(xargs *x) const {
	// paper()
	QBrush xret = this->QTextEdit::paper();
	x[0].x_voidp = (void*)new QBrush(xret);
    }
    void x_57(xargs *x) const {
	// linkUnderline()
	bool xret = this->QTextEdit::linkUnderline();
	x[0].x_bool = (bool)xret;
    }
    void x_58(xargs *x) const {
	// heightForWidth(int)
	int xret = this->QTextEdit::heightForWidth((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_59(xargs *x) const {
	// hasSelectedText()
	bool xret = this->QTextEdit::hasSelectedText();
	x[0].x_bool = (bool)xret;
    }
    void x_60(xargs *x) const {
	// selectedText()
	QString xret = this->QTextEdit::selectedText();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_61(xargs *x) const {
	// isUndoAvailable()
	bool xret = this->QTextEdit::isUndoAvailable();
	x[0].x_bool = (bool)xret;
    }
    void x_62(xargs *x) const {
	// isRedoAvailable()
	bool xret = this->QTextEdit::isRedoAvailable();
	x[0].x_bool = (bool)xret;
    }
    void x_63(xargs *x) const {
	// wordWrap()
	QTextEdit::WordWrap xret = this->QTextEdit::wordWrap();
	x[0].x_long = (long)xret;
    }
    void x_64(xargs *x) const {
	// wrapColumnOrWidth()
	int xret = this->QTextEdit::wrapColumnOrWidth();
	x[0].x_int = (int)xret;
    }
    void x_65(xargs *x) const {
	// wrapPolicy()
	QTextEdit::WrapPolicy xret = this->QTextEdit::wrapPolicy();
	x[0].x_long = (long)xret;
    }
    void x_66(xargs *x) const {
	// tabStopWidth()
	int xret = this->QTextEdit::tabStopWidth();
	x[0].x_int = (int)xret;
    }
    void x_67(xargs *x) {
	// anchorAt(const QPoint&)
	QString xret = this->QTextEdit::anchorAt(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_68(xargs *x) const {
	// sizeHint()
	QSize xret = this->QTextEdit::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_69(xargs *x) const {
	// isReadOnly()
	bool xret = this->QTextEdit::isReadOnly();
	x[0].x_bool = (bool)xret;
    }
    void x_70(xargs *x) const {
	// getCursorPosition(int*, int*)
	this->QTextEdit::getCursorPosition((int*)x[1].x_voidp,(int*)x[2].x_voidp);
    }
    void x_71(xargs *x) const {
	// isModified()
	bool xret = this->QTextEdit::isModified();
	x[0].x_bool = (bool)xret;
    }
    void x_72(xargs *x) const {
	// italic()
	bool xret = this->QTextEdit::italic();
	x[0].x_bool = (bool)xret;
    }
    void x_73(xargs *x) const {
	// bold()
	bool xret = this->QTextEdit::bold();
	x[0].x_bool = (bool)xret;
    }
    void x_74(xargs *x) const {
	// underline()
	bool xret = this->QTextEdit::underline();
	x[0].x_bool = (bool)xret;
    }
    void x_75(xargs *x) const {
	// family()
	QString xret = this->QTextEdit::family();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_76(xargs *x) const {
	// pointSize()
	int xret = this->QTextEdit::pointSize();
	x[0].x_int = (int)xret;
    }
    void x_77(xargs *x) const {
	// color()
	QColor xret = this->QTextEdit::color();
	x[0].x_voidp = (void*)new QColor(xret);
    }
    void x_78(xargs *x) const {
	// font()
	QFont xret = this->QTextEdit::font();
	x[0].x_voidp = (void*)new QFont(xret);
    }
    void x_79(xargs *x) const {
	// alignment()
	int xret = this->QTextEdit::alignment();
	x[0].x_int = (int)xret;
    }
    void x_80(xargs *x) const {
	// undoDepth()
	int xret = this->QTextEdit::undoDepth();
	x[0].x_int = (int)xret;
    }
    void x_81(xargs *x) {
	// getFormat(int, int, QFont*, QColor*, QTextEdit::VerticalAlignment*)
	bool xret = this->QTextEdit::getFormat((int)x[1].x_int,(int)x[2].x_int,(QFont*)x[3].x_voidp,(QColor*)x[4].x_voidp,(QTextEdit::VerticalAlignment*)x[5].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_82(xargs *x) {
	// getParagraphFormat(int, QFont*, QColor*, QTextEdit::VerticalAlignment*, int*, QStyleSheetItem::DisplayMode*, QStyleSheetItem::ListStyle*, int*)
	bool xret = this->QTextEdit::getParagraphFormat((int)x[1].x_int,(QFont*)x[2].x_voidp,(QColor*)x[3].x_voidp,(QTextEdit::VerticalAlignment*)x[4].x_voidp,(int*)x[5].x_voidp,(QStyleSheetItem::DisplayMode*)x[6].x_voidp,(QStyleSheetItem::ListStyle*)x[7].x_voidp,(int*)x[8].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_83(xargs *x) const {
	// isOverwriteMode()
	bool xret = this->QTextEdit::isOverwriteMode();
	x[0].x_bool = (bool)xret;
    }
    void x_84(xargs *x) const {
	// paragraphBackgroundColor(int)
	QColor xret = this->QTextEdit::paragraphBackgroundColor((int)x[1].x_int);
	x[0].x_voidp = (void*)new QColor(xret);
    }
    void x_85(xargs *x) const {
	// isUndoRedoEnabled()
	bool xret = this->QTextEdit::isUndoRedoEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_86(xargs *x) {
	// eventFilter(QObject*, QEvent*)
	bool xret = this->QTextEdit::eventFilter((QObject*)x[1].x_voidp,(QEvent*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_87(xargs *x) {
	// setEnabled(bool)
	this->QTextEdit::setEnabled((bool)x[1].x_bool);
    }
    void x_88(xargs *x) {
	// setMimeSourceFactory(QMimeSourceFactory*)
	this->QTextEdit::setMimeSourceFactory((QMimeSourceFactory*)x[1].x_voidp);
    }
    void x_89(xargs *x) {
	// setStyleSheet(QStyleSheet*)
	this->QTextEdit::setStyleSheet((QStyleSheet*)x[1].x_voidp);
    }
    void x_90(xargs *x) {
	// scrollToAnchor(const QString&)
	this->QTextEdit::scrollToAnchor(*(const QString *)x[1].x_voidp);
    }
    void x_91(xargs *x) {
	// setPaper(const QBrush&)
	this->QTextEdit::setPaper(*(const QBrush *)x[1].x_voidp);
    }
    void x_92(xargs *x) {
	// setLinkUnderline(bool)
	this->QTextEdit::setLinkUnderline((bool)x[1].x_bool);
    }
    void x_93(xargs *x) {
	// setWordWrap(QTextEdit::WordWrap)
	this->QTextEdit::setWordWrap((QTextEdit::WordWrap)x[1].x_long);
    }
    void x_94(xargs *x) {
	// setWrapColumnOrWidth(int)
	this->QTextEdit::setWrapColumnOrWidth((int)x[1].x_int);
    }
    void x_95(xargs *x) {
	// setWrapPolicy(QTextEdit::WrapPolicy)
	this->QTextEdit::setWrapPolicy((QTextEdit::WrapPolicy)x[1].x_long);
    }
    void x_96(xargs *x) {
	// copy()
	this->QTextEdit::copy();
    }
    void x_97(xargs *x) {
	// append(const QString&)
	this->QTextEdit::append(*(const QString *)x[1].x_voidp);
    }
    void x_98(xargs *x) {
	// setText(const QString&)
	this->QTextEdit::setText(*(const QString *)x[1].x_voidp);
    }
    void x_99(xargs *x) {
	// setText(const QString&, const QString&)
	this->QTextEdit::setText(*(const QString *)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    void x_100(xargs *x) {
	// setTextFormat(Qt::TextFormat)
	this->QTextEdit::setTextFormat((Qt::TextFormat)x[1].x_long);
    }
    void x_101(xargs *x) {
	// selectAll(bool)
	this->QTextEdit::selectAll((bool)x[1].x_bool);
    }
    void x_102(xargs *x) {
	// selectAll()
	this->QTextEdit::selectAll();
    }
    void x_103(xargs *x) {
	// setTabStopWidth(int)
	this->QTextEdit::setTabStopWidth((int)x[1].x_int);
    }
    void x_104(xargs *x) {
	// zoomIn(int)
	this->QTextEdit::zoomIn((int)x[1].x_int);
    }
    void x_105(xargs *x) {
	// zoomIn()
	this->QTextEdit::zoomIn();
    }
    void x_106(xargs *x) {
	// zoomOut(int)
	this->QTextEdit::zoomOut((int)x[1].x_int);
    }
    void x_107(xargs *x) {
	// zoomOut()
	this->QTextEdit::zoomOut();
    }
    void x_108(xargs *x) {
	// zoomTo(int)
	this->QTextEdit::zoomTo((int)x[1].x_int);
    }
    void x_109(xargs *x) {
	// sync()
	this->QTextEdit::sync();
    }
    void x_110(xargs *x) {
	// setReadOnly(bool)
	this->QTextEdit::setReadOnly((bool)x[1].x_bool);
    }
    void x_111(xargs *x) {
	// undo()
	this->QTextEdit::undo();
    }
    void x_112(xargs *x) {
	// redo()
	this->QTextEdit::redo();
    }
    void x_113(xargs *x) {
	// cut()
	this->QTextEdit::cut();
    }
    void x_114(xargs *x) {
	// paste()
	this->QTextEdit::paste();
    }
    void x_115(xargs *x) {
	// pasteSubType(const QCString&)
	this->QTextEdit::pasteSubType(*(const QCString *)x[1].x_voidp);
    }
    void x_116(xargs *x) {
	// clear()
	this->QTextEdit::clear();
    }
    void x_117(xargs *x) {
	// del()
	this->QTextEdit::del();
    }
    void x_118(xargs *x) {
	// indent()
	this->QTextEdit::indent();
    }
    void x_119(xargs *x) {
	// setItalic(bool)
	this->QTextEdit::setItalic((bool)x[1].x_bool);
    }
    void x_120(xargs *x) {
	// setBold(bool)
	this->QTextEdit::setBold((bool)x[1].x_bool);
    }
    void x_121(xargs *x) {
	// setUnderline(bool)
	this->QTextEdit::setUnderline((bool)x[1].x_bool);
    }
    void x_122(xargs *x) {
	// setFamily(const QString&)
	this->QTextEdit::setFamily(*(const QString *)x[1].x_voidp);
    }
    void x_123(xargs *x) {
	// setPointSize(int)
	this->QTextEdit::setPointSize((int)x[1].x_int);
    }
    void x_124(xargs *x) {
	// setColor(const QColor&)
	this->QTextEdit::setColor(*(const QColor *)x[1].x_voidp);
    }
    void x_125(xargs *x) {
	// setFont(const QFont&)
	this->QTextEdit::setFont(*(const QFont *)x[1].x_voidp);
    }
    void x_126(xargs *x) {
	// setVerticalAlignment(QTextEdit::VerticalAlignment)
	this->QTextEdit::setVerticalAlignment((QTextEdit::VerticalAlignment)x[1].x_long);
    }
    void x_127(xargs *x) {
	// setAlignment(int)
	this->QTextEdit::setAlignment((int)x[1].x_int);
    }
    void x_128(xargs *x) {
	// setParagType(QStyleSheetItem::DisplayMode, QStyleSheetItem::ListStyle)
	this->QTextEdit::setParagType((QStyleSheetItem::DisplayMode)x[1].x_long,(QStyleSheetItem::ListStyle)x[2].x_long);
    }
    void x_129(xargs *x) {
	// setCursorPosition(int, int)
	this->QTextEdit::setCursorPosition((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_130(xargs *x) {
	// setSelection(int, int, int, int, int)
	this->QTextEdit::setSelection((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_131(xargs *x) {
	// setSelection(int, int, int, int)
	this->QTextEdit::setSelection((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_132(xargs *x) {
	// setSelectionAttributes(int, const QColor&, bool)
	this->QTextEdit::setSelectionAttributes((int)x[1].x_int,*(const QColor *)x[2].x_voidp,(bool)x[3].x_bool);
    }
    void x_133(xargs *x) {
	// setModified(bool)
	this->QTextEdit::setModified((bool)x[1].x_bool);
    }
    void x_134(xargs *x) {
	// resetFormat()
	this->QTextEdit::resetFormat();
    }
    void x_135(xargs *x) {
	// setUndoDepth(int)
	this->QTextEdit::setUndoDepth((int)x[1].x_int);
    }
    void x_136(xargs *x) {
	// setFormat(QTextFormat*, int)
	this->QTextEdit::setFormat((QTextFormat*)x[1].x_voidp,(int)x[2].x_int);
    }
    void x_137(xargs *x) {
	// ensureCursorVisible()
	this->QTextEdit::ensureCursorVisible();
    }
    void x_138(xargs *x) {
	// placeCursor(const QPoint&, QTextCursor*)
	this->QTextEdit::placeCursor(*(const QPoint *)x[1].x_voidp,(QTextCursor*)x[2].x_voidp);
    }
    void x_139(xargs *x) {
	// placeCursor(const QPoint&)
	this->QTextEdit::placeCursor(*(const QPoint *)x[1].x_voidp);
    }
    void x_140(xargs *x) {
	// moveCursor(QTextEdit::CursorAction, bool)
	this->QTextEdit::moveCursor((QTextEdit::CursorAction)x[1].x_long,(bool)x[2].x_bool);
    }
    void x_141(xargs *x) {
	// doKeyboardAction(QTextEdit::KeyboardAction)
	this->QTextEdit::doKeyboardAction((QTextEdit::KeyboardAction)x[1].x_long);
    }
    void x_142(xargs *x) {
	// removeSelectedText(int)
	this->QTextEdit::removeSelectedText((int)x[1].x_int);
    }
    void x_143(xargs *x) {
	// removeSelectedText()
	this->QTextEdit::removeSelectedText();
    }
    void x_144(xargs *x) {
	// removeSelection(int)
	this->QTextEdit::removeSelection((int)x[1].x_int);
    }
    void x_145(xargs *x) {
	// removeSelection()
	this->QTextEdit::removeSelection();
    }
    void x_146(xargs *x) {
	// setCurrentFont(const QFont&)
	this->QTextEdit::setCurrentFont(*(const QFont *)x[1].x_voidp);
    }
    void x_147(xargs *x) {
	// setOverwriteMode(bool)
	this->QTextEdit::setOverwriteMode((bool)x[1].x_bool);
    }
    void x_148(xargs *x) {
	// scrollToBottom()
	this->QTextEdit::scrollToBottom();
    }
    void x_149(xargs *x) {
	// insert(const QString&, bool, bool, bool)
	this->QTextEdit::insert(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool,(bool)x[4].x_bool);
    }
    void x_150(xargs *x) {
	// insert(const QString&, bool, bool)
	this->QTextEdit::insert(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool);
    }
    void x_151(xargs *x) {
	// insert(const QString&, bool)
	this->QTextEdit::insert(*(const QString *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_152(xargs *x) {
	// insert(const QString&)
	this->QTextEdit::insert(*(const QString *)x[1].x_voidp);
    }
    void x_153(xargs *x) {
	// insertAt(const QString&, int, int)
	this->QTextEdit::insertAt(*(const QString *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_154(xargs *x) {
	// removeParagraph(int)
	this->QTextEdit::removeParagraph((int)x[1].x_int);
    }
    void x_155(xargs *x) {
	// insertParagraph(const QString&, int)
	this->QTextEdit::insertParagraph(*(const QString *)x[1].x_voidp,(int)x[2].x_int);
    }
    void x_156(xargs *x) {
	// setParagraphBackgroundColor(int, const QColor&)
	this->QTextEdit::setParagraphBackgroundColor((int)x[1].x_int,*(const QColor *)x[2].x_voidp);
    }
    void x_157(xargs *x) {
	// clearParagraphBackground(int)
	this->QTextEdit::clearParagraphBackground((int)x[1].x_int);
    }
    void x_158(xargs *x) {
	// setUndoRedoEnabled(bool)
	this->QTextEdit::setUndoRedoEnabled((bool)x[1].x_bool);
    }
    void x_159(xargs *x) {
	// textChanged()
	this->QTextEdit::textChanged();
    }
    void x_160(xargs *x) {
	// selectionChanged()
	this->QTextEdit::selectionChanged();
    }
    void x_161(xargs *x) {
	// copyAvailable(bool)
	this->QTextEdit::copyAvailable((bool)x[1].x_bool);
    }
    void x_162(xargs *x) {
	// undoAvailable(bool)
	this->QTextEdit::undoAvailable((bool)x[1].x_bool);
    }
    void x_163(xargs *x) {
	// redoAvailable(bool)
	this->QTextEdit::redoAvailable((bool)x[1].x_bool);
    }
    void x_164(xargs *x) {
	// currentFontChanged(const QFont&)
	this->QTextEdit::currentFontChanged(*(const QFont *)x[1].x_voidp);
    }
    void x_165(xargs *x) {
	// currentColorChanged(const QColor&)
	this->QTextEdit::currentColorChanged(*(const QColor *)x[1].x_voidp);
    }
    void x_166(xargs *x) {
	// currentAlignmentChanged(int)
	this->QTextEdit::currentAlignmentChanged((int)x[1].x_int);
    }
    void x_167(xargs *x) {
	// currentVerticalAlignmentChanged(QTextEdit::VerticalAlignment)
	this->QTextEdit::currentVerticalAlignmentChanged((QTextEdit::VerticalAlignment)x[1].x_long);
    }
    void x_168(xargs *x) {
	// cursorPositionChanged(QTextCursor*)
	this->QTextEdit::cursorPositionChanged((QTextCursor*)x[1].x_voidp);
    }
    void x_169(xargs *x) {
	// cursorPositionChanged(int, int)
	this->QTextEdit::cursorPositionChanged((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_170(xargs *x) {
	// returnPressed()
	this->QTextEdit::returnPressed();
    }
    void x_171(xargs *x) {
	// modificationChanged(bool)
	this->QTextEdit::modificationChanged((bool)x[1].x_bool);
    }
    void x_172(xargs *x) {
	// repaintChanged()
	this->QTextEdit::repaintChanged();
    }
    void x_173(xargs *x) {
	// updateStyles()
	this->QTextEdit::updateStyles();
    }
    void x_174(xargs *x) {
	// drawContents(QPainter*, int, int, int, int)
	this->QTextEdit::drawContents((QPainter*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_175(xargs *x) {
	// event(QEvent*)
	bool xret = this->QTextEdit::event((QEvent*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_176(xargs *x) {
	// keyPressEvent(QKeyEvent*)
	this->QTextEdit::keyPressEvent((QKeyEvent*)x[1].x_voidp);
    }
    void x_177(xargs *x) {
	// resizeEvent(QResizeEvent*)
	this->QTextEdit::resizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_178(xargs *x) {
	// viewportResizeEvent(QResizeEvent*)
	this->QTextEdit::viewportResizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_179(xargs *x) {
	// contentsMousePressEvent(QMouseEvent*)
	this->QTextEdit::contentsMousePressEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_180(xargs *x) {
	// contentsMouseMoveEvent(QMouseEvent*)
	this->QTextEdit::contentsMouseMoveEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_181(xargs *x) {
	// contentsMouseReleaseEvent(QMouseEvent*)
	this->QTextEdit::contentsMouseReleaseEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_182(xargs *x) {
	// contentsMouseDoubleClickEvent(QMouseEvent*)
	this->QTextEdit::contentsMouseDoubleClickEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_183(xargs *x) {
	// contentsWheelEvent(QWheelEvent*)
	this->QTextEdit::contentsWheelEvent((QWheelEvent*)x[1].x_voidp);
    }
    void x_184(xargs *x) {
	// imStartEvent(QIMEvent*)
	this->QTextEdit::imStartEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_185(xargs *x) {
	// imComposeEvent(QIMEvent*)
	this->QTextEdit::imComposeEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_186(xargs *x) {
	// imEndEvent(QIMEvent*)
	this->QTextEdit::imEndEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_187(xargs *x) {
	// contentsDragEnterEvent(QDragEnterEvent*)
	this->QTextEdit::contentsDragEnterEvent((QDragEnterEvent*)x[1].x_voidp);
    }
    void x_188(xargs *x) {
	// contentsDragMoveEvent(QDragMoveEvent*)
	this->QTextEdit::contentsDragMoveEvent((QDragMoveEvent*)x[1].x_voidp);
    }
    void x_189(xargs *x) {
	// contentsDragLeaveEvent(QDragLeaveEvent*)
	this->QTextEdit::contentsDragLeaveEvent((QDragLeaveEvent*)x[1].x_voidp);
    }
    void x_190(xargs *x) {
	// contentsDropEvent(QDropEvent*)
	this->QTextEdit::contentsDropEvent((QDropEvent*)x[1].x_voidp);
    }
    void x_191(xargs *x) {
	// contentsContextMenuEvent(QContextMenuEvent*)
	this->QTextEdit::contentsContextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_192(xargs *x) {
	// focusNextPrevChild(bool)
	bool xret = this->QTextEdit::focusNextPrevChild((bool)x[1].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_193(xargs *x) const {
	// document()
	QTextDocument* xret = this->QTextEdit::document();
	x[0].x_voidp = (void*)xret;
    }
    void x_194(xargs *x) const {
	// textCursor()
	QTextCursor* xret = this->QTextEdit::textCursor();
	x[0].x_voidp = (void*)xret;
    }
    void x_195(xargs *x) {
	// setDocument(QTextDocument*)
	this->QTextEdit::setDocument((QTextDocument*)x[1].x_voidp);
    }
    void x_196(xargs *x) {
	// createPopupMenu(const QPoint&)
	QPopupMenu* xret = this->QTextEdit::createPopupMenu(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    void x_197(xargs *x) {
	// createPopupMenu()
	QPopupMenu* xret = this->QTextEdit::createPopupMenu();
	x[0].x_voidp = (void*)xret;
    }
    void x_198(xargs *x) {
	// drawCursor(bool)
	this->QTextEdit::drawCursor((bool)x[1].x_bool);
    }
    void x_199(xargs *x) {
	// windowActivationChange(bool)
	this->QTextEdit::windowActivationChange((bool)x[1].x_bool);
    }
    void x_200(xargs *x) {
	// doChangeInterval()
	this->QTextEdit::doChangeInterval();
    }
    virtual void addChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6590, x)) return;
	this->QScrollView::addChild(x1, x2, x3);
    }
    virtual void adjustSize() {
	xargs x[1];
	if(call_method((void*)this, 9618, x)) return;
	this->QWidget::adjustSize();
    }
    virtual void append(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8609, x)) return;
	this->QTextEdit::append(x1);
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void clear() {
	xargs x[1];
	if(call_method((void*)this, 8628, x)) return;
	this->QTextEdit::clear();
    }
    virtual void clearParagraphBackground(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8669, x)) return;
	this->QTextEdit::clearParagraphBackground(x1);
    }
    virtual bool close(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9605, x)) return (bool)x[0].x_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5558, x)) return (bool)x[0].x_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contentsContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8703, x)) return;
	this->QTextEdit::contentsContextMenuEvent(x1);
    }
    virtual void contentsDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8699, x)) return;
	this->QTextEdit::contentsDragEnterEvent(x1);
    }
    virtual void contentsDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8701, x)) return;
	this->QTextEdit::contentsDragLeaveEvent(x1);
    }
    virtual void contentsDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8700, x)) return;
	this->QTextEdit::contentsDragMoveEvent(x1);
    }
    virtual void contentsDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8702, x)) return;
	this->QTextEdit::contentsDropEvent(x1);
    }
    virtual void contentsMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8694, x)) return;
	this->QTextEdit::contentsMouseDoubleClickEvent(x1);
    }
    virtual void contentsMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8692, x)) return;
	this->QTextEdit::contentsMouseMoveEvent(x1);
    }
    virtual void contentsMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8691, x)) return;
	this->QTextEdit::contentsMousePressEvent(x1);
    }
    virtual void contentsMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8693, x)) return;
	this->QTextEdit::contentsMouseReleaseEvent(x1);
    }
    virtual void contentsWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8695, x)) return;
	this->QTextEdit::contentsWheelEvent(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6689, x)) return;
	this->QScrollView::contextMenuEvent(x1);
    }
    virtual void copy() {
	xargs x[1];
	if(call_method((void*)this, 8608, x)) return;
	this->QTextEdit::copy();
    }
    virtual void create(WId x1, bool x2, bool x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 9733, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual QPopupMenu* createPopupMenu() {
	xargs x[1];
	if(call_method((void*)this, 8709, x)) 	return (QPopupMenu*)x[0].x_voidp;
	return this->QTextEdit::createPopupMenu();
    }
    virtual QPopupMenu* createPopupMenu(const QPoint& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8708, x)) 	return (QPopupMenu*)x[0].x_voidp;
	return this->QTextEdit::createPopupMenu(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	xargs x[1];
	if(call_method((void*)this, 9643, x)) return (bool)x[0].x_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void cut() {
	xargs x[1];
	if(call_method((void*)this, 8625, x)) return;
	this->QTextEdit::cut();
    }
    virtual void del() {
	xargs x[1];
	if(call_method((void*)this, 8629, x)) return;
	this->QTextEdit::del();
    }
    virtual void destroy(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 9737, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void doChangeInterval() {
	xargs x[1];
	if(call_method((void*)this, 8712, x)) return;
	this->QTextEdit::doChangeInterval();
    }
    virtual void doKeyboardAction(QTextEdit::KeyboardAction x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8653, x)) return;
	this->QTextEdit::doKeyboardAction(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9721, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void drawContents(QPainter* x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 8686, x)) return;
	this->QTextEdit::drawContents(x1, x2, x3, x4, x5);
    }
    virtual void drawContentsOffset(QPainter* x1, int x2, int x3, int x4, int x5, int x6, int x7) {
	xargs x[8];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	x[6].x_int = (int)x6;
	x[7].x_int = (int)x7;
	if(call_method((void*)this, 6651, x)) return;
	this->QScrollView::drawContentsOffset(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual void drawFrame(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2946, x)) return;
	this->QFrame::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9722, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9727, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void ensureCursorVisible() {
	xargs x[1];
	if(call_method((void*)this, 8649, x)) return;
	this->QTextEdit::ensureCursorVisible();
    }
    virtual void enterEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8687, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 8598, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::eventFilter(x1, x2);
    }
    virtual bool find(const QString& x1, bool x2, bool x3, bool x4, int* x5, int* x6) {
	xargs x[7];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	x[4].x_bool = (bool)x4;
	x[5].x_voidp = (void*)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 8553, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::find(x1, x2, x3, x4, x5, x6);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8704, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9729, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	xargs x[1];
	if(call_method((void*)this, 6674, x)) return;
	this->QScrollView::frameChanged();
    }
    virtual bool getFormat(int x1, int x2, QFont* x3, QColor* x4, QTextEdit::VerticalAlignment* x5) {
	xargs x[6];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_voidp = (void*)x4;
	x[5].x_voidp = (void*)x5;
	if(call_method((void*)this, 8593, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::getFormat(x1, x2, x3, x4, x5);
    }
    virtual bool getParagraphFormat(int x1, QFont* x2, QColor* x3, QTextEdit::VerticalAlignment* x4, int* x5, QStyleSheetItem::DisplayMode* x6, QStyleSheetItem::ListStyle* x7, int* x8) {
	xargs x[9];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_voidp = (void*)x4;
	x[5].x_voidp = (void*)x5;
	x[6].x_voidp = (void*)x6;
	x[7].x_voidp = (void*)x7;
	x[8].x_voidp = (void*)x8;
	if(call_method((void*)this, 8594, x)) return (bool)x[0].x_bool;
	return this->QTextEdit::getParagraphFormat(x1, x2, x3, x4, x5, x6, x7, x8);
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8570, x)) return (int)x[0].x_int;
	return this->QTextEdit::heightForWidth(x1);
    }
    virtual void hide() {
	xargs x[1];
	if(call_method((void*)this, 9675, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8697, x)) return;
	this->QTextEdit::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8698, x)) return;
	this->QTextEdit::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8696, x)) return;
	this->QTextEdit::imStartEvent(x1);
    }
    virtual void indent() {
	xargs x[1];
	if(call_method((void*)this, 8630, x)) return;
	this->QTextEdit::indent();
    }
    virtual void insert(const QString& x1, bool x2, bool x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 8661, x)) return;
	this->QTextEdit::insert(x1, x2, x3, x4);
    }
    virtual void insertAt(const QString& x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 8665, x)) return;
	this->QTextEdit::insertAt(x1, x2, x3);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void insertParagraph(const QString& x1, int x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8667, x)) return;
	this->QTextEdit::insertParagraph(x1, x2);
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8688, x)) return;
	this->QTextEdit::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9705, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9731, x)) return (int)x[0].x_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 6636, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QScrollView::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6686, x)) return;
	this->QScrollView::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6687, x)) return;
	this->QScrollView::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6684, x)) return;
	this->QScrollView::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6685, x)) return;
	this->QScrollView::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9687, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6593, x)) return;
	this->QScrollView::moveChild(x1, x2, x3);
    }
    virtual void moveCursor(QTextEdit::CursorAction x1, bool x2) {
	xargs x[3];
	x[1].x_long = (long)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 8652, x)) return;
	this->QTextEdit::moveCursor(x1, x2);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2944, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void paste() {
	xargs x[1];
	if(call_method((void*)this, 8626, x)) return;
	this->QTextEdit::paste();
    }
    virtual void pasteSubType(const QCString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8627, x)) return;
	this->QTextEdit::pasteSubType(x1);
    }
    virtual void placeCursor(const QPoint& x1, QTextCursor* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 8650, x)) return;
	this->QTextEdit::placeCursor(x1, x2);
    }
    virtual void polish() {
	xargs x[1];
	if(call_method((void*)this, 9681, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void redo() {
	xargs x[1];
	if(call_method((void*)this, 8624, x)) return;
	this->QTextEdit::redo();
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6637, x)) return;
	this->QScrollView::removeChild(x1);
    }
    virtual void removeParagraph(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8666, x)) return;
	this->QTextEdit::removeParagraph(x1);
    }
    virtual void removeSelectedText(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8654, x)) return;
	this->QTextEdit::removeSelectedText(x1);
    }
    virtual void removeSelection(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8656, x)) return;
	this->QTextEdit::removeSelection(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_voidp = (void*)&x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 9621, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resetFormat() {
	xargs x[1];
	if(call_method((void*)this, 8646, x)) return;
	this->QTextEdit::resetFormat();
    }
    virtual void resize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6615, x)) return;
	this->QScrollView::resize(x1, x2);
    }
    virtual void resizeContents(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6640, x)) return;
	this->QScrollView::resizeContents(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8689, x)) return;
	this->QTextEdit::resizeEvent(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void scrollToAnchor(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8602, x)) return;
	this->QTextEdit::scrollToAnchor(x1);
    }
    virtual void scrollToBottom() {
	xargs x[1];
	if(call_method((void*)this, 8660, x)) return;
	this->QTextEdit::scrollToBottom();
    }
    virtual void selectAll(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8613, x)) return;
	this->QTextEdit::selectAll(x1);
    }
    virtual void setAcceptDrops(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9638, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	xargs x[1];
	if(call_method((void*)this, 9592, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAlignment(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8639, x)) return;
	this->QTextEdit::setAlignment(x1);
    }
    virtual void setAutoMask(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9639, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9550, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9641, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9590, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setBold(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8632, x)) return;
	this->QTextEdit::setBold(x1);
    }
    virtual void setCaption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9656, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8636, x)) return;
	this->QTextEdit::setColor(x1);
    }
    virtual void setContentsPos(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6642, x)) return;
	this->QScrollView::setContentsPos(x1, x2);
    }
    virtual void setCornerWidget(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6604, x)) return;
	this->QScrollView::setCornerWidget(x1);
    }
    virtual void setCurrentFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8658, x)) return;
	this->QTextEdit::setCurrentFont(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9577, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setCursorPosition(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8641, x)) return;
	this->QTextEdit::setCursorPosition(x1, x2);
    }
    virtual void setDragAutoScroll(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6638, x)) return;
	this->QScrollView::setDragAutoScroll(x1);
    }
    virtual void setEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8599, x)) return;
	this->QTextEdit::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9554, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFamily(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8634, x)) return;
	this->QTextEdit::setFamily(x1);
    }
    virtual void setFocus() {
	xargs x[1];
	if(call_method((void*)this, 9660, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9595, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9597, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8637, x)) return;
	this->QTextEdit::setFont(x1);
    }
    virtual void setFormat(QTextFormat* x1, int x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 8648, x)) return;
	this->QTextEdit::setFormat(x1, x2);
    }
    virtual void setFrameRect(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 2943, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2927, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9692, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 9691, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6681, x)) return;
	this->QScrollView::setHBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setHScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6602, x)) return;
	this->QScrollView::setHScrollBarMode(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9657, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9658, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setItalic(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8631, x)) return;
	this->QTextEdit::setItalic(x1);
    }
    virtual void setKeyCompression(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9750, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2937, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setLinkUnderline(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8604, x)) return;
	this->QTextEdit::setLinkUnderline(x1);
    }
    virtual void setMargin(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMargins(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 6675, x)) return;
	this->QScrollView::setMargins(x1, x2, x3, x4);
    }
    virtual void setMask(const QBitmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9584, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9585, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9527, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	xargs x[7];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_bool = (bool)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 9751, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMimeSourceFactory(QMimeSourceFactory* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8600, x)) return;
	this->QTextEdit::setMimeSourceFactory(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setModified(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8645, x)) return;
	this->QTextEdit::setModified(x1);
    }
    virtual void setMouseTracking(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9659, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9494, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setOverwriteMode(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8659, x)) return;
	this->QTextEdit::setOverwriteMode(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8545, x)) return;
	this->QTextEdit::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9565, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9567, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual void setPaper(const QBrush& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 8603, x)) return;
	this->QTextEdit::setPaper(x1);
    }
    virtual void setParagType(QStyleSheetItem::DisplayMode x1, QStyleSheetItem::ListStyle x2) {
	xargs x[3];
	x[1].x_long = (long)x1;
	x[2].x_long = (long)x2;
	if(call_method((void*)this, 8640, x)) return;
	this->QTextEdit::setParagType(x1, x2);
    }
    virtual void setParagraphBackgroundColor(int x1, const QColor& x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 8668, x)) return;
	this->QTextEdit::setParagraphBackgroundColor(x1, x2);
    }
    virtual void setPointSize(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8635, x)) return;
	this->QTextEdit::setPointSize(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setReadOnly(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8622, x)) return;
	this->QTextEdit::setReadOnly(x1);
    }
    virtual void setResizePolicy(QScrollView::ResizePolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6586, x)) return;
	this->QScrollView::setResizePolicy(x1);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setSelection(int x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 8642, x)) return;
	this->QTextEdit::setSelection(x1, x2, x3, x4, x5);
    }
    virtual void setSelectionAttributes(int x1, const QColor& x2, bool x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 8644, x)) return;
	this->QTextEdit::setSelectionAttributes(x1, x2, x3);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9534, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9616, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setStyleSheet(QStyleSheet* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8601, x)) return;
	this->QTextEdit::setStyleSheet(x1);
    }
    virtual void setTabStopWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8615, x)) return;
	this->QTextEdit::setTabStopWidth(x1);
    }
    virtual void setText(const QString& x1, const QString& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)&x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 8611, x)) return;
	this->QTextEdit::setText(x1, x2);
    }
    virtual void setTextFormat(Qt::TextFormat x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8612, x)) return;
	this->QTextEdit::setTextFormat(x1);
    }
    virtual void setUnderline(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8633, x)) return;
	this->QTextEdit::setUnderline(x1);
    }
    virtual void setUndoDepth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8647, x)) return;
	this->QTextEdit::setUndoDepth(x1);
    }
    virtual void setUndoRedoEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8670, x)) return;
	this->QTextEdit::setUndoRedoEnabled(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9662, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6682, x)) return;
	this->QScrollView::setVBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setVScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6600, x)) return;
	this->QScrollView::setVScrollBarMode(x1);
    }
    virtual void setVerticalAlignment(QTextEdit::VerticalAlignment x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8638, x)) return;
	this->QTextEdit::setVerticalAlignment(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9744, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	xargs x[2];
	x[1].x_uint = (uint)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void setWordWrap(QTextEdit::WordWrap x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8605, x)) return;
	this->QTextEdit::setWordWrap(x1);
    }
    virtual void setWrapColumnOrWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8606, x)) return;
	this->QTextEdit::setWrapColumnOrWidth(x1);
    }
    virtual void setWrapPolicy(QTextEdit::WrapPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 8607, x)) return;
	this->QTextEdit::setWrapPolicy(x1);
    }
    virtual void show() {
	xargs x[1];
	if(call_method((void*)this, 6617, x)) return;
	this->QScrollView::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9723, x)) return;
	this->QWidget::showEvent(x1);
    }
    virtual void showMaximized() {
	xargs x[1];
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	xargs x[1];
	if(call_method((void*)this, 9677, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	xargs x[1];
	if(call_method((void*)this, 9680, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 8580, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QTextEdit::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	xargs x[1];
	if(call_method((void*)this, 9615, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].x_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6588, x)) return;
	this->QScrollView::styleChange(x1);
    }
    virtual void sync() {
	xargs x[1];
	if(call_method((void*)this, 8621, x)) return;
	this->QTextEdit::sync();
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void undo() {
	xargs x[1];
	if(call_method((void*)this, 8623, x)) return;
	this->QTextEdit::undo();
    }
    virtual void unsetCursor() {
	xargs x[1];
	if(call_method((void*)this, 9578, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	xargs x[1];
	if(call_method((void*)this, 9725, x)) return;
	this->QWidget::updateMask();
    }
    virtual void viewportContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6673, x)) return;
	this->QScrollView::viewportContextMenuEvent(x1);
    }
    virtual void viewportDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6668, x)) return;
	this->QScrollView::viewportDragEnterEvent(x1);
    }
    virtual void viewportDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6670, x)) return;
	this->QScrollView::viewportDragLeaveEvent(x1);
    }
    virtual void viewportDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6669, x)) return;
	this->QScrollView::viewportDragMoveEvent(x1);
    }
    virtual void viewportDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6671, x)) return;
	this->QScrollView::viewportDropEvent(x1);
    }
    virtual void viewportMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6666, x)) return;
	this->QScrollView::viewportMouseDoubleClickEvent(x1);
    }
    virtual void viewportMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6667, x)) return;
	this->QScrollView::viewportMouseMoveEvent(x1);
    }
    virtual void viewportMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6664, x)) return;
	this->QScrollView::viewportMousePressEvent(x1);
    }
    virtual void viewportMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6665, x)) return;
	this->QScrollView::viewportMouseReleaseEvent(x1);
    }
    virtual void viewportPaintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6662, x)) return;
	this->QScrollView::viewportPaintEvent(x1);
    }
    virtual void viewportResizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 8690, x)) return;
	this->QTextEdit::viewportResizeEvent(x1);
    }
    virtual void viewportWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6672, x)) return;
	this->QScrollView::viewportWheelEvent(x1);
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6688, x)) return;
	this->QScrollView::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 8711, x)) return;
	this->QTextEdit::windowActivationChange(x1);
    }
    virtual void zoomIn() {
	xargs x[1];
	if(call_method((void*)this, 8617, x)) return;
	this->QTextEdit::zoomIn();
    }
    virtual void zoomIn(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8616, x)) return;
	this->QTextEdit::zoomIn(x1);
    }
    virtual void zoomOut() {
	xargs x[1];
	if(call_method((void*)this, 8619, x)) return;
	this->QTextEdit::zoomOut();
    }
    virtual void zoomOut(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8618, x)) return;
	this->QTextEdit::zoomOut(x1);
    }
    virtual void zoomTo(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 8620, x)) return;
	this->QTextEdit::zoomTo(x1);
    }
    ~x_QTextEdit() {}
};
void xcall_QTextEdit(xargs *x, void *s, int xi) {
    x_QTextEdit *xself = (x_QTextEdit*)s;
    switch(xi) {
	case 0: x_QTextEdit::x_0(x);	break;
	case 1: x_QTextEdit::x_1(x);	break;
	case 2: x_QTextEdit::x_2(x);	break;
	case 3: x_QTextEdit::x_3(x);	break;
	case 4: x_QTextEdit::x_4(x);	break;
	case 5: x_QTextEdit::x_5(x);	break;
	case 6: x_QTextEdit::x_6(x);	break;
	case 7: x_QTextEdit::x_7(x);	break;
	case 8: x_QTextEdit::x_8(x);	break;
	case 9: x_QTextEdit::x_9(x);	break;
	case 10: x_QTextEdit::x_10(x);	break;
	case 11: x_QTextEdit::x_11(x);	break;
	case 12: x_QTextEdit::x_12(x);	break;
	case 13: x_QTextEdit::x_13(x);	break;
	case 14: x_QTextEdit::x_14(x);	break;
	case 15: x_QTextEdit::x_15(x);	break;
	case 16: x_QTextEdit::x_16(x);	break;
	case 17: x_QTextEdit::x_17(x);	break;
	case 18: x_QTextEdit::x_18(x);	break;
	case 19: x_QTextEdit::x_19(x);	break;
	case 20: x_QTextEdit::x_20(x);	break;
	case 21: x_QTextEdit::x_21(x);	break;
	case 22: x_QTextEdit::x_22(x);	break;
	case 23: x_QTextEdit::x_23(x);	break;
	case 24: x_QTextEdit::x_24(x);	break;
	case 25: x_QTextEdit::x_25(x);	break;
	case 26: x_QTextEdit::x_26(x);	break;
	case 27: x_QTextEdit::x_27(x);	break;
	case 28: x_QTextEdit::x_28(x);	break;
	case 29: x_QTextEdit::x_29(x);	break;
	case 30: x_QTextEdit::x_30(x);	break;
	case 31: x_QTextEdit::x_31(x);	break;
	case 32: x_QTextEdit::x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: xself->x_54(x);	break;
	case 55: xself->x_55(x);	break;
	case 56: xself->x_56(x);	break;
	case 57: xself->x_57(x);	break;
	case 58: xself->x_58(x);	break;
	case 59: xself->x_59(x);	break;
	case 60: xself->x_60(x);	break;
	case 61: xself->x_61(x);	break;
	case 62: xself->x_62(x);	break;
	case 63: xself->x_63(x);	break;
	case 64: xself->x_64(x);	break;
	case 65: xself->x_65(x);	break;
	case 66: xself->x_66(x);	break;
	case 67: xself->x_67(x);	break;
	case 68: xself->x_68(x);	break;
	case 69: xself->x_69(x);	break;
	case 70: xself->x_70(x);	break;
	case 71: xself->x_71(x);	break;
	case 72: xself->x_72(x);	break;
	case 73: xself->x_73(x);	break;
	case 74: xself->x_74(x);	break;
	case 75: xself->x_75(x);	break;
	case 76: xself->x_76(x);	break;
	case 77: xself->x_77(x);	break;
	case 78: xself->x_78(x);	break;
	case 79: xself->x_79(x);	break;
	case 80: xself->x_80(x);	break;
	case 81: xself->x_81(x);	break;
	case 82: xself->x_82(x);	break;
	case 83: xself->x_83(x);	break;
	case 84: xself->x_84(x);	break;
	case 85: xself->x_85(x);	break;
	case 86: xself->x_86(x);	break;
	case 87: xself->x_87(x);	break;
	case 88: xself->x_88(x);	break;
	case 89: xself->x_89(x);	break;
	case 90: xself->x_90(x);	break;
	case 91: xself->x_91(x);	break;
	case 92: xself->x_92(x);	break;
	case 93: xself->x_93(x);	break;
	case 94: xself->x_94(x);	break;
	case 95: xself->x_95(x);	break;
	case 96: xself->x_96(x);	break;
	case 97: xself->x_97(x);	break;
	case 98: xself->x_98(x);	break;
	case 99: xself->x_99(x);	break;
	case 100: xself->x_100(x);	break;
	case 101: xself->x_101(x);	break;
	case 102: xself->x_102(x);	break;
	case 103: xself->x_103(x);	break;
	case 104: xself->x_104(x);	break;
	case 105: xself->x_105(x);	break;
	case 106: xself->x_106(x);	break;
	case 107: xself->x_107(x);	break;
	case 108: xself->x_108(x);	break;
	case 109: xself->x_109(x);	break;
	case 110: xself->x_110(x);	break;
	case 111: xself->x_111(x);	break;
	case 112: xself->x_112(x);	break;
	case 113: xself->x_113(x);	break;
	case 114: xself->x_114(x);	break;
	case 115: xself->x_115(x);	break;
	case 116: xself->x_116(x);	break;
	case 117: xself->x_117(x);	break;
	case 118: xself->x_118(x);	break;
	case 119: xself->x_119(x);	break;
	case 120: xself->x_120(x);	break;
	case 121: xself->x_121(x);	break;
	case 122: xself->x_122(x);	break;
	case 123: xself->x_123(x);	break;
	case 124: xself->x_124(x);	break;
	case 125: xself->x_125(x);	break;
	case 126: xself->x_126(x);	break;
	case 127: xself->x_127(x);	break;
	case 128: xself->x_128(x);	break;
	case 129: xself->x_129(x);	break;
	case 130: xself->x_130(x);	break;
	case 131: xself->x_131(x);	break;
	case 132: xself->x_132(x);	break;
	case 133: xself->x_133(x);	break;
	case 134: xself->x_134(x);	break;
	case 135: xself->x_135(x);	break;
	case 136: xself->x_136(x);	break;
	case 137: xself->x_137(x);	break;
	case 138: xself->x_138(x);	break;
	case 139: xself->x_139(x);	break;
	case 140: xself->x_140(x);	break;
	case 141: xself->x_141(x);	break;
	case 142: xself->x_142(x);	break;
	case 143: xself->x_143(x);	break;
	case 144: xself->x_144(x);	break;
	case 145: xself->x_145(x);	break;
	case 146: xself->x_146(x);	break;
	case 147: xself->x_147(x);	break;
	case 148: xself->x_148(x);	break;
	case 149: xself->x_149(x);	break;
	case 150: xself->x_150(x);	break;
	case 151: xself->x_151(x);	break;
	case 152: xself->x_152(x);	break;
	case 153: xself->x_153(x);	break;
	case 154: xself->x_154(x);	break;
	case 155: xself->x_155(x);	break;
	case 156: xself->x_156(x);	break;
	case 157: xself->x_157(x);	break;
	case 158: xself->x_158(x);	break;
	case 159: xself->x_159(x);	break;
	case 160: xself->x_160(x);	break;
	case 161: xself->x_161(x);	break;
	case 162: xself->x_162(x);	break;
	case 163: xself->x_163(x);	break;
	case 164: xself->x_164(x);	break;
	case 165: xself->x_165(x);	break;
	case 166: xself->x_166(x);	break;
	case 167: xself->x_167(x);	break;
	case 168: xself->x_168(x);	break;
	case 169: xself->x_169(x);	break;
	case 170: xself->x_170(x);	break;
	case 171: xself->x_171(x);	break;
	case 172: xself->x_172(x);	break;
	case 173: xself->x_173(x);	break;
	case 174: xself->x_174(x);	break;
	case 175: xself->x_175(x);	break;
	case 176: xself->x_176(x);	break;
	case 177: xself->x_177(x);	break;
	case 178: xself->x_178(x);	break;
	case 179: xself->x_179(x);	break;
	case 180: xself->x_180(x);	break;
	case 181: xself->x_181(x);	break;
	case 182: xself->x_182(x);	break;
	case 183: xself->x_183(x);	break;
	case 184: xself->x_184(x);	break;
	case 185: xself->x_185(x);	break;
	case 186: xself->x_186(x);	break;
	case 187: xself->x_187(x);	break;
	case 188: xself->x_188(x);	break;
	case 189: xself->x_189(x);	break;
	case 190: xself->x_190(x);	break;
	case 191: xself->x_191(x);	break;
	case 192: xself->x_192(x);	break;
	case 193: xself->x_193(x);	break;
	case 194: xself->x_194(x);	break;
	case 195: xself->x_195(x);	break;
	case 196: xself->x_196(x);	break;
	case 197: xself->x_197(x);	break;
	case 198: xself->x_198(x);	break;
	case 199: xself->x_199(x);	break;
	case 200: xself->x_200(x);	break;
	case 201: delete (QTextEdit*)xself;	break;
    }
}
