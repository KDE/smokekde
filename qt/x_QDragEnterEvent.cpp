//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qevent.h>
#include <qcstring.h>

class x_QDragEnterEvent : public QDragEnterEvent {
public:
    static void x_0(xargs *x) {
	// QDragEnterEvent(const QPoint&)
	x_QDragEnterEvent* xret = new x_QDragEnterEvent(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QDragEnterEvent(const QPoint& x1) : QDragEnterEvent(x1) {
    }
    virtual QByteArray encodedData(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2341, x)) {
	    QByteArray *xptr = (QByteArray *)x[0].x_voidp;
	    QByteArray xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QDropEvent::encodedData(x1);
    }
    virtual const char* format(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2339, x)) 	return (const char*)x[0].x_voidp;
	return this->QDropEvent::format(x1);
    }
    virtual bool provides(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2342, x)) return (bool)x[0].x_bool;
	return this->QDropEvent::provides(x1);
    }
    ~x_QDragEnterEvent() {}
};
void xcall_QDragEnterEvent(xargs *x, void *s, int xi) {
    x_QDragEnterEvent *xself = (x_QDragEnterEvent*)s;
    switch(xi) {
	case 0: x_QDragEnterEvent::x_0(x);	break;
    }
}
