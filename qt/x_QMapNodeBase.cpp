//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qmap.h>

class x_QMapNodeBase {
private:
    QMapNodeBase *xthis;
public:
    x_QMapNodeBase(void *x) : xthis((QMapNodeBase*)x) {}
    static void x_0(xargs *x) {
	x[0].x_long = (long)QMapNodeBase::Red;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QMapNodeBase::Black;
    }
    void x_2(xargs *x) {
	// minimum()
	QMapNodeBase* xret = xthis->QMapNodeBase::minimum();
	x[0].x_voidp = (void*)xret;
    }
    void x_3(xargs *x) {
	// maximum()
	QMapNodeBase* xret = xthis->QMapNodeBase::maximum();
	x[0].x_voidp = (void*)xret;
    }
    ~x_QMapNodeBase() {}
};
void xcall_QMapNodeBase(xargs *x, void *s, int xi) {
    x_QMapNodeBase xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: x_QMapNodeBase::x_0(x);	break;
	case 1: x_QMapNodeBase::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
    }
}
