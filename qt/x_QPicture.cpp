//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qstring.h>
#include <qpicture.h>
#include <qrect.h>

class x_QPicture : public QPicture {
public:
    static void x_0(xargs *x) {
	// QPicture(int)
	x_QPicture* xret = new x_QPicture((int)x[1].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QPicture(int x1) : QPicture(x1) {
    }
    static void x_1(xargs *x) {
	// QPicture()
	x_QPicture* xret = new x_QPicture();
	x[0].x_voidp = (void*)xret;
    }
    x_QPicture() : QPicture() {
    }
    static void x_2(xargs *x) {
	// QPicture(const QPicture&)
	x_QPicture* xret = new x_QPicture(*(const QPicture *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QPicture(const QPicture& x1) : QPicture(x1) {
    }
    void x_3(xargs *x) const {
	// isNull()
	bool xret = this->QPicture::isNull();
	x[0].x_bool = (bool)xret;
    }
    void x_4(xargs *x) const {
	// size()
	uint xret = this->QPicture::size();
	x[0].x_uint = (uint)xret;
    }
    void x_5(xargs *x) const {
	// data()
	const char* xret = this->QPicture::data();
	x[0].x_voidp = (void*)xret;
    }
    void x_6(xargs *x) {
	// setData(const char*, uint)
	this->QPicture::setData((const char*)x[1].x_voidp,(uint)x[2].x_uint);
    }
    void x_7(xargs *x) {
	// play(QPainter*)
	bool xret = this->QPicture::play((QPainter*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_8(xargs *x) {
	// load(QIODevice*, const char*)
	bool xret = this->QPicture::load((QIODevice*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_9(xargs *x) {
	// load(QIODevice*)
	bool xret = this->QPicture::load((QIODevice*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_10(xargs *x) {
	// load(const QString&, const char*)
	bool xret = this->QPicture::load(*(const QString *)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_11(xargs *x) {
	// load(const QString&)
	bool xret = this->QPicture::load(*(const QString *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_12(xargs *x) {
	// save(QIODevice*, const char*)
	bool xret = this->QPicture::save((QIODevice*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_13(xargs *x) {
	// save(QIODevice*)
	bool xret = this->QPicture::save((QIODevice*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_14(xargs *x) {
	// save(const QString&, const char*)
	bool xret = this->QPicture::save(*(const QString *)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_15(xargs *x) {
	// save(const QString&)
	bool xret = this->QPicture::save(*(const QString *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_16(xargs *x) const {
	// boundingRect()
	QRect xret = this->QPicture::boundingRect();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_17(xargs *x) {
	// operator=(const QPicture&)
	QPicture& xret = this->QPicture::operator=(*(const QPicture *)x[1].x_voidp);
	x[0].x_voidp = (void*)&xret;
    }
    void x_18(xargs *x) {
	// cmd(int, QPainter*, QPDevCmdParam*)
	bool xret = this->QPicture::cmd((int)x[1].x_int,(QPainter*)x[2].x_voidp,(QPDevCmdParam*)x[3].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_19(xargs *x) const {
	// metric(int)
	int xret = this->QPicture::metric((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_20(xargs *x) {
	// detach()
	this->QPicture::detach();
    }
    void x_21(xargs *x) const {
	// copy()
	QPicture xret = this->QPicture::copy();
	x[0].x_voidp = (void*)new QPicture(xret);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5858, x)) return (bool)x[0].x_bool;
	return this->QPicture::cmd(x1, x2, x3);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5859, x)) return (int)x[0].x_int;
	return this->QPicture::metric(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void setData(const char* x1, uint x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_uint = (uint)x2;
	if(call_method((void*)this, 5846, x)) return;
	this->QPicture::setData(x1, x2);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    ~x_QPicture() {}
};
void xcall_QPicture(xargs *x, void *s, int xi) {
    x_QPicture *xself = (x_QPicture*)s;
    switch(xi) {
	case 0: x_QPicture::x_0(x);	break;
	case 1: x_QPicture::x_1(x);	break;
	case 2: x_QPicture::x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: delete (QPicture*)xself;	break;
    }
}
