//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qcursor.h>
#include <qfontinfo.h>
#include <qcolor.h>
#include <qstring.h>
#include <qsize.h>
#include <qvariant.h>
#include <qregion.h>
#include <qfontmetrics.h>
#include <qbrush.h>
#include <qpoint.h>
#include <qfont.h>
#include <qbitmap.h>
#include <qsizepolicy.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qwidget.h>
#include <qrect.h>
#include <qpixmap.h>
#include <qstyle.h>

class x_QWidget : public QWidget {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QWidget::NoFocus;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QWidget::TabFocus;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QWidget::ClickFocus;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QWidget::StrongFocus;
    }
    static void x_4(xargs *x) {
	x[0].x_long = (long)QWidget::WheelFocus;
    }
    static void x_5(xargs *x) {
	x[0].x_long = (long)QWidget::WidgetOrigin;
    }
    static void x_6(xargs *x) {
	x[0].x_long = (long)QWidget::ParentOrigin;
    }
    static void x_7(xargs *x) {
	x[0].x_long = (long)QWidget::WindowOrigin;
    }
    static void x_8(xargs *x) {
	// QWidget(QWidget*, const char*, Qt::WFlags)
	x_QWidget* xret = new x_QWidget((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp,*(Qt::WFlags *)x[3].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QWidget(QWidget* x1, const char* x2, Qt::WFlags x3) : QWidget(x1, x2, x3) {
    }
    static void x_9(xargs *x) {
	// QWidget(QWidget*, const char*)
	x_QWidget* xret = new x_QWidget((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QWidget(QWidget* x1, const char* x2) : QWidget(x1, x2) {
    }
    static void x_10(xargs *x) {
	// QWidget(QWidget*)
	x_QWidget* xret = new x_QWidget((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QWidget(QWidget* x1) : QWidget(x1) {
    }
    static void x_11(xargs *x) {
	// QWidget()
	x_QWidget* xret = new x_QWidget();
	x[0].x_voidp = (void*)xret;
    }
    x_QWidget() : QWidget() {
    }
    void x_12(xargs *x) const {
	// winId()
	WId xret = this->QWidget::winId();
	x[0].x_voidp = (void*)new WId(xret);
    }
    void x_13(xargs *x) {
	// setName(const char*)
	this->QWidget::setName((const char*)x[1].x_voidp);
    }
    void x_14(xargs *x) const {
	// style()
	QStyle& xret = this->QWidget::style();
	x[0].x_voidp = (void*)&xret;
    }
    void x_15(xargs *x) {
	// setStyle(QStyle*)
	this->QWidget::setStyle((QStyle*)x[1].x_voidp);
    }
    void x_16(xargs *x) {
	// setStyle(const QString&)
	QStyle* xret = this->QWidget::setStyle(*(const QString *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    void x_17(xargs *x) const {
	// isTopLevel()
	bool xret = this->QWidget::isTopLevel();
	x[0].x_bool = (bool)xret;
    }
    void x_18(xargs *x) const {
	// isDialog()
	bool xret = this->QWidget::isDialog();
	x[0].x_bool = (bool)xret;
    }
    void x_19(xargs *x) const {
	// isPopup()
	bool xret = this->QWidget::isPopup();
	x[0].x_bool = (bool)xret;
    }
    void x_20(xargs *x) const {
	// isDesktop()
	bool xret = this->QWidget::isDesktop();
	x[0].x_bool = (bool)xret;
    }
    void x_21(xargs *x) const {
	// isModal()
	bool xret = this->QWidget::isModal();
	x[0].x_bool = (bool)xret;
    }
    void x_22(xargs *x) const {
	// isEnabled()
	bool xret = this->QWidget::isEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_23(xargs *x) const {
	// isEnabledTo(QWidget*)
	bool xret = this->QWidget::isEnabledTo((QWidget*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_24(xargs *x) const {
	// isEnabledToTLW()
	bool xret = this->QWidget::isEnabledToTLW();
	x[0].x_bool = (bool)xret;
    }
    void x_25(xargs *x) const {
	// frameGeometry()
	QRect xret = this->QWidget::frameGeometry();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_26(xargs *x) const {
	// geometry()
	const QRect& xret = this->QWidget::geometry();
	x[0].x_voidp = (void*)&xret;
    }
    void x_27(xargs *x) const {
	// x()
	int xret = this->QWidget::x();
	x[0].x_int = (int)xret;
    }
    void x_28(xargs *x) const {
	// y()
	int xret = this->QWidget::y();
	x[0].x_int = (int)xret;
    }
    void x_29(xargs *x) const {
	// pos()
	QPoint xret = this->QWidget::pos();
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_30(xargs *x) const {
	// frameSize()
	QSize xret = this->QWidget::frameSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_31(xargs *x) const {
	// size()
	QSize xret = this->QWidget::size();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_32(xargs *x) const {
	// width()
	int xret = this->QWidget::width();
	x[0].x_int = (int)xret;
    }
    void x_33(xargs *x) const {
	// height()
	int xret = this->QWidget::height();
	x[0].x_int = (int)xret;
    }
    void x_34(xargs *x) const {
	// rect()
	QRect xret = this->QWidget::rect();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_35(xargs *x) const {
	// childrenRect()
	QRect xret = this->QWidget::childrenRect();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_36(xargs *x) const {
	// childrenRegion()
	QRegion xret = this->QWidget::childrenRegion();
	x[0].x_voidp = (void*)new QRegion(xret);
    }
    void x_37(xargs *x) const {
	// minimumSize()
	QSize xret = this->QWidget::minimumSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_38(xargs *x) const {
	// maximumSize()
	QSize xret = this->QWidget::maximumSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_39(xargs *x) const {
	// minimumWidth()
	int xret = this->QWidget::minimumWidth();
	x[0].x_int = (int)xret;
    }
    void x_40(xargs *x) const {
	// minimumHeight()
	int xret = this->QWidget::minimumHeight();
	x[0].x_int = (int)xret;
    }
    void x_41(xargs *x) const {
	// maximumWidth()
	int xret = this->QWidget::maximumWidth();
	x[0].x_int = (int)xret;
    }
    void x_42(xargs *x) const {
	// maximumHeight()
	int xret = this->QWidget::maximumHeight();
	x[0].x_int = (int)xret;
    }
    void x_43(xargs *x) {
	// setMinimumSize(const QSize&)
	this->QWidget::setMinimumSize(*(const QSize *)x[1].x_voidp);
    }
    void x_44(xargs *x) {
	// setMinimumSize(int, int)
	this->QWidget::setMinimumSize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_45(xargs *x) {
	// setMaximumSize(const QSize&)
	this->QWidget::setMaximumSize(*(const QSize *)x[1].x_voidp);
    }
    void x_46(xargs *x) {
	// setMaximumSize(int, int)
	this->QWidget::setMaximumSize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_47(xargs *x) {
	// setMinimumWidth(int)
	this->QWidget::setMinimumWidth((int)x[1].x_int);
    }
    void x_48(xargs *x) {
	// setMinimumHeight(int)
	this->QWidget::setMinimumHeight((int)x[1].x_int);
    }
    void x_49(xargs *x) {
	// setMaximumWidth(int)
	this->QWidget::setMaximumWidth((int)x[1].x_int);
    }
    void x_50(xargs *x) {
	// setMaximumHeight(int)
	this->QWidget::setMaximumHeight((int)x[1].x_int);
    }
    void x_51(xargs *x) const {
	// sizeIncrement()
	QSize xret = this->QWidget::sizeIncrement();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_52(xargs *x) {
	// setSizeIncrement(const QSize&)
	this->QWidget::setSizeIncrement(*(const QSize *)x[1].x_voidp);
    }
    void x_53(xargs *x) {
	// setSizeIncrement(int, int)
	this->QWidget::setSizeIncrement((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_54(xargs *x) const {
	// baseSize()
	QSize xret = this->QWidget::baseSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_55(xargs *x) {
	// setBaseSize(const QSize&)
	this->QWidget::setBaseSize(*(const QSize *)x[1].x_voidp);
    }
    void x_56(xargs *x) {
	// setBaseSize(int, int)
	this->QWidget::setBaseSize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_57(xargs *x) {
	// setFixedSize(const QSize&)
	this->QWidget::setFixedSize(*(const QSize *)x[1].x_voidp);
    }
    void x_58(xargs *x) {
	// setFixedSize(int, int)
	this->QWidget::setFixedSize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_59(xargs *x) {
	// setFixedWidth(int)
	this->QWidget::setFixedWidth((int)x[1].x_int);
    }
    void x_60(xargs *x) {
	// setFixedHeight(int)
	this->QWidget::setFixedHeight((int)x[1].x_int);
    }
    void x_61(xargs *x) const {
	// mapToGlobal(const QPoint&)
	QPoint xret = this->QWidget::mapToGlobal(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_62(xargs *x) const {
	// mapFromGlobal(const QPoint&)
	QPoint xret = this->QWidget::mapFromGlobal(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_63(xargs *x) const {
	// mapToParent(const QPoint&)
	QPoint xret = this->QWidget::mapToParent(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_64(xargs *x) const {
	// mapFromParent(const QPoint&)
	QPoint xret = this->QWidget::mapFromParent(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_65(xargs *x) const {
	// mapTo(QWidget*, const QPoint&)
	QPoint xret = this->QWidget::mapTo((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_66(xargs *x) const {
	// mapFrom(QWidget*, const QPoint&)
	QPoint xret = this->QWidget::mapFrom((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_67(xargs *x) const {
	// topLevelWidget()
	QWidget* xret = this->QWidget::topLevelWidget();
	x[0].x_voidp = (void*)xret;
    }
    void x_68(xargs *x) const {
	// backgroundMode()
	Qt::BackgroundMode xret = this->QWidget::backgroundMode();
	x[0].x_long = (long)xret;
    }
    void x_69(xargs *x) {
	// setBackgroundMode(Qt::BackgroundMode)
	this->QWidget::setBackgroundMode((Qt::BackgroundMode)x[1].x_long);
    }
    void x_70(xargs *x) {
	// setBackgroundMode(Qt::BackgroundMode, Qt::BackgroundMode)
	this->QWidget::setBackgroundMode((Qt::BackgroundMode)x[1].x_long,(Qt::BackgroundMode)x[2].x_long);
    }
    void x_71(xargs *x) const {
	// foregroundColor()
	const QColor& xret = this->QWidget::foregroundColor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_72(xargs *x) const {
	// eraseColor()
	const QColor& xret = this->QWidget::eraseColor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_73(xargs *x) {
	// setEraseColor(const QColor&)
	this->QWidget::setEraseColor(*(const QColor *)x[1].x_voidp);
    }
    void x_74(xargs *x) const {
	// erasePixmap()
	const QPixmap* xret = this->QWidget::erasePixmap();
	x[0].x_voidp = (void*)xret;
    }
    void x_75(xargs *x) {
	// setErasePixmap(const QPixmap&)
	this->QWidget::setErasePixmap(*(const QPixmap *)x[1].x_voidp);
    }
    void x_76(xargs *x) const {
	// colorGroup()
	const QColorGroup& xret = this->QWidget::colorGroup();
	x[0].x_voidp = (void*)&xret;
    }
    void x_77(xargs *x) const {
	// palette()
	const QPalette& xret = this->QWidget::palette();
	x[0].x_voidp = (void*)&xret;
    }
    void x_78(xargs *x) const {
	// ownPalette()
	bool xret = this->QWidget::ownPalette();
	x[0].x_bool = (bool)xret;
    }
    void x_79(xargs *x) {
	// setPalette(const QPalette&)
	this->QWidget::setPalette(*(const QPalette *)x[1].x_voidp);
    }
    void x_80(xargs *x) {
	// unsetPalette()
	this->QWidget::unsetPalette();
    }
    void x_81(xargs *x) const {
	// paletteForegroundColor()
	const QColor& xret = this->QWidget::paletteForegroundColor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_82(xargs *x) {
	// setPaletteForegroundColor(const QColor&)
	this->QWidget::setPaletteForegroundColor(*(const QColor *)x[1].x_voidp);
    }
    void x_83(xargs *x) const {
	// paletteBackgroundColor()
	const QColor& xret = this->QWidget::paletteBackgroundColor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_84(xargs *x) {
	// setPaletteBackgroundColor(const QColor&)
	this->QWidget::setPaletteBackgroundColor(*(const QColor *)x[1].x_voidp);
    }
    void x_85(xargs *x) const {
	// paletteBackgroundPixmap()
	const QPixmap* xret = this->QWidget::paletteBackgroundPixmap();
	x[0].x_voidp = (void*)xret;
    }
    void x_86(xargs *x) {
	// setPaletteBackgroundPixmap(const QPixmap&)
	this->QWidget::setPaletteBackgroundPixmap(*(const QPixmap *)x[1].x_voidp);
    }
    void x_87(xargs *x) const {
	// backgroundBrush()
	const QBrush& xret = this->QWidget::backgroundBrush();
	x[0].x_voidp = (void*)&xret;
    }
    void x_88(xargs *x) const {
	// font()
	QFont xret = this->QWidget::font();
	x[0].x_voidp = (void*)new QFont(xret);
    }
    void x_89(xargs *x) const {
	// ownFont()
	bool xret = this->QWidget::ownFont();
	x[0].x_bool = (bool)xret;
    }
    void x_90(xargs *x) {
	// setFont(const QFont&)
	this->QWidget::setFont(*(const QFont *)x[1].x_voidp);
    }
    void x_91(xargs *x) {
	// unsetFont()
	this->QWidget::unsetFont();
    }
    void x_92(xargs *x) const {
	// fontMetrics()
	QFontMetrics xret = this->QWidget::fontMetrics();
	x[0].x_voidp = (void*)new QFontMetrics(xret);
    }
    void x_93(xargs *x) const {
	// fontInfo()
	QFontInfo xret = this->QWidget::fontInfo();
	x[0].x_voidp = (void*)new QFontInfo(xret);
    }
    void x_94(xargs *x) const {
	// cursor()
	const QCursor& xret = this->QWidget::cursor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_95(xargs *x) const {
	// ownCursor()
	bool xret = this->QWidget::ownCursor();
	x[0].x_bool = (bool)xret;
    }
    void x_96(xargs *x) {
	// setCursor(const QCursor&)
	this->QWidget::setCursor(*(const QCursor *)x[1].x_voidp);
    }
    void x_97(xargs *x) {
	// unsetCursor()
	this->QWidget::unsetCursor();
    }
    void x_98(xargs *x) const {
	// caption()
	QString xret = this->QWidget::caption();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_99(xargs *x) const {
	// icon()
	const QPixmap* xret = this->QWidget::icon();
	x[0].x_voidp = (void*)xret;
    }
    void x_100(xargs *x) const {
	// iconText()
	QString xret = this->QWidget::iconText();
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_101(xargs *x) const {
	// hasMouseTracking()
	bool xret = this->QWidget::hasMouseTracking();
	x[0].x_bool = (bool)xret;
    }
    void x_102(xargs *x) const {
	// hasMouse()
	bool xret = this->QWidget::hasMouse();
	x[0].x_bool = (bool)xret;
    }
    void x_103(xargs *x) {
	// setMask(const QBitmap&)
	this->QWidget::setMask(*(const QBitmap *)x[1].x_voidp);
    }
    void x_104(xargs *x) {
	// setMask(const QRegion&)
	this->QWidget::setMask(*(const QRegion *)x[1].x_voidp);
    }
    void x_105(xargs *x) {
	// clearMask()
	this->QWidget::clearMask();
    }
    void x_106(xargs *x) const {
	// backgroundColor()
	const QColor& xret = this->QWidget::backgroundColor();
	x[0].x_voidp = (void*)&xret;
    }
    void x_107(xargs *x) {
	// setBackgroundColor(const QColor&)
	this->QWidget::setBackgroundColor(*(const QColor *)x[1].x_voidp);
    }
    void x_108(xargs *x) const {
	// backgroundPixmap()
	const QPixmap* xret = this->QWidget::backgroundPixmap();
	x[0].x_voidp = (void*)xret;
    }
    void x_109(xargs *x) {
	// setBackgroundPixmap(const QPixmap&)
	this->QWidget::setBackgroundPixmap(*(const QPixmap *)x[1].x_voidp);
    }
    void x_110(xargs *x) const {
	// isActiveWindow()
	bool xret = this->QWidget::isActiveWindow();
	x[0].x_bool = (bool)xret;
    }
    void x_111(xargs *x) {
	// setActiveWindow()
	this->QWidget::setActiveWindow();
    }
    void x_112(xargs *x) const {
	// isFocusEnabled()
	bool xret = this->QWidget::isFocusEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_113(xargs *x) const {
	// focusPolicy()
	QWidget::FocusPolicy xret = this->QWidget::focusPolicy();
	x[0].x_long = (long)xret;
    }
    void x_114(xargs *x) {
	// setFocusPolicy(QWidget::FocusPolicy)
	this->QWidget::setFocusPolicy((QWidget::FocusPolicy)x[1].x_long);
    }
    void x_115(xargs *x) const {
	// hasFocus()
	bool xret = this->QWidget::hasFocus();
	x[0].x_bool = (bool)xret;
    }
    void x_116(xargs *x) {
	// setFocusProxy(QWidget*)
	this->QWidget::setFocusProxy((QWidget*)x[1].x_voidp);
    }
    void x_117(xargs *x) const {
	// focusProxy()
	QWidget* xret = this->QWidget::focusProxy();
	x[0].x_voidp = (void*)xret;
    }
    void x_118(xargs *x) {
	// grabMouse()
	this->QWidget::grabMouse();
    }
    void x_119(xargs *x) {
	// grabMouse(const QCursor&)
	this->QWidget::grabMouse(*(const QCursor *)x[1].x_voidp);
    }
    void x_120(xargs *x) {
	// releaseMouse()
	this->QWidget::releaseMouse();
    }
    void x_121(xargs *x) {
	// grabKeyboard()
	this->QWidget::grabKeyboard();
    }
    void x_122(xargs *x) {
	// releaseKeyboard()
	this->QWidget::releaseKeyboard();
    }
    void x_123(xargs *x) const {
	// isUpdatesEnabled()
	bool xret = this->QWidget::isUpdatesEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_124(xargs *x) {
	// close(bool)
	bool xret = this->QWidget::close((bool)x[1].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_125(xargs *x) const {
	// isVisible()
	bool xret = this->QWidget::isVisible();
	x[0].x_bool = (bool)xret;
    }
    void x_126(xargs *x) const {
	// isVisibleTo(QWidget*)
	bool xret = this->QWidget::isVisibleTo((QWidget*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_127(xargs *x) const {
	// isVisibleToTLW()
	bool xret = this->QWidget::isVisibleToTLW();
	x[0].x_bool = (bool)xret;
    }
    void x_128(xargs *x) const {
	// visibleRect()
	QRect xret = this->QWidget::visibleRect();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_129(xargs *x) const {
	// isHidden()
	bool xret = this->QWidget::isHidden();
	x[0].x_bool = (bool)xret;
    }
    void x_130(xargs *x) const {
	// isMinimized()
	bool xret = this->QWidget::isMinimized();
	x[0].x_bool = (bool)xret;
    }
    void x_131(xargs *x) const {
	// isMaximized()
	bool xret = this->QWidget::isMaximized();
	x[0].x_bool = (bool)xret;
    }
    void x_132(xargs *x) const {
	// sizeHint()
	QSize xret = this->QWidget::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_133(xargs *x) const {
	// minimumSizeHint()
	QSize xret = this->QWidget::minimumSizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_134(xargs *x) const {
	// sizePolicy()
	QSizePolicy xret = this->QWidget::sizePolicy();
	x[0].x_voidp = (void*)new QSizePolicy(xret);
    }
    void x_135(xargs *x) {
	// setSizePolicy(QSizePolicy)
	this->QWidget::setSizePolicy(*(QSizePolicy *)x[1].x_voidp);
    }
    void x_136(xargs *x) const {
	// heightForWidth(int)
	int xret = this->QWidget::heightForWidth((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_137(xargs *x) {
	// adjustSize()
	this->QWidget::adjustSize();
    }
    void x_138(xargs *x) const {
	// layout()
	QLayout* xret = this->QWidget::layout();
	x[0].x_voidp = (void*)xret;
    }
    void x_139(xargs *x) {
	// updateGeometry()
	this->QWidget::updateGeometry();
    }
    void x_140(xargs *x) {
	// reparent(QWidget*, Qt::WFlags, const QPoint&, bool)
	this->QWidget::reparent((QWidget*)x[1].x_voidp,*(Qt::WFlags *)x[2].x_voidp,*(const QPoint *)x[3].x_voidp,(bool)x[4].x_bool);
    }
    void x_141(xargs *x) {
	// reparent(QWidget*, Qt::WFlags, const QPoint&)
	this->QWidget::reparent((QWidget*)x[1].x_voidp,*(Qt::WFlags *)x[2].x_voidp,*(const QPoint *)x[3].x_voidp);
    }
    void x_142(xargs *x) {
	// reparent(QWidget*, const QPoint&, bool)
	this->QWidget::reparent((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp,(bool)x[3].x_bool);
    }
    void x_143(xargs *x) {
	// reparent(QWidget*, const QPoint&)
	this->QWidget::reparent((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
    }
    void x_144(xargs *x) {
	// recreate(QWidget*, Qt::WFlags, const QPoint&, bool)
	this->QWidget::recreate((QWidget*)x[1].x_voidp,*(Qt::WFlags *)x[2].x_voidp,*(const QPoint *)x[3].x_voidp,(bool)x[4].x_bool);
    }
    void x_145(xargs *x) {
	// recreate(QWidget*, Qt::WFlags, const QPoint&)
	this->QWidget::recreate((QWidget*)x[1].x_voidp,*(Qt::WFlags *)x[2].x_voidp,*(const QPoint *)x[3].x_voidp);
    }
    void x_146(xargs *x) {
	// erase()
	this->QWidget::erase();
    }
    void x_147(xargs *x) {
	// erase(int, int, int, int)
	this->QWidget::erase((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_148(xargs *x) {
	// erase(const QRect&)
	this->QWidget::erase(*(const QRect *)x[1].x_voidp);
    }
    void x_149(xargs *x) {
	// erase(const QRegion&)
	this->QWidget::erase(*(const QRegion *)x[1].x_voidp);
    }
    void x_150(xargs *x) {
	// scroll(int, int)
	this->QWidget::scroll((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_151(xargs *x) {
	// scroll(int, int, const QRect&)
	this->QWidget::scroll((int)x[1].x_int,(int)x[2].x_int,*(const QRect *)x[3].x_voidp);
    }
    void x_152(xargs *x) {
	// drawText(int, int, const QString&)
	this->QWidget::drawText((int)x[1].x_int,(int)x[2].x_int,*(const QString *)x[3].x_voidp);
    }
    void x_153(xargs *x) {
	// drawText(const QPoint&, const QString&)
	this->QWidget::drawText(*(const QPoint *)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    void x_154(xargs *x) const {
	// focusWidget()
	QWidget* xret = this->QWidget::focusWidget();
	x[0].x_voidp = (void*)xret;
    }
    void x_155(xargs *x) const {
	// microFocusHint()
	QRect xret = this->QWidget::microFocusHint();
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_156(xargs *x) const {
	// acceptDrops()
	bool xret = this->QWidget::acceptDrops();
	x[0].x_bool = (bool)xret;
    }
    void x_157(xargs *x) {
	// setAcceptDrops(bool)
	this->QWidget::setAcceptDrops((bool)x[1].x_bool);
    }
    void x_158(xargs *x) {
	// setAutoMask(bool)
	this->QWidget::setAutoMask((bool)x[1].x_bool);
    }
    void x_159(xargs *x) const {
	// autoMask()
	bool xret = this->QWidget::autoMask();
	x[0].x_bool = (bool)xret;
    }
    void x_160(xargs *x) {
	// setBackgroundOrigin(QWidget::BackgroundOrigin)
	this->QWidget::setBackgroundOrigin((QWidget::BackgroundOrigin)x[1].x_long);
    }
    void x_161(xargs *x) const {
	// backgroundOrigin()
	QWidget::BackgroundOrigin xret = this->QWidget::backgroundOrigin();
	x[0].x_long = (long)xret;
    }
    void x_162(xargs *x) const {
	// customWhatsThis()
	bool xret = this->QWidget::customWhatsThis();
	x[0].x_bool = (bool)xret;
    }
    void x_163(xargs *x) const {
	// parentWidget(bool)
	QWidget* xret = this->QWidget::parentWidget((bool)x[1].x_bool);
	x[0].x_voidp = (void*)xret;
    }
    void x_164(xargs *x) const {
	// parentWidget()
	QWidget* xret = this->QWidget::parentWidget();
	x[0].x_voidp = (void*)xret;
    }
    void x_165(xargs *x) const {
	// testWState(Qt::WState)
	Qt::WState xret = this->QWidget::testWState(*(Qt::WState *)x[1].x_voidp);
	x[0].x_voidp = (void*)new Qt::WState(xret);
    }
    void x_166(xargs *x) const {
	// testWFlags(Qt::WFlags)
	Qt::WFlags xret = this->QWidget::testWFlags(*(Qt::WFlags *)x[1].x_voidp);
	x[0].x_voidp = (void*)new Qt::WFlags(xret);
    }
    void x_167(xargs *x) const {
	// childAt(int, int, bool)
	QWidget* xret = this->QWidget::childAt((int)x[1].x_int,(int)x[2].x_int,(bool)x[3].x_bool);
	x[0].x_voidp = (void*)xret;
    }
    void x_168(xargs *x) const {
	// childAt(int, int)
	QWidget* xret = this->QWidget::childAt((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_voidp = (void*)xret;
    }
    void x_169(xargs *x) const {
	// childAt(const QPoint&, bool)
	QWidget* xret = this->QWidget::childAt(*(const QPoint *)x[1].x_voidp,(bool)x[2].x_bool);
	x[0].x_voidp = (void*)xret;
    }
    void x_170(xargs *x) const {
	// childAt(const QPoint&)
	QWidget* xret = this->QWidget::childAt(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    void x_171(xargs *x) {
	// setPalette(const QPalette&, bool)
	this->QWidget::setPalette(*(const QPalette *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_172(xargs *x) {
	// setFont(const QFont&, bool)
	this->QWidget::setFont(*(const QFont *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_173(xargs *x) {
	// setEnabled(bool)
	this->QWidget::setEnabled((bool)x[1].x_bool);
    }
    void x_174(xargs *x) {
	// setDisabled(bool)
	this->QWidget::setDisabled((bool)x[1].x_bool);
    }
    void x_175(xargs *x) {
	// setCaption(const QString&)
	this->QWidget::setCaption(*(const QString *)x[1].x_voidp);
    }
    void x_176(xargs *x) {
	// setIcon(const QPixmap&)
	this->QWidget::setIcon(*(const QPixmap *)x[1].x_voidp);
    }
    void x_177(xargs *x) {
	// setIconText(const QString&)
	this->QWidget::setIconText(*(const QString *)x[1].x_voidp);
    }
    void x_178(xargs *x) {
	// setMouseTracking(bool)
	this->QWidget::setMouseTracking((bool)x[1].x_bool);
    }
    void x_179(xargs *x) {
	// setFocus()
	this->QWidget::setFocus();
    }
    void x_180(xargs *x) {
	// clearFocus()
	this->QWidget::clearFocus();
    }
    void x_181(xargs *x) {
	// setUpdatesEnabled(bool)
	this->QWidget::setUpdatesEnabled((bool)x[1].x_bool);
    }
    void x_182(xargs *x) {
	// update()
	this->QWidget::update();
    }
    void x_183(xargs *x) {
	// update(int, int, int, int)
	this->QWidget::update((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_184(xargs *x) {
	// update(const QRect&)
	this->QWidget::update(*(const QRect *)x[1].x_voidp);
    }
    void x_185(xargs *x) {
	// repaint()
	this->QWidget::repaint();
    }
    void x_186(xargs *x) {
	// repaint(bool)
	this->QWidget::repaint((bool)x[1].x_bool);
    }
    void x_187(xargs *x) {
	// repaint(int, int, int, int, bool)
	this->QWidget::repaint((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(bool)x[5].x_bool);
    }
    void x_188(xargs *x) {
	// repaint(int, int, int, int)
	this->QWidget::repaint((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_189(xargs *x) {
	// repaint(const QRect&, bool)
	this->QWidget::repaint(*(const QRect *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_190(xargs *x) {
	// repaint(const QRect&)
	this->QWidget::repaint(*(const QRect *)x[1].x_voidp);
    }
    void x_191(xargs *x) {
	// repaint(const QRegion&, bool)
	this->QWidget::repaint(*(const QRegion *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_192(xargs *x) {
	// repaint(const QRegion&)
	this->QWidget::repaint(*(const QRegion *)x[1].x_voidp);
    }
    void x_193(xargs *x) {
	// show()
	this->QWidget::show();
    }
    void x_194(xargs *x) {
	// hide()
	this->QWidget::hide();
    }
    void x_195(xargs *x) {
	// iconify()
	this->QWidget::iconify();
    }
    void x_196(xargs *x) {
	// showMinimized()
	this->QWidget::showMinimized();
    }
    void x_197(xargs *x) {
	// showMaximized()
	this->QWidget::showMaximized();
    }
    void x_198(xargs *x) {
	// showFullScreen()
	this->QWidget::showFullScreen();
    }
    void x_199(xargs *x) {
	// showNormal()
	this->QWidget::showNormal();
    }
    void x_200(xargs *x) {
	// polish()
	this->QWidget::polish();
    }
    void x_201(xargs *x) const {
	// constPolish()
	this->QWidget::constPolish();
    }
    void x_202(xargs *x) {
	// close()
	bool xret = this->QWidget::close();
	x[0].x_bool = (bool)xret;
    }
    void x_203(xargs *x) {
	// raise()
	this->QWidget::raise();
    }
    void x_204(xargs *x) {
	// lower()
	this->QWidget::lower();
    }
    void x_205(xargs *x) {
	// stackUnder(QWidget*)
	this->QWidget::stackUnder((QWidget*)x[1].x_voidp);
    }
    void x_206(xargs *x) {
	// move(int, int)
	this->QWidget::move((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_207(xargs *x) {
	// move(const QPoint&)
	this->QWidget::move(*(const QPoint *)x[1].x_voidp);
    }
    void x_208(xargs *x) {
	// resize(int, int)
	this->QWidget::resize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_209(xargs *x) {
	// resize(const QSize&)
	this->QWidget::resize(*(const QSize *)x[1].x_voidp);
    }
    void x_210(xargs *x) {
	// setGeometry(int, int, int, int)
	this->QWidget::setGeometry((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_211(xargs *x) {
	// setGeometry(const QRect&)
	this->QWidget::setGeometry(*(const QRect *)x[1].x_voidp);
    }
    static void x_212(xargs *x) {
	// setTabOrder(QWidget*, QWidget*)
	QWidget::setTabOrder((QWidget*)x[1].x_voidp,(QWidget*)x[2].x_voidp);
    }
    static void x_213(xargs *x) {
	// mouseGrabber()
	QWidget* xret = QWidget::mouseGrabber();
	x[0].x_voidp = (void*)xret;
    }
    static void x_214(xargs *x) {
	// keyboardGrabber()
	QWidget* xret = QWidget::keyboardGrabber();
	x[0].x_voidp = (void*)xret;
    }
    static void x_215(xargs *x) {
	// find(WId)
	QWidget* xret = QWidget::find(*(WId *)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    static void x_216(xargs *x) {
	// wmapper()
	QWidgetMapper* xret = QWidget::wmapper();
	x[0].x_voidp = (void*)xret;
    }
    void x_217(xargs *x) {
	// event(QEvent*)
	bool xret = this->QWidget::event((QEvent*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_218(xargs *x) {
	// mousePressEvent(QMouseEvent*)
	this->QWidget::mousePressEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_219(xargs *x) {
	// mouseReleaseEvent(QMouseEvent*)
	this->QWidget::mouseReleaseEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_220(xargs *x) {
	// mouseDoubleClickEvent(QMouseEvent*)
	this->QWidget::mouseDoubleClickEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_221(xargs *x) {
	// mouseMoveEvent(QMouseEvent*)
	this->QWidget::mouseMoveEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_222(xargs *x) {
	// wheelEvent(QWheelEvent*)
	this->QWidget::wheelEvent((QWheelEvent*)x[1].x_voidp);
    }
    void x_223(xargs *x) {
	// keyPressEvent(QKeyEvent*)
	this->QWidget::keyPressEvent((QKeyEvent*)x[1].x_voidp);
    }
    void x_224(xargs *x) {
	// keyReleaseEvent(QKeyEvent*)
	this->QWidget::keyReleaseEvent((QKeyEvent*)x[1].x_voidp);
    }
    void x_225(xargs *x) {
	// focusInEvent(QFocusEvent*)
	this->QWidget::focusInEvent((QFocusEvent*)x[1].x_voidp);
    }
    void x_226(xargs *x) {
	// focusOutEvent(QFocusEvent*)
	this->QWidget::focusOutEvent((QFocusEvent*)x[1].x_voidp);
    }
    void x_227(xargs *x) {
	// enterEvent(QEvent*)
	this->QWidget::enterEvent((QEvent*)x[1].x_voidp);
    }
    void x_228(xargs *x) {
	// leaveEvent(QEvent*)
	this->QWidget::leaveEvent((QEvent*)x[1].x_voidp);
    }
    void x_229(xargs *x) {
	// paintEvent(QPaintEvent*)
	this->QWidget::paintEvent((QPaintEvent*)x[1].x_voidp);
    }
    void x_230(xargs *x) {
	// moveEvent(QMoveEvent*)
	this->QWidget::moveEvent((QMoveEvent*)x[1].x_voidp);
    }
    void x_231(xargs *x) {
	// resizeEvent(QResizeEvent*)
	this->QWidget::resizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_232(xargs *x) {
	// closeEvent(QCloseEvent*)
	this->QWidget::closeEvent((QCloseEvent*)x[1].x_voidp);
    }
    void x_233(xargs *x) {
	// contextMenuEvent(QContextMenuEvent*)
	this->QWidget::contextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_234(xargs *x) {
	// imStartEvent(QIMEvent*)
	this->QWidget::imStartEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_235(xargs *x) {
	// imComposeEvent(QIMEvent*)
	this->QWidget::imComposeEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_236(xargs *x) {
	// imEndEvent(QIMEvent*)
	this->QWidget::imEndEvent((QIMEvent*)x[1].x_voidp);
    }
    void x_237(xargs *x) {
	// tabletEvent(QTabletEvent*)
	this->QWidget::tabletEvent((QTabletEvent*)x[1].x_voidp);
    }
    void x_238(xargs *x) {
	// dragEnterEvent(QDragEnterEvent*)
	this->QWidget::dragEnterEvent((QDragEnterEvent*)x[1].x_voidp);
    }
    void x_239(xargs *x) {
	// dragMoveEvent(QDragMoveEvent*)
	this->QWidget::dragMoveEvent((QDragMoveEvent*)x[1].x_voidp);
    }
    void x_240(xargs *x) {
	// dragLeaveEvent(QDragLeaveEvent*)
	this->QWidget::dragLeaveEvent((QDragLeaveEvent*)x[1].x_voidp);
    }
    void x_241(xargs *x) {
	// dropEvent(QDropEvent*)
	this->QWidget::dropEvent((QDropEvent*)x[1].x_voidp);
    }
    void x_242(xargs *x) {
	// showEvent(QShowEvent*)
	this->QWidget::showEvent((QShowEvent*)x[1].x_voidp);
    }
    void x_243(xargs *x) {
	// hideEvent(QHideEvent*)
	this->QWidget::hideEvent((QHideEvent*)x[1].x_voidp);
    }
    void x_244(xargs *x) {
	// updateMask()
	this->QWidget::updateMask();
    }
    void x_245(xargs *x) {
	// styleChange(QStyle&)
	this->QWidget::styleChange(*(QStyle *)x[1].x_voidp);
    }
    void x_246(xargs *x) {
	// enabledChange(bool)
	this->QWidget::enabledChange((bool)x[1].x_bool);
    }
    void x_247(xargs *x) {
	// paletteChange(const QPalette&)
	this->QWidget::paletteChange(*(const QPalette *)x[1].x_voidp);
    }
    void x_248(xargs *x) {
	// fontChange(const QFont&)
	this->QWidget::fontChange(*(const QFont *)x[1].x_voidp);
    }
    void x_249(xargs *x) {
	// windowActivationChange(bool)
	this->QWidget::windowActivationChange((bool)x[1].x_bool);
    }
    void x_250(xargs *x) const {
	// metric(int)
	int xret = this->QWidget::metric((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_251(xargs *x) {
	// resetInputContext()
	this->QWidget::resetInputContext();
    }
    void x_252(xargs *x) {
	// create(WId, bool, bool)
	this->QWidget::create(*(WId *)x[1].x_voidp,(bool)x[2].x_bool,(bool)x[3].x_bool);
    }
    void x_253(xargs *x) {
	// create(WId, bool)
	this->QWidget::create(*(WId *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_254(xargs *x) {
	// create(WId)
	this->QWidget::create(*(WId *)x[1].x_voidp);
    }
    void x_255(xargs *x) {
	// create()
	this->QWidget::create();
    }
    void x_256(xargs *x) {
	// destroy(bool, bool)
	this->QWidget::destroy((bool)x[1].x_bool,(bool)x[2].x_bool);
    }
    void x_257(xargs *x) {
	// destroy(bool)
	this->QWidget::destroy((bool)x[1].x_bool);
    }
    void x_258(xargs *x) {
	// destroy()
	this->QWidget::destroy();
    }
    void x_259(xargs *x) const {
	// getWState()
	uint xret = this->QWidget::getWState();
	x[0].x_uint = (uint)xret;
    }
    void x_260(xargs *x) {
	// setWState(uint)
	this->QWidget::setWState((uint)x[1].x_uint);
    }
    void x_261(xargs *x) {
	// clearWState(uint)
	this->QWidget::clearWState((uint)x[1].x_uint);
    }
    void x_262(xargs *x) const {
	// getWFlags()
	Qt::WFlags xret = this->QWidget::getWFlags();
	x[0].x_voidp = (void*)new Qt::WFlags(xret);
    }
    void x_263(xargs *x) {
	// setWFlags(Qt::WFlags)
	this->QWidget::setWFlags(*(Qt::WFlags *)x[1].x_voidp);
    }
    void x_264(xargs *x) {
	// clearWFlags(Qt::WFlags)
	this->QWidget::clearWFlags(*(Qt::WFlags *)x[1].x_voidp);
    }
    void x_265(xargs *x) {
	// focusNextPrevChild(bool)
	bool xret = this->QWidget::focusNextPrevChild((bool)x[1].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_266(xargs *x) {
	// extraData()
	QWExtra* xret = this->QWidget::extraData();
	x[0].x_voidp = (void*)xret;
    }
    void x_267(xargs *x) {
	// topData()
	QTLWExtra* xret = this->QWidget::topData();
	x[0].x_voidp = (void*)xret;
    }
    void x_268(xargs *x) {
	// focusData()
	QFocusData* xret = this->QWidget::focusData();
	x[0].x_voidp = (void*)xret;
    }
    void x_269(xargs *x) {
	// setKeyCompression(bool)
	this->QWidget::setKeyCompression((bool)x[1].x_bool);
    }
    void x_270(xargs *x) {
	// setMicroFocusHint(int, int, int, int, bool, QFont*)
	this->QWidget::setMicroFocusHint((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(bool)x[5].x_bool,(QFont*)x[6].x_voidp);
    }
    void x_271(xargs *x) {
	// setMicroFocusHint(int, int, int, int, bool)
	this->QWidget::setMicroFocusHint((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(bool)x[5].x_bool);
    }
    void x_272(xargs *x) {
	// setMicroFocusHint(int, int, int, int)
	this->QWidget::setMicroFocusHint((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    virtual void adjustSize() {
	xargs x[1];
	if(call_method((void*)this, 9618, x)) return;
	this->QWidget::adjustSize();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual bool close(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9605, x)) return (bool)x[0].x_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5558, x)) return (bool)x[0].x_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9714, x)) return;
	this->QWidget::contextMenuEvent(x1);
    }
    virtual void create(WId x1, bool x2, bool x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 9733, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	xargs x[1];
	if(call_method((void*)this, 9643, x)) return (bool)x[0].x_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void destroy(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 9737, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9721, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9722, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9727, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void enterEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9698, x)) return (bool)x[0].x_bool;
	return this->QWidget::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 5411, x)) return (bool)x[0].x_bool;
	return this->QObject::eventFilter(x1, x2);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9746, x)) return (bool)x[0].x_bool;
	return this->QWidget::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9729, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9617, x)) return (int)x[0].x_int;
	return this->QWidget::heightForWidth(x1);
    }
    virtual void hide() {
	xargs x[1];
	if(call_method((void*)this, 9675, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9716, x)) return;
	this->QWidget::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9717, x)) return;
	this->QWidget::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9715, x)) return;
	this->QWidget::imStartEvent(x1);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9704, x)) return;
	this->QWidget::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9705, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9731, x)) return (int)x[0].x_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 9614, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9701, x)) return;
	this->QWidget::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9702, x)) return;
	this->QWidget::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9699, x)) return;
	this->QWidget::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9700, x)) return;
	this->QWidget::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9687, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9710, x)) return;
	this->QWidget::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void polish() {
	xargs x[1];
	if(call_method((void*)this, 9681, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5434, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_voidp = (void*)&x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 9621, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9689, x)) return;
	this->QWidget::resize(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9712, x)) return;
	this->QWidget::resizeEvent(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void setAcceptDrops(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9638, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	xargs x[1];
	if(call_method((void*)this, 9592, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAutoMask(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9639, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9550, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9641, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9590, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setCaption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9656, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9577, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9654, x)) return;
	this->QWidget::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9554, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFocus() {
	xargs x[1];
	if(call_method((void*)this, 9660, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9595, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9597, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9571, x)) return;
	this->QWidget::setFont(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9692, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 9691, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setIcon(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9657, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9658, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setKeyCompression(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9750, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setMask(const QBitmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9584, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9585, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9527, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	xargs x[7];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_bool = (bool)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 9751, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMinimumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setMouseTracking(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9659, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9494, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9560, x)) return;
	this->QWidget::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9565, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9567, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9534, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9616, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9662, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9744, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	xargs x[2];
	x[1].x_uint = (uint)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void show() {
	xargs x[1];
	if(call_method((void*)this, 9674, x)) return;
	this->QWidget::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9723, x)) return;
	this->QWidget::showEvent(x1);
    }
    virtual void showMaximized() {
	xargs x[1];
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	xargs x[1];
	if(call_method((void*)this, 9677, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	xargs x[1];
	if(call_method((void*)this, 9680, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 9613, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	xargs x[1];
	if(call_method((void*)this, 9615, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].x_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9726, x)) return;
	this->QWidget::styleChange(x1);
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void unsetCursor() {
	xargs x[1];
	if(call_method((void*)this, 9578, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	xargs x[1];
	if(call_method((void*)this, 9725, x)) return;
	this->QWidget::updateMask();
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9703, x)) return;
	this->QWidget::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9730, x)) return;
	this->QWidget::windowActivationChange(x1);
    }
    ~x_QWidget() {}
};
void xcall_QWidget(xargs *x, void *s, int xi) {
    x_QWidget *xself = (x_QWidget*)s;
    switch(xi) {
	case 0: x_QWidget::x_0(x);	break;
	case 1: x_QWidget::x_1(x);	break;
	case 2: x_QWidget::x_2(x);	break;
	case 3: x_QWidget::x_3(x);	break;
	case 4: x_QWidget::x_4(x);	break;
	case 5: x_QWidget::x_5(x);	break;
	case 6: x_QWidget::x_6(x);	break;
	case 7: x_QWidget::x_7(x);	break;
	case 8: x_QWidget::x_8(x);	break;
	case 9: x_QWidget::x_9(x);	break;
	case 10: x_QWidget::x_10(x);	break;
	case 11: x_QWidget::x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
	case 25: xself->x_25(x);	break;
	case 26: xself->x_26(x);	break;
	case 27: xself->x_27(x);	break;
	case 28: xself->x_28(x);	break;
	case 29: xself->x_29(x);	break;
	case 30: xself->x_30(x);	break;
	case 31: xself->x_31(x);	break;
	case 32: xself->x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: xself->x_54(x);	break;
	case 55: xself->x_55(x);	break;
	case 56: xself->x_56(x);	break;
	case 57: xself->x_57(x);	break;
	case 58: xself->x_58(x);	break;
	case 59: xself->x_59(x);	break;
	case 60: xself->x_60(x);	break;
	case 61: xself->x_61(x);	break;
	case 62: xself->x_62(x);	break;
	case 63: xself->x_63(x);	break;
	case 64: xself->x_64(x);	break;
	case 65: xself->x_65(x);	break;
	case 66: xself->x_66(x);	break;
	case 67: xself->x_67(x);	break;
	case 68: xself->x_68(x);	break;
	case 69: xself->x_69(x);	break;
	case 70: xself->x_70(x);	break;
	case 71: xself->x_71(x);	break;
	case 72: xself->x_72(x);	break;
	case 73: xself->x_73(x);	break;
	case 74: xself->x_74(x);	break;
	case 75: xself->x_75(x);	break;
	case 76: xself->x_76(x);	break;
	case 77: xself->x_77(x);	break;
	case 78: xself->x_78(x);	break;
	case 79: xself->x_79(x);	break;
	case 80: xself->x_80(x);	break;
	case 81: xself->x_81(x);	break;
	case 82: xself->x_82(x);	break;
	case 83: xself->x_83(x);	break;
	case 84: xself->x_84(x);	break;
	case 85: xself->x_85(x);	break;
	case 86: xself->x_86(x);	break;
	case 87: xself->x_87(x);	break;
	case 88: xself->x_88(x);	break;
	case 89: xself->x_89(x);	break;
	case 90: xself->x_90(x);	break;
	case 91: xself->x_91(x);	break;
	case 92: xself->x_92(x);	break;
	case 93: xself->x_93(x);	break;
	case 94: xself->x_94(x);	break;
	case 95: xself->x_95(x);	break;
	case 96: xself->x_96(x);	break;
	case 97: xself->x_97(x);	break;
	case 98: xself->x_98(x);	break;
	case 99: xself->x_99(x);	break;
	case 100: xself->x_100(x);	break;
	case 101: xself->x_101(x);	break;
	case 102: xself->x_102(x);	break;
	case 103: xself->x_103(x);	break;
	case 104: xself->x_104(x);	break;
	case 105: xself->x_105(x);	break;
	case 106: xself->x_106(x);	break;
	case 107: xself->x_107(x);	break;
	case 108: xself->x_108(x);	break;
	case 109: xself->x_109(x);	break;
	case 110: xself->x_110(x);	break;
	case 111: xself->x_111(x);	break;
	case 112: xself->x_112(x);	break;
	case 113: xself->x_113(x);	break;
	case 114: xself->x_114(x);	break;
	case 115: xself->x_115(x);	break;
	case 116: xself->x_116(x);	break;
	case 117: xself->x_117(x);	break;
	case 118: xself->x_118(x);	break;
	case 119: xself->x_119(x);	break;
	case 120: xself->x_120(x);	break;
	case 121: xself->x_121(x);	break;
	case 122: xself->x_122(x);	break;
	case 123: xself->x_123(x);	break;
	case 124: xself->x_124(x);	break;
	case 125: xself->x_125(x);	break;
	case 126: xself->x_126(x);	break;
	case 127: xself->x_127(x);	break;
	case 128: xself->x_128(x);	break;
	case 129: xself->x_129(x);	break;
	case 130: xself->x_130(x);	break;
	case 131: xself->x_131(x);	break;
	case 132: xself->x_132(x);	break;
	case 133: xself->x_133(x);	break;
	case 134: xself->x_134(x);	break;
	case 135: xself->x_135(x);	break;
	case 136: xself->x_136(x);	break;
	case 137: xself->x_137(x);	break;
	case 138: xself->x_138(x);	break;
	case 139: xself->x_139(x);	break;
	case 140: xself->x_140(x);	break;
	case 141: xself->x_141(x);	break;
	case 142: xself->x_142(x);	break;
	case 143: xself->x_143(x);	break;
	case 144: xself->x_144(x);	break;
	case 145: xself->x_145(x);	break;
	case 146: xself->x_146(x);	break;
	case 147: xself->x_147(x);	break;
	case 148: xself->x_148(x);	break;
	case 149: xself->x_149(x);	break;
	case 150: xself->x_150(x);	break;
	case 151: xself->x_151(x);	break;
	case 152: xself->x_152(x);	break;
	case 153: xself->x_153(x);	break;
	case 154: xself->x_154(x);	break;
	case 155: xself->x_155(x);	break;
	case 156: xself->x_156(x);	break;
	case 157: xself->x_157(x);	break;
	case 158: xself->x_158(x);	break;
	case 159: xself->x_159(x);	break;
	case 160: xself->x_160(x);	break;
	case 161: xself->x_161(x);	break;
	case 162: xself->x_162(x);	break;
	case 163: xself->x_163(x);	break;
	case 164: xself->x_164(x);	break;
	case 165: xself->x_165(x);	break;
	case 166: xself->x_166(x);	break;
	case 167: xself->x_167(x);	break;
	case 168: xself->x_168(x);	break;
	case 169: xself->x_169(x);	break;
	case 170: xself->x_170(x);	break;
	case 171: xself->x_171(x);	break;
	case 172: xself->x_172(x);	break;
	case 173: xself->x_173(x);	break;
	case 174: xself->x_174(x);	break;
	case 175: xself->x_175(x);	break;
	case 176: xself->x_176(x);	break;
	case 177: xself->x_177(x);	break;
	case 178: xself->x_178(x);	break;
	case 179: xself->x_179(x);	break;
	case 180: xself->x_180(x);	break;
	case 181: xself->x_181(x);	break;
	case 182: xself->x_182(x);	break;
	case 183: xself->x_183(x);	break;
	case 184: xself->x_184(x);	break;
	case 185: xself->x_185(x);	break;
	case 186: xself->x_186(x);	break;
	case 187: xself->x_187(x);	break;
	case 188: xself->x_188(x);	break;
	case 189: xself->x_189(x);	break;
	case 190: xself->x_190(x);	break;
	case 191: xself->x_191(x);	break;
	case 192: xself->x_192(x);	break;
	case 193: xself->x_193(x);	break;
	case 194: xself->x_194(x);	break;
	case 195: xself->x_195(x);	break;
	case 196: xself->x_196(x);	break;
	case 197: xself->x_197(x);	break;
	case 198: xself->x_198(x);	break;
	case 199: xself->x_199(x);	break;
	case 200: xself->x_200(x);	break;
	case 201: xself->x_201(x);	break;
	case 202: xself->x_202(x);	break;
	case 203: xself->x_203(x);	break;
	case 204: xself->x_204(x);	break;
	case 205: xself->x_205(x);	break;
	case 206: xself->x_206(x);	break;
	case 207: xself->x_207(x);	break;
	case 208: xself->x_208(x);	break;
	case 209: xself->x_209(x);	break;
	case 210: xself->x_210(x);	break;
	case 211: xself->x_211(x);	break;
	case 212: x_QWidget::x_212(x);	break;
	case 213: x_QWidget::x_213(x);	break;
	case 214: x_QWidget::x_214(x);	break;
	case 215: x_QWidget::x_215(x);	break;
	case 216: x_QWidget::x_216(x);	break;
	case 217: xself->x_217(x);	break;
	case 218: xself->x_218(x);	break;
	case 219: xself->x_219(x);	break;
	case 220: xself->x_220(x);	break;
	case 221: xself->x_221(x);	break;
	case 222: xself->x_222(x);	break;
	case 223: xself->x_223(x);	break;
	case 224: xself->x_224(x);	break;
	case 225: xself->x_225(x);	break;
	case 226: xself->x_226(x);	break;
	case 227: xself->x_227(x);	break;
	case 228: xself->x_228(x);	break;
	case 229: xself->x_229(x);	break;
	case 230: xself->x_230(x);	break;
	case 231: xself->x_231(x);	break;
	case 232: xself->x_232(x);	break;
	case 233: xself->x_233(x);	break;
	case 234: xself->x_234(x);	break;
	case 235: xself->x_235(x);	break;
	case 236: xself->x_236(x);	break;
	case 237: xself->x_237(x);	break;
	case 238: xself->x_238(x);	break;
	case 239: xself->x_239(x);	break;
	case 240: xself->x_240(x);	break;
	case 241: xself->x_241(x);	break;
	case 242: xself->x_242(x);	break;
	case 243: xself->x_243(x);	break;
	case 244: xself->x_244(x);	break;
	case 245: xself->x_245(x);	break;
	case 246: xself->x_246(x);	break;
	case 247: xself->x_247(x);	break;
	case 248: xself->x_248(x);	break;
	case 249: xself->x_249(x);	break;
	case 250: xself->x_250(x);	break;
	case 251: xself->x_251(x);	break;
	case 252: xself->x_252(x);	break;
	case 253: xself->x_253(x);	break;
	case 254: xself->x_254(x);	break;
	case 255: xself->x_255(x);	break;
	case 256: xself->x_256(x);	break;
	case 257: xself->x_257(x);	break;
	case 258: xself->x_258(x);	break;
	case 259: xself->x_259(x);	break;
	case 260: xself->x_260(x);	break;
	case 261: xself->x_261(x);	break;
	case 262: xself->x_262(x);	break;
	case 263: xself->x_263(x);	break;
	case 264: xself->x_264(x);	break;
	case 265: xself->x_265(x);	break;
	case 266: xself->x_266(x);	break;
	case 267: xself->x_267(x);	break;
	case 268: xself->x_268(x);	break;
	case 269: xself->x_269(x);	break;
	case 270: xself->x_270(x);	break;
	case 271: xself->x_271(x);	break;
	case 272: xself->x_272(x);	break;
	case 273: delete (QWidget*)xself;	break;
    }
}
