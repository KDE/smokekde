//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qcursor.h>
#include <qcolor.h>
#include <qstring.h>
#include <qfont.h>
#include <qbitmap.h>
#include <qsize.h>
#include <qsizepolicy.h>
#include <qvariant.h>
#include <qregion.h>
#include <qscrollview.h>
#include <qpalette.h>
#include <qnamespace.h>
#include <qpixmap.h>
#include <qrect.h>
#include <qstyle.h>
#include <qscrollbar.h>

class x_QScrollView : public QScrollView {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QScrollView::Default;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QScrollView::Manual;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QScrollView::AutoOne;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QScrollView::AutoOneFit;
    }
    static void x_4(xargs *x) {
	x[0].x_long = (long)QScrollView::Auto;
    }
    static void x_5(xargs *x) {
	x[0].x_long = (long)QScrollView::AlwaysOff;
    }
    static void x_6(xargs *x) {
	x[0].x_long = (long)QScrollView::AlwaysOn;
    }
    static void x_7(xargs *x) {
	// QScrollView(QWidget*, const char*, Qt::WFlags)
	x_QScrollView* xret = new x_QScrollView((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp,*(Qt::WFlags *)x[3].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QScrollView(QWidget* x1, const char* x2, Qt::WFlags x3) : QScrollView(x1, x2, x3) {
    }
    static void x_8(xargs *x) {
	// QScrollView(QWidget*, const char*)
	x_QScrollView* xret = new x_QScrollView((QWidget*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QScrollView(QWidget* x1, const char* x2) : QScrollView(x1, x2) {
    }
    static void x_9(xargs *x) {
	// QScrollView(QWidget*)
	x_QScrollView* xret = new x_QScrollView((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QScrollView(QWidget* x1) : QScrollView(x1) {
    }
    static void x_10(xargs *x) {
	// QScrollView()
	x_QScrollView* xret = new x_QScrollView();
	x[0].x_voidp = (void*)xret;
    }
    x_QScrollView() : QScrollView() {
    }
    void x_11(xargs *x) {
	// setResizePolicy(QScrollView::ResizePolicy)
	this->QScrollView::setResizePolicy((QScrollView::ResizePolicy)x[1].x_long);
    }
    void x_12(xargs *x) const {
	// resizePolicy()
	QScrollView::ResizePolicy xret = this->QScrollView::resizePolicy();
	x[0].x_long = (long)xret;
    }
    void x_13(xargs *x) {
	// styleChange(QStyle&)
	this->QScrollView::styleChange(*(QStyle *)x[1].x_voidp);
    }
    void x_14(xargs *x) {
	// removeChild(QWidget*)
	this->QScrollView::removeChild((QWidget*)x[1].x_voidp);
    }
    void x_15(xargs *x) {
	// addChild(QWidget*, int, int)
	this->QScrollView::addChild((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_16(xargs *x) {
	// addChild(QWidget*, int)
	this->QScrollView::addChild((QWidget*)x[1].x_voidp,(int)x[2].x_int);
    }
    void x_17(xargs *x) {
	// addChild(QWidget*)
	this->QScrollView::addChild((QWidget*)x[1].x_voidp);
    }
    void x_18(xargs *x) {
	// moveChild(QWidget*, int, int)
	this->QScrollView::moveChild((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_19(xargs *x) {
	// childX(QWidget*)
	int xret = this->QScrollView::childX((QWidget*)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_20(xargs *x) {
	// childY(QWidget*)
	int xret = this->QScrollView::childY((QWidget*)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    void x_21(xargs *x) {
	// childIsVisible(QWidget*)
	bool xret = this->QScrollView::childIsVisible((QWidget*)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_22(xargs *x) {
	// showChild(QWidget*, bool)
	this->QScrollView::showChild((QWidget*)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_23(xargs *x) {
	// showChild(QWidget*)
	this->QScrollView::showChild((QWidget*)x[1].x_voidp);
    }
    void x_24(xargs *x) const {
	// vScrollBarMode()
	QScrollView::ScrollBarMode xret = this->QScrollView::vScrollBarMode();
	x[0].x_long = (long)xret;
    }
    void x_25(xargs *x) {
	// setVScrollBarMode(QScrollView::ScrollBarMode)
	this->QScrollView::setVScrollBarMode((QScrollView::ScrollBarMode)x[1].x_long);
    }
    void x_26(xargs *x) const {
	// hScrollBarMode()
	QScrollView::ScrollBarMode xret = this->QScrollView::hScrollBarMode();
	x[0].x_long = (long)xret;
    }
    void x_27(xargs *x) {
	// setHScrollBarMode(QScrollView::ScrollBarMode)
	this->QScrollView::setHScrollBarMode((QScrollView::ScrollBarMode)x[1].x_long);
    }
    void x_28(xargs *x) const {
	// cornerWidget()
	QWidget* xret = this->QScrollView::cornerWidget();
	x[0].x_voidp = (void*)xret;
    }
    void x_29(xargs *x) {
	// setCornerWidget(QWidget*)
	this->QScrollView::setCornerWidget((QWidget*)x[1].x_voidp);
    }
    void x_30(xargs *x) const {
	// horizontalScrollBar()
	QScrollBar* xret = this->QScrollView::horizontalScrollBar();
	x[0].x_voidp = (void*)xret;
    }
    void x_31(xargs *x) const {
	// verticalScrollBar()
	QScrollBar* xret = this->QScrollView::verticalScrollBar();
	x[0].x_voidp = (void*)xret;
    }
    void x_32(xargs *x) const {
	// viewport()
	QWidget* xret = this->QScrollView::viewport();
	x[0].x_voidp = (void*)xret;
    }
    void x_33(xargs *x) const {
	// clipper()
	QWidget* xret = this->QScrollView::clipper();
	x[0].x_voidp = (void*)xret;
    }
    void x_34(xargs *x) const {
	// visibleWidth()
	int xret = this->QScrollView::visibleWidth();
	x[0].x_int = (int)xret;
    }
    void x_35(xargs *x) const {
	// visibleHeight()
	int xret = this->QScrollView::visibleHeight();
	x[0].x_int = (int)xret;
    }
    void x_36(xargs *x) const {
	// contentsWidth()
	int xret = this->QScrollView::contentsWidth();
	x[0].x_int = (int)xret;
    }
    void x_37(xargs *x) const {
	// contentsHeight()
	int xret = this->QScrollView::contentsHeight();
	x[0].x_int = (int)xret;
    }
    void x_38(xargs *x) const {
	// contentsX()
	int xret = this->QScrollView::contentsX();
	x[0].x_int = (int)xret;
    }
    void x_39(xargs *x) const {
	// contentsY()
	int xret = this->QScrollView::contentsY();
	x[0].x_int = (int)xret;
    }
    void x_40(xargs *x) {
	// resize(int, int)
	this->QScrollView::resize((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_41(xargs *x) {
	// resize(const QSize&)
	this->QScrollView::resize(*(const QSize *)x[1].x_voidp);
    }
    void x_42(xargs *x) {
	// show()
	this->QScrollView::show();
    }
    void x_43(xargs *x) {
	// updateContents(int, int, int, int)
	this->QScrollView::updateContents((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_44(xargs *x) {
	// updateContents(const QRect&)
	this->QScrollView::updateContents(*(const QRect *)x[1].x_voidp);
    }
    void x_45(xargs *x) {
	// updateContents()
	this->QScrollView::updateContents();
    }
    void x_46(xargs *x) {
	// repaintContents(int, int, int, int, bool)
	this->QScrollView::repaintContents((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(bool)x[5].x_bool);
    }
    void x_47(xargs *x) {
	// repaintContents(int, int, int, int)
	this->QScrollView::repaintContents((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_48(xargs *x) {
	// repaintContents(const QRect&, bool)
	this->QScrollView::repaintContents(*(const QRect *)x[1].x_voidp,(bool)x[2].x_bool);
    }
    void x_49(xargs *x) {
	// repaintContents(const QRect&)
	this->QScrollView::repaintContents(*(const QRect *)x[1].x_voidp);
    }
    void x_50(xargs *x) {
	// repaintContents(bool)
	this->QScrollView::repaintContents((bool)x[1].x_bool);
    }
    void x_51(xargs *x) {
	// repaintContents()
	this->QScrollView::repaintContents();
    }
    void x_52(xargs *x) const {
	// contentsToViewport(int, int, int&, int&)
	this->QScrollView::contentsToViewport((int)x[1].x_int,(int)x[2].x_int,*(int *)x[3].x_voidp,*(int *)x[4].x_voidp);
    }
    void x_53(xargs *x) const {
	// viewportToContents(int, int, int&, int&)
	this->QScrollView::viewportToContents((int)x[1].x_int,(int)x[2].x_int,*(int *)x[3].x_voidp,*(int *)x[4].x_voidp);
    }
    void x_54(xargs *x) const {
	// contentsToViewport(const QPoint&)
	QPoint xret = this->QScrollView::contentsToViewport(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_55(xargs *x) const {
	// viewportToContents(const QPoint&)
	QPoint xret = this->QScrollView::viewportToContents(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QPoint(xret);
    }
    void x_56(xargs *x) {
	// enableClipper(bool)
	this->QScrollView::enableClipper((bool)x[1].x_bool);
    }
    void x_57(xargs *x) {
	// setStaticBackground(bool)
	this->QScrollView::setStaticBackground((bool)x[1].x_bool);
    }
    void x_58(xargs *x) const {
	// hasStaticBackground()
	bool xret = this->QScrollView::hasStaticBackground();
	x[0].x_bool = (bool)xret;
    }
    void x_59(xargs *x) const {
	// viewportSize(int, int)
	QSize xret = this->QScrollView::viewportSize((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_60(xargs *x) const {
	// sizeHint()
	QSize xret = this->QScrollView::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_61(xargs *x) const {
	// minimumSizeHint()
	QSize xret = this->QScrollView::minimumSizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_62(xargs *x) {
	// removeChild(QObject*)
	this->QScrollView::removeChild((QObject*)x[1].x_voidp);
    }
    void x_63(xargs *x) {
	// setDragAutoScroll(bool)
	this->QScrollView::setDragAutoScroll((bool)x[1].x_bool);
    }
    void x_64(xargs *x) const {
	// dragAutoScroll()
	bool xret = this->QScrollView::dragAutoScroll();
	x[0].x_bool = (bool)xret;
    }
    void x_65(xargs *x) {
	// resizeContents(int, int)
	this->QScrollView::resizeContents((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_66(xargs *x) {
	// scrollBy(int, int)
	this->QScrollView::scrollBy((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_67(xargs *x) {
	// setContentsPos(int, int)
	this->QScrollView::setContentsPos((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_68(xargs *x) {
	// ensureVisible(int, int)
	this->QScrollView::ensureVisible((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_69(xargs *x) {
	// ensureVisible(int, int, int, int)
	this->QScrollView::ensureVisible((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_70(xargs *x) {
	// center(int, int)
	this->QScrollView::center((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_71(xargs *x) {
	// center(int, int, float, float)
	this->QScrollView::center((int)x[1].x_int,(int)x[2].x_int,(float)x[3].x_float,(float)x[4].x_float);
    }
    void x_72(xargs *x) {
	// updateScrollBars()
	this->QScrollView::updateScrollBars();
    }
    void x_73(xargs *x) {
	// setEnabled(bool)
	this->QScrollView::setEnabled((bool)x[1].x_bool);
    }
    void x_74(xargs *x) {
	// contentsMoving(int, int)
	this->QScrollView::contentsMoving((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_75(xargs *x) {
	// drawContents(QPainter*, int, int, int, int)
	this->QScrollView::drawContents((QPainter*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_76(xargs *x) {
	// drawContentsOffset(QPainter*, int, int, int, int, int, int)
	this->QScrollView::drawContentsOffset((QPainter*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(int)x[6].x_int,(int)x[7].x_int);
    }
    void x_77(xargs *x) {
	// contentsMousePressEvent(QMouseEvent*)
	this->QScrollView::contentsMousePressEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_78(xargs *x) {
	// contentsMouseReleaseEvent(QMouseEvent*)
	this->QScrollView::contentsMouseReleaseEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_79(xargs *x) {
	// contentsMouseDoubleClickEvent(QMouseEvent*)
	this->QScrollView::contentsMouseDoubleClickEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_80(xargs *x) {
	// contentsMouseMoveEvent(QMouseEvent*)
	this->QScrollView::contentsMouseMoveEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_81(xargs *x) {
	// contentsDragEnterEvent(QDragEnterEvent*)
	this->QScrollView::contentsDragEnterEvent((QDragEnterEvent*)x[1].x_voidp);
    }
    void x_82(xargs *x) {
	// contentsDragMoveEvent(QDragMoveEvent*)
	this->QScrollView::contentsDragMoveEvent((QDragMoveEvent*)x[1].x_voidp);
    }
    void x_83(xargs *x) {
	// contentsDragLeaveEvent(QDragLeaveEvent*)
	this->QScrollView::contentsDragLeaveEvent((QDragLeaveEvent*)x[1].x_voidp);
    }
    void x_84(xargs *x) {
	// contentsDropEvent(QDropEvent*)
	this->QScrollView::contentsDropEvent((QDropEvent*)x[1].x_voidp);
    }
    void x_85(xargs *x) {
	// contentsWheelEvent(QWheelEvent*)
	this->QScrollView::contentsWheelEvent((QWheelEvent*)x[1].x_voidp);
    }
    void x_86(xargs *x) {
	// contentsContextMenuEvent(QContextMenuEvent*)
	this->QScrollView::contentsContextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_87(xargs *x) {
	// viewportPaintEvent(QPaintEvent*)
	this->QScrollView::viewportPaintEvent((QPaintEvent*)x[1].x_voidp);
    }
    void x_88(xargs *x) {
	// viewportResizeEvent(QResizeEvent*)
	this->QScrollView::viewportResizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_89(xargs *x) {
	// viewportMousePressEvent(QMouseEvent*)
	this->QScrollView::viewportMousePressEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_90(xargs *x) {
	// viewportMouseReleaseEvent(QMouseEvent*)
	this->QScrollView::viewportMouseReleaseEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_91(xargs *x) {
	// viewportMouseDoubleClickEvent(QMouseEvent*)
	this->QScrollView::viewportMouseDoubleClickEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_92(xargs *x) {
	// viewportMouseMoveEvent(QMouseEvent*)
	this->QScrollView::viewportMouseMoveEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_93(xargs *x) {
	// viewportDragEnterEvent(QDragEnterEvent*)
	this->QScrollView::viewportDragEnterEvent((QDragEnterEvent*)x[1].x_voidp);
    }
    void x_94(xargs *x) {
	// viewportDragMoveEvent(QDragMoveEvent*)
	this->QScrollView::viewportDragMoveEvent((QDragMoveEvent*)x[1].x_voidp);
    }
    void x_95(xargs *x) {
	// viewportDragLeaveEvent(QDragLeaveEvent*)
	this->QScrollView::viewportDragLeaveEvent((QDragLeaveEvent*)x[1].x_voidp);
    }
    void x_96(xargs *x) {
	// viewportDropEvent(QDropEvent*)
	this->QScrollView::viewportDropEvent((QDropEvent*)x[1].x_voidp);
    }
    void x_97(xargs *x) {
	// viewportWheelEvent(QWheelEvent*)
	this->QScrollView::viewportWheelEvent((QWheelEvent*)x[1].x_voidp);
    }
    void x_98(xargs *x) {
	// viewportContextMenuEvent(QContextMenuEvent*)
	this->QScrollView::viewportContextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_99(xargs *x) {
	// frameChanged()
	this->QScrollView::frameChanged();
    }
    void x_100(xargs *x) {
	// setMargins(int, int, int, int)
	this->QScrollView::setMargins((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_101(xargs *x) const {
	// leftMargin()
	int xret = this->QScrollView::leftMargin();
	x[0].x_int = (int)xret;
    }
    void x_102(xargs *x) const {
	// topMargin()
	int xret = this->QScrollView::topMargin();
	x[0].x_int = (int)xret;
    }
    void x_103(xargs *x) const {
	// rightMargin()
	int xret = this->QScrollView::rightMargin();
	x[0].x_int = (int)xret;
    }
    void x_104(xargs *x) const {
	// bottomMargin()
	int xret = this->QScrollView::bottomMargin();
	x[0].x_int = (int)xret;
    }
    void x_105(xargs *x) {
	// focusNextPrevChild(bool)
	bool xret = this->QScrollView::focusNextPrevChild((bool)x[1].x_bool);
	x[0].x_bool = (bool)xret;
    }
    void x_106(xargs *x) {
	// setHBarGeometry(QScrollBar&, int, int, int, int)
	this->QScrollView::setHBarGeometry(*(QScrollBar *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_107(xargs *x) {
	// setVBarGeometry(QScrollBar&, int, int, int, int)
	this->QScrollView::setVBarGeometry(*(QScrollBar *)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_108(xargs *x) {
	// resizeEvent(QResizeEvent*)
	this->QScrollView::resizeEvent((QResizeEvent*)x[1].x_voidp);
    }
    void x_109(xargs *x) {
	// mousePressEvent(QMouseEvent*)
	this->QScrollView::mousePressEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_110(xargs *x) {
	// mouseReleaseEvent(QMouseEvent*)
	this->QScrollView::mouseReleaseEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_111(xargs *x) {
	// mouseDoubleClickEvent(QMouseEvent*)
	this->QScrollView::mouseDoubleClickEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_112(xargs *x) {
	// mouseMoveEvent(QMouseEvent*)
	this->QScrollView::mouseMoveEvent((QMouseEvent*)x[1].x_voidp);
    }
    void x_113(xargs *x) {
	// wheelEvent(QWheelEvent*)
	this->QScrollView::wheelEvent((QWheelEvent*)x[1].x_voidp);
    }
    void x_114(xargs *x) {
	// contextMenuEvent(QContextMenuEvent*)
	this->QScrollView::contextMenuEvent((QContextMenuEvent*)x[1].x_voidp);
    }
    void x_115(xargs *x) {
	// eventFilter(QObject*, QEvent*)
	bool xret = this->QScrollView::eventFilter((QObject*)x[1].x_voidp,(QEvent*)x[2].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    virtual void addChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6590, x)) return;
	this->QScrollView::addChild(x1, x2, x3);
    }
    virtual void adjustSize() {
	xargs x[1];
	if(call_method((void*)this, 9618, x)) return;
	this->QWidget::adjustSize();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual bool close(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9605, x)) return (bool)x[0].x_bool;
	return this->QWidget::close(x1);
    }
    virtual void closeEvent(QCloseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9713, x)) return;
	this->QWidget::closeEvent(x1);
    }
    virtual bool cmd(int x1, QPainter* x2, QPDevCmdParam* x3) {
	xargs x[4];
	x[1].x_int = (int)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5558, x)) return (bool)x[0].x_bool;
	return this->QPaintDevice::cmd(x1, x2, x3);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void contentsContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6661, x)) return;
	this->QScrollView::contentsContextMenuEvent(x1);
    }
    virtual void contentsDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6656, x)) return;
	this->QScrollView::contentsDragEnterEvent(x1);
    }
    virtual void contentsDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6658, x)) return;
	this->QScrollView::contentsDragLeaveEvent(x1);
    }
    virtual void contentsDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6657, x)) return;
	this->QScrollView::contentsDragMoveEvent(x1);
    }
    virtual void contentsDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6659, x)) return;
	this->QScrollView::contentsDropEvent(x1);
    }
    virtual void contentsMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6654, x)) return;
	this->QScrollView::contentsMouseDoubleClickEvent(x1);
    }
    virtual void contentsMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6655, x)) return;
	this->QScrollView::contentsMouseMoveEvent(x1);
    }
    virtual void contentsMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6652, x)) return;
	this->QScrollView::contentsMousePressEvent(x1);
    }
    virtual void contentsMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6653, x)) return;
	this->QScrollView::contentsMouseReleaseEvent(x1);
    }
    virtual void contentsWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6660, x)) return;
	this->QScrollView::contentsWheelEvent(x1);
    }
    virtual void contextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6689, x)) return;
	this->QScrollView::contextMenuEvent(x1);
    }
    virtual void create(WId x1, bool x2, bool x3) {
	xargs x[4];
	x[1].x_voidp = (void*)&x1;
	x[2].x_bool = (bool)x2;
	x[3].x_bool = (bool)x3;
	if(call_method((void*)this, 9733, x)) return;
	this->QWidget::create(x1, x2, x3);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual bool customWhatsThis() const {
	xargs x[1];
	if(call_method((void*)this, 9643, x)) return (bool)x[0].x_bool;
	return this->QWidget::customWhatsThis();
    }
    virtual void destroy(bool x1, bool x2) {
	xargs x[3];
	x[1].x_bool = (bool)x1;
	x[2].x_bool = (bool)x2;
	if(call_method((void*)this, 9737, x)) return;
	this->QWidget::destroy(x1, x2);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual void dragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9719, x)) return;
	this->QWidget::dragEnterEvent(x1);
    }
    virtual void dragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9721, x)) return;
	this->QWidget::dragLeaveEvent(x1);
    }
    virtual void dragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9720, x)) return;
	this->QWidget::dragMoveEvent(x1);
    }
    virtual void drawContents(QPainter* x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6650, x)) return;
	this->QScrollView::drawContents(x1, x2, x3, x4, x5);
    }
    virtual void drawContentsOffset(QPainter* x1, int x2, int x3, int x4, int x5, int x6, int x7) {
	xargs x[8];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	x[6].x_int = (int)x6;
	x[7].x_int = (int)x7;
	if(call_method((void*)this, 6651, x)) return;
	this->QScrollView::drawContentsOffset(x1, x2, x3, x4, x5, x6, x7);
    }
    virtual void drawFrame(QPainter* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2946, x)) return;
	this->QFrame::drawFrame(x1);
    }
    virtual void dropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9722, x)) return;
	this->QWidget::dropEvent(x1);
    }
    virtual void enabledChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9727, x)) return;
	this->QWidget::enabledChange(x1);
    }
    virtual void enterEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9708, x)) return;
	this->QWidget::enterEvent(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9698, x)) return (bool)x[0].x_bool;
	return this->QWidget::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 6690, x)) return (bool)x[0].x_bool;
	return this->QScrollView::eventFilter(x1, x2);
    }
    virtual void focusInEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9706, x)) return;
	this->QWidget::focusInEvent(x1);
    }
    virtual bool focusNextPrevChild(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6680, x)) return (bool)x[0].x_bool;
	return this->QScrollView::focusNextPrevChild(x1);
    }
    virtual void focusOutEvent(QFocusEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9707, x)) return;
	this->QWidget::focusOutEvent(x1);
    }
    virtual void fontChange(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9729, x)) return;
	this->QWidget::fontChange(x1);
    }
    virtual int fontInf(QFont* x1, int x2) const {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 5563, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontInf(x1, x2);
    }
    virtual int fontMet(QFont* x1, int x2, const char* x3, int x4) const {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_voidp = (void*)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 5560, x)) return (int)x[0].x_int;
	return this->QPaintDevice::fontMet(x1, x2, x3, x4);
    }
    virtual void frameChanged() {
	xargs x[1];
	if(call_method((void*)this, 6674, x)) return;
	this->QScrollView::frameChanged();
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9617, x)) return (int)x[0].x_int;
	return this->QWidget::heightForWidth(x1);
    }
    virtual void hide() {
	xargs x[1];
	if(call_method((void*)this, 9675, x)) return;
	this->QWidget::hide();
    }
    virtual void hideEvent(QHideEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9724, x)) return;
	this->QWidget::hideEvent(x1);
    }
    virtual void imComposeEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9716, x)) return;
	this->QWidget::imComposeEvent(x1);
    }
    virtual void imEndEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9717, x)) return;
	this->QWidget::imEndEvent(x1);
    }
    virtual void imStartEvent(QIMEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9715, x)) return;
	this->QWidget::imStartEvent(x1);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void keyPressEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9704, x)) return;
	this->QWidget::keyPressEvent(x1);
    }
    virtual void keyReleaseEvent(QKeyEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9705, x)) return;
	this->QWidget::keyReleaseEvent(x1);
    }
    virtual void leaveEvent(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9709, x)) return;
	this->QWidget::leaveEvent(x1);
    }
    virtual int metric(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 9731, x)) return (int)x[0].x_int;
	return this->QWidget::metric(x1);
    }
    virtual QSize minimumSizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 6636, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QScrollView::minimumSizeHint();
    }
    virtual void mouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6686, x)) return;
	this->QScrollView::mouseDoubleClickEvent(x1);
    }
    virtual void mouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6687, x)) return;
	this->QScrollView::mouseMoveEvent(x1);
    }
    virtual void mousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6684, x)) return;
	this->QScrollView::mousePressEvent(x1);
    }
    virtual void mouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6685, x)) return;
	this->QScrollView::mouseReleaseEvent(x1);
    }
    virtual void move(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9687, x)) return;
	this->QWidget::move(x1, x2);
    }
    virtual void moveChild(QWidget* x1, int x2, int x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	if(call_method((void*)this, 6593, x)) return;
	this->QScrollView::moveChild(x1, x2, x3);
    }
    virtual void moveEvent(QMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9711, x)) return;
	this->QWidget::moveEvent(x1);
    }
    virtual void paintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 2944, x)) return;
	this->QFrame::paintEvent(x1);
    }
    virtual void paletteChange(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9728, x)) return;
	this->QWidget::paletteChange(x1);
    }
    virtual void polish() {
	xargs x[1];
	if(call_method((void*)this, 9681, x)) return;
	this->QWidget::polish();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6637, x)) return;
	this->QScrollView::removeChild(x1);
    }
    virtual void reparent(QWidget* x1, Qt::WFlags x2, const QPoint& x3, bool x4) {
	xargs x[5];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	x[3].x_voidp = (void*)&x3;
	x[4].x_bool = (bool)x4;
	if(call_method((void*)this, 9621, x)) return;
	this->QWidget::reparent(x1, x2, x3, x4);
    }
    virtual void resize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6615, x)) return;
	this->QScrollView::resize(x1, x2);
    }
    virtual void resizeContents(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6640, x)) return;
	this->QScrollView::resizeContents(x1, x2);
    }
    virtual void resizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6683, x)) return;
	this->QScrollView::resizeEvent(x1);
    }
    virtual int resolution() const {
	xargs x[1];
	if(call_method((void*)this, 5556, x)) return (int)x[0].x_int;
	return this->QPaintDevice::resolution();
    }
    virtual void setAcceptDrops(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9638, x)) return;
	this->QWidget::setAcceptDrops(x1);
    }
    virtual void setActiveWindow() {
	xargs x[1];
	if(call_method((void*)this, 9592, x)) return;
	this->QWidget::setActiveWindow();
    }
    virtual void setAutoMask(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9639, x)) return;
	this->QWidget::setAutoMask(x1);
    }
    virtual void setBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9588, x)) return;
	this->QWidget::setBackgroundColor(x1);
    }
    virtual void setBackgroundMode(Qt::BackgroundMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9550, x)) return;
	this->QWidget::setBackgroundMode(x1);
    }
    virtual void setBackgroundOrigin(QWidget::BackgroundOrigin x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9641, x)) return;
	this->QWidget::setBackgroundOrigin(x1);
    }
    virtual void setBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9590, x)) return;
	this->QWidget::setBackgroundPixmap(x1);
    }
    virtual void setCaption(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9656, x)) return;
	this->QWidget::setCaption(x1);
    }
    virtual void setContentsPos(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 6642, x)) return;
	this->QScrollView::setContentsPos(x1, x2);
    }
    virtual void setCornerWidget(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6604, x)) return;
	this->QScrollView::setCornerWidget(x1);
    }
    virtual void setCursor(const QCursor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9577, x)) return;
	this->QWidget::setCursor(x1);
    }
    virtual void setDragAutoScroll(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6638, x)) return;
	this->QScrollView::setDragAutoScroll(x1);
    }
    virtual void setEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 6648, x)) return;
	this->QScrollView::setEnabled(x1);
    }
    virtual void setEraseColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9554, x)) return;
	this->QWidget::setEraseColor(x1);
    }
    virtual void setErasePixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9556, x)) return;
	this->QWidget::setErasePixmap(x1);
    }
    virtual void setFocus() {
	xargs x[1];
	if(call_method((void*)this, 9660, x)) return;
	this->QWidget::setFocus();
    }
    virtual void setFocusPolicy(QWidget::FocusPolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 9595, x)) return;
	this->QWidget::setFocusPolicy(x1);
    }
    virtual void setFocusProxy(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9597, x)) return;
	this->QWidget::setFocusProxy(x1);
    }
    virtual void setFont(const QFont& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9571, x)) return;
	this->QWidget::setFont(x1);
    }
    virtual void setFrameRect(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 2943, x)) return;
	this->QFrame::setFrameRect(x1);
    }
    virtual void setFrameStyle(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2927, x)) return;
	this->QFrame::setFrameStyle(x1);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9692, x)) return;
	this->QWidget::setGeometry(x1);
    }
    virtual void setGeometry(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 9691, x)) return;
	this->QWidget::setGeometry(x1, x2, x3, x4);
    }
    virtual void setHBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6681, x)) return;
	this->QScrollView::setHBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setHScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6602, x)) return;
	this->QScrollView::setHScrollBarMode(x1);
    }
    virtual void setIcon(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9657, x)) return;
	this->QWidget::setIcon(x1);
    }
    virtual void setIconText(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9658, x)) return;
	this->QWidget::setIconText(x1);
    }
    virtual void setKeyCompression(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9750, x)) return;
	this->QWidget::setKeyCompression(x1);
    }
    virtual void setLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2937, x)) return;
	this->QFrame::setLineWidth(x1);
    }
    virtual void setMargin(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2939, x)) return;
	this->QFrame::setMargin(x1);
    }
    virtual void setMargins(int x1, int x2, int x3, int x4) {
	xargs x[5];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	if(call_method((void*)this, 6675, x)) return;
	this->QScrollView::setMargins(x1, x2, x3, x4);
    }
    virtual void setMask(const QBitmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9584, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMask(const QRegion& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9585, x)) return;
	this->QWidget::setMask(x1);
    }
    virtual void setMaximumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9527, x)) return;
	this->QWidget::setMaximumSize(x1, x2);
    }
    virtual void setMicroFocusHint(int x1, int x2, int x3, int x4, bool x5, QFont* x6) {
	xargs x[7];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_bool = (bool)x5;
	x[6].x_voidp = (void*)x6;
	if(call_method((void*)this, 9751, x)) return;
	this->QWidget::setMicroFocusHint(x1, x2, x3, x4, x5, x6);
    }
    virtual void setMidLineWidth(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 2941, x)) return;
	this->QFrame::setMidLineWidth(x1);
    }
    virtual void setMinimumSize(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9525, x)) return;
	this->QWidget::setMinimumSize(x1, x2);
    }
    virtual void setMouseTracking(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9659, x)) return;
	this->QWidget::setMouseTracking(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9494, x)) return;
	this->QWidget::setName(x1);
    }
    virtual void setPalette(const QPalette& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9560, x)) return;
	this->QWidget::setPalette(x1);
    }
    virtual void setPaletteBackgroundColor(const QColor& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9565, x)) return;
	this->QWidget::setPaletteBackgroundColor(x1);
    }
    virtual void setPaletteBackgroundPixmap(const QPixmap& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9567, x)) return;
	this->QWidget::setPaletteBackgroundPixmap(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setResizePolicy(QScrollView::ResizePolicy x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6586, x)) return;
	this->QScrollView::setResizePolicy(x1);
    }
    virtual void setResolution(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 5555, x)) return;
	this->QPaintDevice::setResolution(x1);
    }
    virtual void setSizeIncrement(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 9534, x)) return;
	this->QWidget::setSizeIncrement(x1, x2);
    }
    virtual void setSizePolicy(QSizePolicy x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9616, x)) return;
	this->QWidget::setSizePolicy(x1);
    }
    virtual void setUpdatesEnabled(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9662, x)) return;
	this->QWidget::setUpdatesEnabled(x1);
    }
    virtual void setVBarGeometry(QScrollBar& x1, int x2, int x3, int x4, int x5) {
	xargs x[6];
	x[1].x_voidp = (void*)&x1;
	x[2].x_int = (int)x2;
	x[3].x_int = (int)x3;
	x[4].x_int = (int)x4;
	x[5].x_int = (int)x5;
	if(call_method((void*)this, 6682, x)) return;
	this->QScrollView::setVBarGeometry(x1, x2, x3, x4, x5);
    }
    virtual void setVScrollBarMode(QScrollView::ScrollBarMode x1) {
	xargs x[2];
	x[1].x_long = (long)x1;
	if(call_method((void*)this, 6600, x)) return;
	this->QScrollView::setVScrollBarMode(x1);
    }
    virtual void setWFlags(Qt::WFlags x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9744, x)) return;
	this->QWidget::setWFlags(x1);
    }
    virtual void setWState(uint x1) {
	xargs x[2];
	x[1].x_uint = (uint)x1;
	if(call_method((void*)this, 9741, x)) return;
	this->QWidget::setWState(x1);
    }
    virtual void show() {
	xargs x[1];
	if(call_method((void*)this, 6617, x)) return;
	this->QScrollView::show();
    }
    virtual void showEvent(QShowEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9723, x)) return;
	this->QWidget::showEvent(x1);
    }
    virtual void showMaximized() {
	xargs x[1];
	if(call_method((void*)this, 9678, x)) return;
	this->QWidget::showMaximized();
    }
    virtual void showMinimized() {
	xargs x[1];
	if(call_method((void*)this, 9677, x)) return;
	this->QWidget::showMinimized();
    }
    virtual void showNormal() {
	xargs x[1];
	if(call_method((void*)this, 9680, x)) return;
	this->QWidget::showNormal();
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 6635, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QScrollView::sizeHint();
    }
    virtual QSizePolicy sizePolicy() const {
	xargs x[1];
	if(call_method((void*)this, 9615, x)) {
	    QSizePolicy *xptr = (QSizePolicy *)x[0].x_voidp;
	    QSizePolicy xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWidget::sizePolicy();
    }
    virtual void styleChange(QStyle& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 6588, x)) return;
	this->QScrollView::styleChange(x1);
    }
    virtual void tabletEvent(QTabletEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 9718, x)) return;
	this->QWidget::tabletEvent(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void unsetCursor() {
	xargs x[1];
	if(call_method((void*)this, 9578, x)) return;
	this->QWidget::unsetCursor();
    }
    virtual void updateMask() {
	xargs x[1];
	if(call_method((void*)this, 9725, x)) return;
	this->QWidget::updateMask();
    }
    virtual void viewportContextMenuEvent(QContextMenuEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6673, x)) return;
	this->QScrollView::viewportContextMenuEvent(x1);
    }
    virtual void viewportDragEnterEvent(QDragEnterEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6668, x)) return;
	this->QScrollView::viewportDragEnterEvent(x1);
    }
    virtual void viewportDragLeaveEvent(QDragLeaveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6670, x)) return;
	this->QScrollView::viewportDragLeaveEvent(x1);
    }
    virtual void viewportDragMoveEvent(QDragMoveEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6669, x)) return;
	this->QScrollView::viewportDragMoveEvent(x1);
    }
    virtual void viewportDropEvent(QDropEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6671, x)) return;
	this->QScrollView::viewportDropEvent(x1);
    }
    virtual void viewportMouseDoubleClickEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6666, x)) return;
	this->QScrollView::viewportMouseDoubleClickEvent(x1);
    }
    virtual void viewportMouseMoveEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6667, x)) return;
	this->QScrollView::viewportMouseMoveEvent(x1);
    }
    virtual void viewportMousePressEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6664, x)) return;
	this->QScrollView::viewportMousePressEvent(x1);
    }
    virtual void viewportMouseReleaseEvent(QMouseEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6665, x)) return;
	this->QScrollView::viewportMouseReleaseEvent(x1);
    }
    virtual void viewportPaintEvent(QPaintEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6662, x)) return;
	this->QScrollView::viewportPaintEvent(x1);
    }
    virtual void viewportResizeEvent(QResizeEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6663, x)) return;
	this->QScrollView::viewportResizeEvent(x1);
    }
    virtual void viewportWheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6672, x)) return;
	this->QScrollView::viewportWheelEvent(x1);
    }
    virtual void wheelEvent(QWheelEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 6688, x)) return;
	this->QScrollView::wheelEvent(x1);
    }
    virtual void windowActivationChange(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 9730, x)) return;
	this->QWidget::windowActivationChange(x1);
    }
    ~x_QScrollView() {}
};
void xcall_QScrollView(xargs *x, void *s, int xi) {
    x_QScrollView *xself = (x_QScrollView*)s;
    switch(xi) {
	case 0: x_QScrollView::x_0(x);	break;
	case 1: x_QScrollView::x_1(x);	break;
	case 2: x_QScrollView::x_2(x);	break;
	case 3: x_QScrollView::x_3(x);	break;
	case 4: x_QScrollView::x_4(x);	break;
	case 5: x_QScrollView::x_5(x);	break;
	case 6: x_QScrollView::x_6(x);	break;
	case 7: x_QScrollView::x_7(x);	break;
	case 8: x_QScrollView::x_8(x);	break;
	case 9: x_QScrollView::x_9(x);	break;
	case 10: x_QScrollView::x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
	case 25: xself->x_25(x);	break;
	case 26: xself->x_26(x);	break;
	case 27: xself->x_27(x);	break;
	case 28: xself->x_28(x);	break;
	case 29: xself->x_29(x);	break;
	case 30: xself->x_30(x);	break;
	case 31: xself->x_31(x);	break;
	case 32: xself->x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: xself->x_54(x);	break;
	case 55: xself->x_55(x);	break;
	case 56: xself->x_56(x);	break;
	case 57: xself->x_57(x);	break;
	case 58: xself->x_58(x);	break;
	case 59: xself->x_59(x);	break;
	case 60: xself->x_60(x);	break;
	case 61: xself->x_61(x);	break;
	case 62: xself->x_62(x);	break;
	case 63: xself->x_63(x);	break;
	case 64: xself->x_64(x);	break;
	case 65: xself->x_65(x);	break;
	case 66: xself->x_66(x);	break;
	case 67: xself->x_67(x);	break;
	case 68: xself->x_68(x);	break;
	case 69: xself->x_69(x);	break;
	case 70: xself->x_70(x);	break;
	case 71: xself->x_71(x);	break;
	case 72: xself->x_72(x);	break;
	case 73: xself->x_73(x);	break;
	case 74: xself->x_74(x);	break;
	case 75: xself->x_75(x);	break;
	case 76: xself->x_76(x);	break;
	case 77: xself->x_77(x);	break;
	case 78: xself->x_78(x);	break;
	case 79: xself->x_79(x);	break;
	case 80: xself->x_80(x);	break;
	case 81: xself->x_81(x);	break;
	case 82: xself->x_82(x);	break;
	case 83: xself->x_83(x);	break;
	case 84: xself->x_84(x);	break;
	case 85: xself->x_85(x);	break;
	case 86: xself->x_86(x);	break;
	case 87: xself->x_87(x);	break;
	case 88: xself->x_88(x);	break;
	case 89: xself->x_89(x);	break;
	case 90: xself->x_90(x);	break;
	case 91: xself->x_91(x);	break;
	case 92: xself->x_92(x);	break;
	case 93: xself->x_93(x);	break;
	case 94: xself->x_94(x);	break;
	case 95: xself->x_95(x);	break;
	case 96: xself->x_96(x);	break;
	case 97: xself->x_97(x);	break;
	case 98: xself->x_98(x);	break;
	case 99: xself->x_99(x);	break;
	case 100: xself->x_100(x);	break;
	case 101: xself->x_101(x);	break;
	case 102: xself->x_102(x);	break;
	case 103: xself->x_103(x);	break;
	case 104: xself->x_104(x);	break;
	case 105: xself->x_105(x);	break;
	case 106: xself->x_106(x);	break;
	case 107: xself->x_107(x);	break;
	case 108: xself->x_108(x);	break;
	case 109: xself->x_109(x);	break;
	case 110: xself->x_110(x);	break;
	case 111: xself->x_111(x);	break;
	case 112: xself->x_112(x);	break;
	case 113: xself->x_113(x);	break;
	case 114: xself->x_114(x);	break;
	case 115: xself->x_115(x);	break;
	case 116: delete (QScrollView*)xself;	break;
    }
}
