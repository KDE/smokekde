//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qstring.h>
#include <qwhatsthis.h>

class x_QWhatsThis : public QWhatsThis {
public:
    static void x_0(xargs *x) {
	// QWhatsThis(QWidget*)
	x_QWhatsThis* xret = new x_QWhatsThis((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QWhatsThis(QWidget* x1) : QWhatsThis(x1) {
    }
    void x_1(xargs *x) {
	// text(const QPoint&)
	QString xret = this->QWhatsThis::text(*(const QPoint *)x[1].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_2(xargs *x) {
	// clicked(const QString&)
	bool xret = this->QWhatsThis::clicked(*(const QString *)x[1].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    static void x_3(xargs *x) {
	// add(QWidget*, const QString&)
	QWhatsThis::add((QWidget*)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    static void x_4(xargs *x) {
	// remove(QWidget*)
	QWhatsThis::remove((QWidget*)x[1].x_voidp);
    }
    static void x_5(xargs *x) {
	// textFor(QWidget*, const QPoint&, bool)
	QString xret = QWhatsThis::textFor((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp,(bool)x[3].x_bool);
	x[0].x_voidp = (void*)new QString(xret);
    }
    static void x_6(xargs *x) {
	// textFor(QWidget*, const QPoint&)
	QString xret = QWhatsThis::textFor((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    static void x_7(xargs *x) {
	// textFor(QWidget*)
	QString xret = QWhatsThis::textFor((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    static void x_8(xargs *x) {
	// whatsThisButton(QWidget*)
	QToolButton* xret = QWhatsThis::whatsThisButton((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    static void x_9(xargs *x) {
	// enterWhatsThisMode()
	QWhatsThis::enterWhatsThisMode();
    }
    static void x_10(xargs *x) {
	// inWhatsThisMode()
	bool xret = QWhatsThis::inWhatsThisMode();
	x[0].x_bool = (bool)xret;
    }
    static void x_11(xargs *x) {
	// leaveWhatsThisMode(const QString&, const QPoint&, QWidget*)
	QWhatsThis::leaveWhatsThisMode(*(const QString *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp,(QWidget*)x[3].x_voidp);
    }
    static void x_12(xargs *x) {
	// leaveWhatsThisMode(const QString&, const QPoint&)
	QWhatsThis::leaveWhatsThisMode(*(const QString *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
    }
    static void x_13(xargs *x) {
	// leaveWhatsThisMode(const QString&)
	QWhatsThis::leaveWhatsThisMode(*(const QString *)x[1].x_voidp);
    }
    static void x_14(xargs *x) {
	// leaveWhatsThisMode()
	QWhatsThis::leaveWhatsThisMode();
    }
    static void x_15(xargs *x) {
	// display(const QString&, const QPoint&, QWidget*)
	QWhatsThis::display(*(const QString *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp,(QWidget*)x[3].x_voidp);
    }
    static void x_16(xargs *x) {
	// display(const QString&, const QPoint&)
	QWhatsThis::display(*(const QString *)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
    }
    static void x_17(xargs *x) {
	// display(const QString&)
	QWhatsThis::display(*(const QString *)x[1].x_voidp);
    }
    virtual bool clicked(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9448, x)) return (bool)x[0].x_bool;
	return this->QWhatsThis::clicked(x1);
    }
    virtual QString text(const QPoint& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 9447, x)) {
	    QString *xptr = (QString *)x[0].x_voidp;
	    QString xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QWhatsThis::text(x1);
    }
    ~x_QWhatsThis() {}
};
void xcall_QWhatsThis(xargs *x, void *s, int xi) {
    x_QWhatsThis *xself = (x_QWhatsThis*)s;
    switch(xi) {
	case 0: x_QWhatsThis::x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: x_QWhatsThis::x_3(x);	break;
	case 4: x_QWhatsThis::x_4(x);	break;
	case 5: x_QWhatsThis::x_5(x);	break;
	case 6: x_QWhatsThis::x_6(x);	break;
	case 7: x_QWhatsThis::x_7(x);	break;
	case 8: x_QWhatsThis::x_8(x);	break;
	case 9: x_QWhatsThis::x_9(x);	break;
	case 10: x_QWhatsThis::x_10(x);	break;
	case 11: x_QWhatsThis::x_11(x);	break;
	case 12: x_QWhatsThis::x_12(x);	break;
	case 13: x_QWhatsThis::x_13(x);	break;
	case 14: x_QWhatsThis::x_14(x);	break;
	case 15: x_QWhatsThis::x_15(x);	break;
	case 16: x_QWhatsThis::x_16(x);	break;
	case 17: x_QWhatsThis::x_17(x);	break;
	case 18: delete (QWhatsThis*)xself;	break;
    }
}
