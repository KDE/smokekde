//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qcstring.h>
#include <qiconview.h>

class x_QIconDragItem : public QIconDragItem {
public:
    static void x_0(Smoke::Stack x) {
	// QIconDragItem()
	x_QIconDragItem* xret = new x_QIconDragItem();
	x[0].s_voidp = (void*)xret;
    }
    x_QIconDragItem() : QIconDragItem() {
    }
    void x_1(Smoke::Stack x) const {
	// data()
	QByteArray xret = this->QIconDragItem::data();
	x[0].s_voidp = (void*)new QByteArray(xret);
    }
    void x_2(Smoke::Stack x) {
	// setData(const QByteArray&)
	this->QIconDragItem::setData(*(const QByteArray *)x[1].s_voidp);
    }
    void x_3(Smoke::Stack x) const {
	// operator==(const QIconDragItem&)
	bool xret = this->QIconDragItem::operator==(*(const QIconDragItem *)x[1].s_voidp);
	x[0].s_bool = (bool)xret;
    }
    virtual QByteArray data() const {
	Smoke::StackItem x[1];
	if(call_method((void*)this, 3419, x)) {
	    QByteArray *xptr = (QByteArray *)x[0].s_voidp;
	    QByteArray xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QIconDragItem::data();
    }
    virtual void setData(const QByteArray& x1) {
	Smoke::StackItem x[2];
	x[1].s_voidp = (void*)&x1;
	if(call_method((void*)this, 3420, x)) return;
	this->QIconDragItem::setData(x1);
    }
    ~x_QIconDragItem() {}
};
void xcall_QIconDragItem(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QIconDragItem *xself = (x_QIconDragItem*)obj;
    switch(xi) {
	case 0: x_QIconDragItem::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: delete (QIconDragItem*)xself;	break;
    }
}
