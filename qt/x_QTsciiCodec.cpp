//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qtsciicodec.h>
#include <qstring.h>
#include <qcstring.h>

class x_QTsciiCodec {
private:
    QTsciiCodec *xthis;
public:
    x_QTsciiCodec(void *x) : xthis((QTsciiCodec*)x) {}
    void x_0(Smoke::Stack x) const {
	// mibEnum()
	int xret = xthis->QTsciiCodec::mibEnum();
	x[0].s_int = (int)xret;
    }
    void x_1(Smoke::Stack x) const {
	// name()
	const char* xret = xthis->QTsciiCodec::name();
	x[0].s_class = (void*)xret;
    }
    void x_2(Smoke::Stack x) const {
	// fromUnicode(const QString&, int&)
	QCString xret = xthis->QTsciiCodec::fromUnicode(*(const QString *)x[1].s_class,*(int *)x[2].s_class);
	x[0].s_class = (void*)new QCString(xret);
    }
    void x_3(Smoke::Stack x) const {
	// toUnicode(const char*, int)
	QString xret = xthis->QTsciiCodec::toUnicode((const char*)x[1].s_class,(int)x[2].s_int);
	x[0].s_class = (void*)new QString(xret);
    }
    void x_4(Smoke::Stack x) const {
	// heuristicContentMatch(const char*, int)
	int xret = xthis->QTsciiCodec::heuristicContentMatch((const char*)x[1].s_class,(int)x[2].s_int);
	x[0].s_int = (int)xret;
    }
    void x_5(Smoke::Stack x) const {
	// heuristicNameMatch(const char*)
	int xret = xthis->QTsciiCodec::heuristicNameMatch((const char*)x[1].s_class);
	x[0].s_int = (int)xret;
    }
    ~x_QTsciiCodec() {}
};
void xcall_QTsciiCodec(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QTsciiCodec xtmp(obj), *xself = &xtmp;
    switch(xi) {
	case 0: xself->x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
    }
}
