//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qpoint.h>
#include <qvariant.h>
#include <qimage.h>
#include <qcstring.h>
#include <qdragobject.h>
#include <qpixmap.h>

class x_QImageDrag : public QImageDrag {
public:
    static void x_0(Smoke::Stack x) {
	// QImageDrag(QImage, QWidget*, const char*)
	x_QImageDrag* xret = new x_QImageDrag(*(QImage *)x[1].s_class,(QWidget*)x[2].s_class,(const char*)x[3].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag(QImage x1, QWidget* x2, const char* x3) : QImageDrag(x1, x2, x3) {
    }
    static void x_1(Smoke::Stack x) {
	// QImageDrag(QImage, QWidget*)
	x_QImageDrag* xret = new x_QImageDrag(*(QImage *)x[1].s_class,(QWidget*)x[2].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag(QImage x1, QWidget* x2) : QImageDrag(x1, x2) {
    }
    static void x_2(Smoke::Stack x) {
	// QImageDrag(QImage)
	x_QImageDrag* xret = new x_QImageDrag(*(QImage *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag(QImage x1) : QImageDrag(x1) {
    }
    static void x_3(Smoke::Stack x) {
	// QImageDrag(QWidget*, const char*)
	x_QImageDrag* xret = new x_QImageDrag((QWidget*)x[1].s_class,(const char*)x[2].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag(QWidget* x1, const char* x2) : QImageDrag(x1, x2) {
    }
    static void x_4(Smoke::Stack x) {
	// QImageDrag(QWidget*)
	x_QImageDrag* xret = new x_QImageDrag((QWidget*)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag(QWidget* x1) : QImageDrag(x1) {
    }
    static void x_5(Smoke::Stack x) {
	// QImageDrag()
	x_QImageDrag* xret = new x_QImageDrag();
	x[0].s_class = (void*)xret;
    }
    x_QImageDrag() : QImageDrag() {
    }
    void x_6(Smoke::Stack x) {
	// setImage(QImage)
	this->QImageDrag::setImage(*(QImage *)x[1].s_class);
    }
    void x_7(Smoke::Stack x) const {
	// format(int)
	const char* xret = this->QImageDrag::format((int)x[1].s_int);
	x[0].s_class = (void*)xret;
    }
    void x_8(Smoke::Stack x) const {
	// encodedData(const char*)
	QByteArray xret = this->QImageDrag::encodedData((const char*)x[1].s_class);
	x[0].s_class = (void*)new QByteArray(xret);
    }
    static void x_9(Smoke::Stack x) {
	// canDecode(const QMimeSource*)
	bool xret = QImageDrag::canDecode((const QMimeSource*)x[1].s_class);
	x[0].s_bool = (bool)xret;
    }
    static void x_10(Smoke::Stack x) {
	// decode(const QMimeSource*, QImage&)
	bool xret = QImageDrag::decode((const QMimeSource*)x[1].s_class,*(QImage *)x[2].s_class);
	x[0].s_bool = (bool)xret;
    }
    static void x_11(Smoke::Stack x) {
	// decode(const QMimeSource*, QPixmap&)
	bool xret = QImageDrag::decode((const QMimeSource*)x[1].s_class,*(QPixmap *)x[2].s_class);
	x[0].s_bool = (bool)xret;
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	Smoke::StackItem x[4];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)x2;
	x[3].s_class = (void*)x3;
	if(qt_Smoke->callMethod(5470, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5466, (void*)this, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void connectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5468, (void*)this, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5467, (void*)this, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5469, (void*)this, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual bool drag(QDragObject::DragMode x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(2326, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QDragObject::drag(x1);
    }
    virtual QByteArray encodedData(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(3795, (void*)this, x)) {
	    QByteArray *xptr = (QByteArray *)x[0].s_class;
	    QByteArray xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QImageDrag::encodedData(x1);
    }
    virtual bool event(QEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5405, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)x2;
	if(qt_Smoke->callMethod(5406, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::eventFilter(x1, x2);
    }
    virtual const char* format(int x1) const {
	Smoke::StackItem x[2];
	x[1].s_int = (int)x1;
	if(qt_Smoke->callMethod(3794, (void*)this, x)) return (const char*)x[0].s_class;
	return this->QImageDrag::format(x1);
    }
    virtual void insertChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5428, (void*)this, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual QVariant property(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5442, (void*)this, x)) {
	    QVariant *xptr = (QVariant *)x[0].s_class;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual bool provides(const char* x1) const {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5113, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QMimeSource::provides(x1);
    }
    virtual void removeChild(QObject* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5429, (void*)this, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setImage(QImage x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(3793, (void*)this, x)) return;
	this->QImageDrag::setImage(x1);
    }
    virtual void setName(const char* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5411, (void*)this, x)) return;
	this->QObject::setName(x1);
    }
    virtual void setPixmap(QPixmap x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	if(qt_Smoke->callMethod(2319, (void*)this, x)) return;
	this->QDragObject::setPixmap(x1);
    }
    virtual void setPixmap(QPixmap x1, const QPoint& x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)&x1;
	x[2].s_class = (void*)&x2;
	if(qt_Smoke->callMethod(2320, (void*)this, x)) return;
	this->QDragObject::setPixmap(x1, x2);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)x1;
	x[2].s_class = (void*)&x2;
	if(qt_Smoke->callMethod(5441, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)x1;
	if(qt_Smoke->callMethod(5465, (void*)this, x)) return;
	this->QObject::timerEvent(x1);
    }
    ~x_QImageDrag() {}
};
void xcall_QImageDrag(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QImageDrag *xself = (x_QImageDrag*)obj;
    switch(xi) {
	case 0: x_QImageDrag::x_0(args);	break;
	case 1: x_QImageDrag::x_1(args);	break;
	case 2: x_QImageDrag::x_2(args);	break;
	case 3: x_QImageDrag::x_3(args);	break;
	case 4: x_QImageDrag::x_4(args);	break;
	case 5: x_QImageDrag::x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: xself->x_7(args);	break;
	case 8: xself->x_8(args);	break;
	case 9: x_QImageDrag::x_9(args);	break;
	case 10: x_QImageDrag::x_10(args);	break;
	case 11: x_QImageDrag::x_11(args);	break;
	case 12: delete (QImageDrag*)xself;	break;
    }
}
