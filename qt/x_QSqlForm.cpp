//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qvariant.h>
#include <qstring.h>
#include <qsqlform.h>

class x_QSqlForm : public QSqlForm {
public:
    static void x_0(xargs *x) {
	// QSqlForm(QObject*, const char*)
	x_QSqlForm* xret = new x_QSqlForm((QObject*)x[1].x_voidp,(const char*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QSqlForm(QObject* x1, const char* x2) : QSqlForm(x1, x2) {
    }
    static void x_1(xargs *x) {
	// QSqlForm(QObject*)
	x_QSqlForm* xret = new x_QSqlForm((QObject*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QSqlForm(QObject* x1) : QSqlForm(x1) {
    }
    static void x_2(xargs *x) {
	// QSqlForm()
	x_QSqlForm* xret = new x_QSqlForm();
	x[0].x_voidp = (void*)xret;
    }
    x_QSqlForm() : QSqlForm() {
    }
    void x_3(xargs *x) {
	// insert(QWidget*, const QString&)
	this->QSqlForm::insert((QWidget*)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    void x_4(xargs *x) {
	// remove(const QString&)
	this->QSqlForm::remove(*(const QString *)x[1].x_voidp);
    }
    void x_5(xargs *x) const {
	// count()
	uint xret = this->QSqlForm::count();
	x[0].x_uint = (uint)xret;
    }
    void x_6(xargs *x) const {
	// widget(uint)
	QWidget* xret = this->QSqlForm::widget((uint)x[1].x_uint);
	x[0].x_voidp = (void*)xret;
    }
    void x_7(xargs *x) const {
	// widgetToField(QWidget*)
	QSqlField* xret = this->QSqlForm::widgetToField((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    void x_8(xargs *x) const {
	// fieldToWidget(QSqlField*)
	QWidget* xret = this->QSqlForm::fieldToWidget((QSqlField*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    void x_9(xargs *x) {
	// installPropertyMap(QSqlPropertyMap*)
	this->QSqlForm::installPropertyMap((QSqlPropertyMap*)x[1].x_voidp);
    }
    void x_10(xargs *x) {
	// setRecord(QSqlRecord*)
	this->QSqlForm::setRecord((QSqlRecord*)x[1].x_voidp);
    }
    void x_11(xargs *x) {
	// readField(QWidget*)
	this->QSqlForm::readField((QWidget*)x[1].x_voidp);
    }
    void x_12(xargs *x) {
	// writeField(QWidget*)
	this->QSqlForm::writeField((QWidget*)x[1].x_voidp);
    }
    void x_13(xargs *x) {
	// readFields()
	this->QSqlForm::readFields();
    }
    void x_14(xargs *x) {
	// writeFields()
	this->QSqlForm::writeFields();
    }
    void x_15(xargs *x) {
	// clear()
	this->QSqlForm::clear();
    }
    void x_16(xargs *x) {
	// clearValues(bool)
	this->QSqlForm::clearValues((bool)x[1].x_bool);
    }
    void x_17(xargs *x) {
	// clearValues()
	this->QSqlForm::clearValues();
    }
    void x_18(xargs *x) {
	// insert(QWidget*, QSqlField*)
	this->QSqlForm::insert((QWidget*)x[1].x_voidp,(QSqlField*)x[2].x_voidp);
    }
    void x_19(xargs *x) {
	// remove(QWidget*)
	this->QSqlForm::remove((QWidget*)x[1].x_voidp);
    }
    void x_20(xargs *x) {
	// clearMap()
	this->QSqlForm::clearMap();
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5471, x)) return;
	this->QObject::childEvent(x1);
    }
    virtual void clear() {
	xargs x[1];
	if(call_method((void*)this, 7478, x)) return;
	this->QSqlForm::clear();
    }
    virtual void clearValues(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 7479, x)) return;
	this->QSqlForm::clearValues(x1);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5410, x)) return (bool)x[0].x_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 5411, x)) return (bool)x[0].x_bool;
	return this->QObject::eventFilter(x1, x2);
    }
    virtual void insert(QWidget* x1, QSqlField* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 7481, x)) return;
	this->QSqlForm::insert(x1, x2);
    }
    virtual void insert(QWidget* x1, const QString& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 7466, x)) return;
	this->QSqlForm::insert(x1, x2);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void readField(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 7474, x)) return;
	this->QSqlForm::readField(x1);
    }
    virtual void readFields() {
	xargs x[1];
	if(call_method((void*)this, 7476, x)) return;
	this->QSqlForm::readFields();
    }
    virtual void remove(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 7482, x)) return;
	this->QSqlForm::remove(x1);
    }
    virtual void remove(const QString& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 7467, x)) return;
	this->QSqlForm::remove(x1);
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5434, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5416, x)) return;
	this->QObject::setName(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setRecord(QSqlRecord* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 7473, x)) return;
	this->QSqlForm::setRecord(x1);
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual void writeField(QWidget* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 7475, x)) return;
	this->QSqlForm::writeField(x1);
    }
    virtual void writeFields() {
	xargs x[1];
	if(call_method((void*)this, 7477, x)) return;
	this->QSqlForm::writeFields();
    }
    ~x_QSqlForm() {}
};
void xcall_QSqlForm(xargs *x, void *s, int xi) {
    x_QSqlForm *xself = (x_QSqlForm*)s;
    switch(xi) {
	case 0: x_QSqlForm::x_0(x);	break;
	case 1: x_QSqlForm::x_1(x);	break;
	case 2: x_QSqlForm::x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
	case 8: xself->x_8(x);	break;
	case 9: xself->x_9(x);	break;
	case 10: xself->x_10(x);	break;
	case 11: xself->x_11(x);	break;
	case 12: xself->x_12(x);	break;
	case 13: xself->x_13(x);	break;
	case 14: xself->x_14(x);	break;
	case 15: xself->x_15(x);	break;
	case 16: xself->x_16(x);	break;
	case 17: xself->x_17(x);	break;
	case 18: xself->x_18(x);	break;
	case 19: xself->x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: delete (QSqlForm*)xself;	break;
    }
}
