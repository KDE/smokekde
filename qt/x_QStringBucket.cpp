//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qgdict.h>
#include <qstring.h>

class x_QStringBucket : public QStringBucket {
public:
    static void x_0(xargs *x) {
	// QStringBucket(const QString&, QPtrCollection::Item, QBaseBucket*)
	x_QStringBucket* xret = new x_QStringBucket(*(const QString *)x[1].x_voidp,*(QPtrCollection::Item *)x[2].x_voidp,(QBaseBucket*)x[3].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QStringBucket(const QString& x1, QPtrCollection::Item x2, QBaseBucket* x3) : QStringBucket(x1, x2, x3) {
    }
    void x_1(xargs *x) const {
	// getKey()
	const QString& xret = this->QStringBucket::getKey();
	x[0].x_voidp = (void*)&xret;
    }
    ~x_QStringBucket() {}
};
void xcall_QStringBucket(xargs *x, void *s, int xi) {
    x_QStringBucket *xself = (x_QStringBucket*)s;
    switch(xi) {
	case 0: x_QStringBucket::x_0(x);	break;
	case 1: xself->x_1(x);	break;
    }
}
