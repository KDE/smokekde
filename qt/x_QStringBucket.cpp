//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qgdict.h>
#include <qstring.h>
#include <qptrcollection.h>

class x_QStringBucket : public QStringBucket {
public:
    static void x_0(Smoke::Stack x) {
	// QStringBucket(const QString&, QPtrCollection::Item, QBaseBucket*)
	x_QStringBucket* xret = new x_QStringBucket(*(const QString *)x[1].s_voidp,*(QPtrCollection::Item *)x[2].s_voidp,(QBaseBucket*)x[3].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QStringBucket(const QString& x1, QPtrCollection::Item x2, QBaseBucket* x3) : QStringBucket(x1, x2, x3) {
    }
    void x_1(Smoke::Stack x) const {
	// getKey()
	const QString& xret = this->QStringBucket::getKey();
	x[0].s_voidp = (void*)&xret;
    }
    static void x_2(Smoke::Stack x) {
	// QStringBucket(const QStringBucket&)
	x_QStringBucket* xret = new x_QStringBucket(*(const QStringBucket *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QStringBucket(const QStringBucket& x1) : QStringBucket(x1) {
    }
    ~x_QStringBucket() { qt_Smoke->binding->deleted(300, (void*)this); }
};
void xcall_QStringBucket(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QStringBucket *xself = (x_QStringBucket*)obj;
    switch(xi) {
	case 0: x_QStringBucket::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: x_QStringBucket::x_2(args);	break;
	case 3: delete (QStringBucket*)xself;	break;
    }
}
