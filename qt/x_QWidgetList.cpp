//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qwidgetlist.h>

class x_QWidgetList : public QWidgetList {
public:
    static void x_0(Smoke::Stack x) {
	// QWidgetList()
	x_QWidgetList* xret = new x_QWidgetList();
	x[0].s_class = (void*)xret;
    }
    x_QWidgetList() : QWidgetList() {
    }
    static void x_1(Smoke::Stack x) {
	// QWidgetList(const QWidgetList&)
	x_QWidgetList* xret = new x_QWidgetList(*(const QWidgetList *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QWidgetList(const QWidgetList& x1) : QWidgetList(x1) {
    }
    void x_2(Smoke::Stack x) {
	// operator=(const QWidgetList&)
	QWidgetList& xret = this->QWidgetList::operator=(*(const QWidgetList *)x[1].s_class);
	x[0].s_class = (void*)&xret;
    }
    ~x_QWidgetList() {}
};
void xcall_QWidgetList(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QWidgetList *xself = (x_QWidgetList*)obj;
    switch(xi) {
	case 0: x_QWidgetList::x_0(args);	break;
	case 1: x_QWidgetList::x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: delete (QWidgetList*)xself;	break;
    }
}
