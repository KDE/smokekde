//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qvariant.h>
#include <qlayout.h>
#include <qrect.h>
#include <qsize.h>

class x_QGridLayout : public QGridLayout {
public:
    static void x_0(xargs *x) {
	x[0].x_long = (long)QGridLayout::TopLeft;
    }
    static void x_1(xargs *x) {
	x[0].x_long = (long)QGridLayout::TopRight;
    }
    static void x_2(xargs *x) {
	x[0].x_long = (long)QGridLayout::BottomLeft;
    }
    static void x_3(xargs *x) {
	x[0].x_long = (long)QGridLayout::BottomRight;
    }
    static void x_4(xargs *x) {
	// QGridLayout(QWidget*, int, int, int, int, const char*)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(const char*)x[6].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1, int x2, int x3, int x4, int x5, const char* x6) : QGridLayout(x1, x2, x3, x4, x5, x6) {
    }
    static void x_5(xargs *x) {
	// QGridLayout(QWidget*, int, int, int, int)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1, int x2, int x3, int x4, int x5) : QGridLayout(x1, x2, x3, x4, x5) {
    }
    static void x_6(xargs *x) {
	// QGridLayout(QWidget*, int, int, int)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1, int x2, int x3, int x4) : QGridLayout(x1, x2, x3, x4) {
    }
    static void x_7(xargs *x) {
	// QGridLayout(QWidget*, int, int)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1, int x2, int x3) : QGridLayout(x1, x2, x3) {
    }
    static void x_8(xargs *x) {
	// QGridLayout(QWidget*, int)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1, int x2) : QGridLayout(x1, x2) {
    }
    static void x_9(xargs *x) {
	// QGridLayout(QWidget*)
	x_QGridLayout* xret = new x_QGridLayout((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QWidget* x1) : QGridLayout(x1) {
    }
    static void x_10(xargs *x) {
	// QGridLayout(int, int, int, const char*)
	x_QGridLayout* xret = new x_QGridLayout((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int,(const char*)x[4].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(int x1, int x2, int x3, const char* x4) : QGridLayout(x1, x2, x3, x4) {
    }
    static void x_11(xargs *x) {
	// QGridLayout(int, int, int)
	x_QGridLayout* xret = new x_QGridLayout((int)x[1].x_int,(int)x[2].x_int,(int)x[3].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(int x1, int x2, int x3) : QGridLayout(x1, x2, x3) {
    }
    static void x_12(xargs *x) {
	// QGridLayout(int, int)
	x_QGridLayout* xret = new x_QGridLayout((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(int x1, int x2) : QGridLayout(x1, x2) {
    }
    static void x_13(xargs *x) {
	// QGridLayout(int)
	x_QGridLayout* xret = new x_QGridLayout((int)x[1].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(int x1) : QGridLayout(x1) {
    }
    static void x_14(xargs *x) {
	// QGridLayout()
	x_QGridLayout* xret = new x_QGridLayout();
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout() : QGridLayout() {
    }
    static void x_15(xargs *x) {
	// QGridLayout(QLayout*, int, int, int, const char*)
	x_QGridLayout* xret = new x_QGridLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(const char*)x[5].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QLayout* x1, int x2, int x3, int x4, const char* x5) : QGridLayout(x1, x2, x3, x4, x5) {
    }
    static void x_16(xargs *x) {
	// QGridLayout(QLayout*, int, int, int)
	x_QGridLayout* xret = new x_QGridLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QLayout* x1, int x2, int x3, int x4) : QGridLayout(x1, x2, x3, x4) {
    }
    static void x_17(xargs *x) {
	// QGridLayout(QLayout*, int, int)
	x_QGridLayout* xret = new x_QGridLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QLayout* x1, int x2, int x3) : QGridLayout(x1, x2, x3) {
    }
    static void x_18(xargs *x) {
	// QGridLayout(QLayout*, int)
	x_QGridLayout* xret = new x_QGridLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QLayout* x1, int x2) : QGridLayout(x1, x2) {
    }
    static void x_19(xargs *x) {
	// QGridLayout(QLayout*)
	x_QGridLayout* xret = new x_QGridLayout((QLayout*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QGridLayout(QLayout* x1) : QGridLayout(x1) {
    }
    void x_20(xargs *x) const {
	// sizeHint()
	QSize xret = this->QGridLayout::sizeHint();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_21(xargs *x) const {
	// minimumSize()
	QSize xret = this->QGridLayout::minimumSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_22(xargs *x) const {
	// maximumSize()
	QSize xret = this->QGridLayout::maximumSize();
	x[0].x_voidp = (void*)new QSize(xret);
    }
    void x_23(xargs *x) {
	// setRowStretch(int, int)
	this->QGridLayout::setRowStretch((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_24(xargs *x) {
	// setColStretch(int, int)
	this->QGridLayout::setColStretch((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_25(xargs *x) const {
	// rowStretch(int)
	int xret = this->QGridLayout::rowStretch((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_26(xargs *x) const {
	// colStretch(int)
	int xret = this->QGridLayout::colStretch((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_27(xargs *x) const {
	// numRows()
	int xret = this->QGridLayout::numRows();
	x[0].x_int = (int)xret;
    }
    void x_28(xargs *x) const {
	// numCols()
	int xret = this->QGridLayout::numCols();
	x[0].x_int = (int)xret;
    }
    void x_29(xargs *x) const {
	// cellGeometry(int, int)
	QRect xret = this->QGridLayout::cellGeometry((int)x[1].x_int,(int)x[2].x_int);
	x[0].x_voidp = (void*)new QRect(xret);
    }
    void x_30(xargs *x) const {
	// hasHeightForWidth()
	bool xret = this->QGridLayout::hasHeightForWidth();
	x[0].x_bool = (bool)xret;
    }
    void x_31(xargs *x) const {
	// heightForWidth(int)
	int xret = this->QGridLayout::heightForWidth((int)x[1].x_int);
	x[0].x_int = (int)xret;
    }
    void x_32(xargs *x) const {
	// expanding()
	QSizePolicy::ExpandData xret = this->QGridLayout::expanding();
	x[0].x_long = (long)xret;
    }
    void x_33(xargs *x) {
	// invalidate()
	this->QGridLayout::invalidate();
    }
    void x_34(xargs *x) {
	// addItem(QLayoutItem*)
	this->QGridLayout::addItem((QLayoutItem*)x[1].x_voidp);
    }
    void x_35(xargs *x) {
	// addItem(QLayoutItem*, int, int)
	this->QGridLayout::addItem((QLayoutItem*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_36(xargs *x) {
	// addMultiCell(QLayoutItem*, int, int, int, int, int)
	this->QGridLayout::addMultiCell((QLayoutItem*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(int)x[6].x_int);
    }
    void x_37(xargs *x) {
	// addMultiCell(QLayoutItem*, int, int, int, int)
	this->QGridLayout::addMultiCell((QLayoutItem*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_38(xargs *x) {
	// addWidget(QWidget*, int, int, int)
	this->QGridLayout::addWidget((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int);
    }
    void x_39(xargs *x) {
	// addWidget(QWidget*, int, int)
	this->QGridLayout::addWidget((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_40(xargs *x) {
	// addMultiCellWidget(QWidget*, int, int, int, int, int)
	this->QGridLayout::addMultiCellWidget((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(int)x[6].x_int);
    }
    void x_41(xargs *x) {
	// addMultiCellWidget(QWidget*, int, int, int, int)
	this->QGridLayout::addMultiCellWidget((QWidget*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_42(xargs *x) {
	// addLayout(QLayout*, int, int)
	this->QGridLayout::addLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    void x_43(xargs *x) {
	// addMultiCellLayout(QLayout*, int, int, int, int, int)
	this->QGridLayout::addMultiCellLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int,(int)x[6].x_int);
    }
    void x_44(xargs *x) {
	// addMultiCellLayout(QLayout*, int, int, int, int)
	this->QGridLayout::addMultiCellLayout((QLayout*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int,(int)x[4].x_int,(int)x[5].x_int);
    }
    void x_45(xargs *x) {
	// addRowSpacing(int, int)
	this->QGridLayout::addRowSpacing((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_46(xargs *x) {
	// addColSpacing(int, int)
	this->QGridLayout::addColSpacing((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_47(xargs *x) {
	// expand(int, int)
	this->QGridLayout::expand((int)x[1].x_int,(int)x[2].x_int);
    }
    void x_48(xargs *x) {
	// setOrigin(QGridLayout::Corner)
	this->QGridLayout::setOrigin((QGridLayout::Corner)x[1].x_long);
    }
    void x_49(xargs *x) const {
	// origin()
	QGridLayout::Corner xret = this->QGridLayout::origin();
	x[0].x_long = (long)xret;
    }
    void x_50(xargs *x) {
	// iterator()
	QLayoutIterator xret = this->QGridLayout::iterator();
	x[0].x_voidp = (void*)new QLayoutIterator(xret);
    }
    void x_51(xargs *x) {
	// setGeometry(const QRect&)
	this->QGridLayout::setGeometry(*(const QRect *)x[1].x_voidp);
    }
    void x_52(xargs *x) {
	// findWidget(QWidget*, int*, int*)
	bool xret = this->QGridLayout::findWidget((QWidget*)x[1].x_voidp,(int*)x[2].x_voidp,(int*)x[3].x_voidp);
	x[0].x_bool = (bool)xret;
    }
    void x_53(xargs *x) {
	// add(QLayoutItem*, int, int)
	this->QGridLayout::add((QLayoutItem*)x[1].x_voidp,(int)x[2].x_int,(int)x[3].x_int);
    }
    virtual void addItem(QLayoutItem* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 3139, x)) return;
	this->QGridLayout::addItem(x1);
    }
    virtual bool checkConnectArgs(const char* x1, const QObject* x2, const char* x3) {
	xargs x[4];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	x[3].x_voidp = (void*)x3;
	if(call_method((void*)this, 5475, x)) return (bool)x[0].x_bool;
	return this->QObject::checkConnectArgs(x1, x2, x3);
    }
    virtual void childEvent(QChildEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 4109, x)) return;
	this->QLayout::childEvent(x1);
    }
    virtual void connectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5473, x)) return;
	this->QObject::connectNotify(x1);
    }
    virtual void customEvent(QCustomEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5472, x)) return;
	this->QObject::customEvent(x1);
    }
    virtual void disconnectNotify(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5474, x)) return;
	this->QObject::disconnectNotify(x1);
    }
    virtual bool event(QEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5410, x)) return (bool)x[0].x_bool;
	return this->QObject::event(x1);
    }
    virtual bool eventFilter(QObject* x1, QEvent* x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)x2;
	if(call_method((void*)this, 4108, x)) return (bool)x[0].x_bool;
	return this->QLayout::eventFilter(x1, x2);
    }
    virtual QSizePolicy::ExpandData expanding() const {
	xargs x[1];
	if(call_method((void*)this, 3137, x)) return (QSizePolicy::ExpandData)x[0].x_long;
	return this->QGridLayout::expanding();
    }
    virtual QRect geometry() const {
	xargs x[1];
	if(call_method((void*)this, 4090, x)) {
	    QRect *xptr = (QRect *)x[0].x_voidp;
	    QRect xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QLayout::geometry();
    }
    virtual bool hasHeightForWidth() const {
	xargs x[1];
	if(call_method((void*)this, 3135, x)) return (bool)x[0].x_bool;
	return this->QGridLayout::hasHeightForWidth();
    }
    virtual int heightForWidth(int x1) const {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 3136, x)) return (int)x[0].x_int;
	return this->QGridLayout::heightForWidth(x1);
    }
    virtual void insertChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5433, x)) return;
	this->QObject::insertChild(x1);
    }
    virtual void invalidate() {
	xargs x[1];
	if(call_method((void*)this, 3138, x)) return;
	this->QGridLayout::invalidate();
    }
    virtual bool isEmpty() const {
	xargs x[1];
	if(call_method((void*)this, 4099, x)) return (bool)x[0].x_bool;
	return this->QLayout::isEmpty();
    }
    virtual QLayoutIterator iterator() {
	xargs x[1];
	if(call_method((void*)this, 3155, x)) {
	    QLayoutIterator *xptr = (QLayoutIterator *)x[0].x_voidp;
	    QLayoutIterator xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QGridLayout::iterator();
    }
    virtual QLayout* layout() {
	xargs x[1];
	if(call_method((void*)this, 4104, x)) 	return (QLayout*)x[0].x_voidp;
	return this->QLayout::layout();
    }
    virtual QSize maximumSize() const {
	xargs x[1];
	if(call_method((void*)this, 3127, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QGridLayout::maximumSize();
    }
    virtual QSize minimumSize() const {
	xargs x[1];
	if(call_method((void*)this, 3126, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QGridLayout::minimumSize();
    }
    virtual QVariant property(const char* x1) const {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5447, x)) {
	    QVariant *xptr = (QVariant *)x[0].x_voidp;
	    QVariant xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QObject::property(x1);
    }
    virtual void removeChild(QObject* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5434, x)) return;
	this->QObject::removeChild(x1);
    }
    virtual void setAlignment(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 4132, x)) return;
	this->QLayoutItem::setAlignment(x1);
    }
    virtual void setAutoAdd(bool x1) {
	xargs x[2];
	x[1].x_bool = (bool)x1;
	if(call_method((void*)this, 4087, x)) return;
	this->QLayout::setAutoAdd(x1);
    }
    virtual void setColStretch(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 3129, x)) return;
	this->QGridLayout::setColStretch(x1, x2);
    }
    virtual void setGeometry(const QRect& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	if(call_method((void*)this, 3156, x)) return;
	this->QGridLayout::setGeometry(x1);
    }
    virtual void setMargin(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 4076, x)) return;
	this->QLayout::setMargin(x1);
    }
    virtual void setMenuBar(QMenuBar* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 4083, x)) return;
	this->QLayout::setMenuBar(x1);
    }
    virtual void setName(const char* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5416, x)) return;
	this->QObject::setName(x1);
    }
    virtual bool setProperty(const char* x1, const QVariant& x2) {
	xargs x[3];
	x[1].x_voidp = (void*)x1;
	x[2].x_voidp = (void*)&x2;
	if(call_method((void*)this, 5446, x)) return (bool)x[0].x_bool;
	return this->QObject::setProperty(x1, x2);
    }
    virtual void setRowStretch(int x1, int x2) {
	xargs x[3];
	x[1].x_int = (int)x1;
	x[2].x_int = (int)x2;
	if(call_method((void*)this, 3128, x)) return;
	this->QGridLayout::setRowStretch(x1, x2);
    }
    virtual void setSpacing(int x1) {
	xargs x[2];
	x[1].x_int = (int)x1;
	if(call_method((void*)this, 4077, x)) return;
	this->QLayout::setSpacing(x1);
    }
    virtual QSize sizeHint() const {
	xargs x[1];
	if(call_method((void*)this, 3125, x)) {
	    QSize *xptr = (QSize *)x[0].x_voidp;
	    QSize xret(*xptr);
	    delete xptr;
	    return xret;
	}
	return this->QGridLayout::sizeHint();
    }
    virtual QSpacerItem* spacerItem() {
	xargs x[1];
	if(call_method((void*)this, 4130, x)) 	return (QSpacerItem*)x[0].x_voidp;
	return this->QLayoutItem::spacerItem();
    }
    virtual void timerEvent(QTimerEvent* x1) {
	xargs x[2];
	x[1].x_voidp = (void*)x1;
	if(call_method((void*)this, 5470, x)) return;
	this->QObject::timerEvent(x1);
    }
    virtual QWidget* widget() {
	xargs x[1];
	if(call_method((void*)this, 4127, x)) 	return (QWidget*)x[0].x_voidp;
	return this->QLayoutItem::widget();
    }
    ~x_QGridLayout() {}
};
void xcall_QGridLayout(xargs *x, void *s, int xi) {
    x_QGridLayout *xself = (x_QGridLayout*)s;
    switch(xi) {
	case 0: x_QGridLayout::x_0(x);	break;
	case 1: x_QGridLayout::x_1(x);	break;
	case 2: x_QGridLayout::x_2(x);	break;
	case 3: x_QGridLayout::x_3(x);	break;
	case 4: x_QGridLayout::x_4(x);	break;
	case 5: x_QGridLayout::x_5(x);	break;
	case 6: x_QGridLayout::x_6(x);	break;
	case 7: x_QGridLayout::x_7(x);	break;
	case 8: x_QGridLayout::x_8(x);	break;
	case 9: x_QGridLayout::x_9(x);	break;
	case 10: x_QGridLayout::x_10(x);	break;
	case 11: x_QGridLayout::x_11(x);	break;
	case 12: x_QGridLayout::x_12(x);	break;
	case 13: x_QGridLayout::x_13(x);	break;
	case 14: x_QGridLayout::x_14(x);	break;
	case 15: x_QGridLayout::x_15(x);	break;
	case 16: x_QGridLayout::x_16(x);	break;
	case 17: x_QGridLayout::x_17(x);	break;
	case 18: x_QGridLayout::x_18(x);	break;
	case 19: x_QGridLayout::x_19(x);	break;
	case 20: xself->x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
	case 25: xself->x_25(x);	break;
	case 26: xself->x_26(x);	break;
	case 27: xself->x_27(x);	break;
	case 28: xself->x_28(x);	break;
	case 29: xself->x_29(x);	break;
	case 30: xself->x_30(x);	break;
	case 31: xself->x_31(x);	break;
	case 32: xself->x_32(x);	break;
	case 33: xself->x_33(x);	break;
	case 34: xself->x_34(x);	break;
	case 35: xself->x_35(x);	break;
	case 36: xself->x_36(x);	break;
	case 37: xself->x_37(x);	break;
	case 38: xself->x_38(x);	break;
	case 39: xself->x_39(x);	break;
	case 40: xself->x_40(x);	break;
	case 41: xself->x_41(x);	break;
	case 42: xself->x_42(x);	break;
	case 43: xself->x_43(x);	break;
	case 44: xself->x_44(x);	break;
	case 45: xself->x_45(x);	break;
	case 46: xself->x_46(x);	break;
	case 47: xself->x_47(x);	break;
	case 48: xself->x_48(x);	break;
	case 49: xself->x_49(x);	break;
	case 50: xself->x_50(x);	break;
	case 51: xself->x_51(x);	break;
	case 52: xself->x_52(x);	break;
	case 53: xself->x_53(x);	break;
	case 54: delete (QGridLayout*)xself;	break;
    }
}
