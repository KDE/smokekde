//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qpaintdevicemetrics.h>

class x_QPaintDeviceMetrics : public QPaintDeviceMetrics {
public:
    static void x_0(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmWidth;
    }
    static void x_1(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmHeight;
    }
    static void x_2(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmWidthMM;
    }
    static void x_3(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmHeightMM;
    }
    static void x_4(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmNumColors;
    }
    static void x_5(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmDepth;
    }
    static void x_6(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmDpiX;
    }
    static void x_7(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmDpiY;
    }
    static void x_8(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmPhysicalDpiX;
    }
    static void x_9(Smoke::Stack x) {
	x[0].s_long = (long)QPaintDeviceMetrics::PdmPhysicalDpiY;
    }
    static void x_10(Smoke::Stack x) {
	// QPaintDeviceMetrics(const QPaintDevice*)
	x_QPaintDeviceMetrics* xret = new x_QPaintDeviceMetrics((const QPaintDevice*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    x_QPaintDeviceMetrics(const QPaintDevice* x1) : QPaintDeviceMetrics(x1) {
    }
    void x_11(Smoke::Stack x) const {
	// width()
	int xret = this->QPaintDeviceMetrics::width();
	x[0].s_int = (int)xret;
    }
    void x_12(Smoke::Stack x) const {
	// height()
	int xret = this->QPaintDeviceMetrics::height();
	x[0].s_int = (int)xret;
    }
    void x_13(Smoke::Stack x) const {
	// widthMM()
	int xret = this->QPaintDeviceMetrics::widthMM();
	x[0].s_int = (int)xret;
    }
    void x_14(Smoke::Stack x) const {
	// heightMM()
	int xret = this->QPaintDeviceMetrics::heightMM();
	x[0].s_int = (int)xret;
    }
    void x_15(Smoke::Stack x) const {
	// logicalDpiX()
	int xret = this->QPaintDeviceMetrics::logicalDpiX();
	x[0].s_int = (int)xret;
    }
    void x_16(Smoke::Stack x) const {
	// logicalDpiY()
	int xret = this->QPaintDeviceMetrics::logicalDpiY();
	x[0].s_int = (int)xret;
    }
    void x_17(Smoke::Stack x) const {
	// physicalDpiX()
	int xret = this->QPaintDeviceMetrics::physicalDpiX();
	x[0].s_int = (int)xret;
    }
    void x_18(Smoke::Stack x) const {
	// physicalDpiY()
	int xret = this->QPaintDeviceMetrics::physicalDpiY();
	x[0].s_int = (int)xret;
    }
    void x_19(Smoke::Stack x) const {
	// numColors()
	int xret = this->QPaintDeviceMetrics::numColors();
	x[0].s_int = (int)xret;
    }
    void x_20(Smoke::Stack x) const {
	// depth()
	int xret = this->QPaintDeviceMetrics::depth();
	x[0].s_int = (int)xret;
    }
    ~x_QPaintDeviceMetrics() {}
};
void xcall_QPaintDeviceMetrics(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QPaintDeviceMetrics *xself = (x_QPaintDeviceMetrics*)obj;
    switch(xi) {
	case 0: x_QPaintDeviceMetrics::x_0(args);	break;
	case 1: x_QPaintDeviceMetrics::x_1(args);	break;
	case 2: x_QPaintDeviceMetrics::x_2(args);	break;
	case 3: x_QPaintDeviceMetrics::x_3(args);	break;
	case 4: x_QPaintDeviceMetrics::x_4(args);	break;
	case 5: x_QPaintDeviceMetrics::x_5(args);	break;
	case 6: x_QPaintDeviceMetrics::x_6(args);	break;
	case 7: x_QPaintDeviceMetrics::x_7(args);	break;
	case 8: x_QPaintDeviceMetrics::x_8(args);	break;
	case 9: x_QPaintDeviceMetrics::x_9(args);	break;
	case 10: x_QPaintDeviceMetrics::x_10(args);	break;
	case 11: xself->x_11(args);	break;
	case 12: xself->x_12(args);	break;
	case 13: xself->x_13(args);	break;
	case 14: xself->x_14(args);	break;
	case 15: xself->x_15(args);	break;
	case 16: xself->x_16(args);	break;
	case 17: xself->x_17(args);	break;
	case 18: xself->x_18(args);	break;
	case 19: xself->x_19(args);	break;
	case 20: xself->x_20(args);	break;
    }
}
