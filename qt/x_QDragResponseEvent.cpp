//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qevent.h>

class x_QDragResponseEvent : public QDragResponseEvent {
public:
    static void x_0(Smoke::Stack x) {
	// QDragResponseEvent(bool)
	x_QDragResponseEvent* xret = new x_QDragResponseEvent((bool)x[1].s_bool);
	x[0].s_class = (void*)xret;
    }
    x_QDragResponseEvent(bool x1) : QDragResponseEvent(x1) {
    }
    void x_1(Smoke::Stack x) const {
	// dragAccepted()
	bool xret = this->QDragResponseEvent::dragAccepted();
	x[0].s_bool = xret;
    }
    static void x_2(Smoke::Stack x) {
	// QDragResponseEvent(const QDragResponseEvent&)
	x_QDragResponseEvent* xret = new x_QDragResponseEvent(*(const QDragResponseEvent *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QDragResponseEvent(const QDragResponseEvent& x1) : QDragResponseEvent(x1) {
    }
    ~x_QDragResponseEvent() { qt_Smoke->binding->deleted(103, (void*)this); }
};
void xcall_QDragResponseEvent(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QDragResponseEvent *xself = (x_QDragResponseEvent*)obj;
    switch(xi) {
	case 0: x_QDragResponseEvent::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: x_QDragResponseEvent::x_2(args);	break;
	case 3: delete (QDragResponseEvent*)xself;	break;
    }
}
