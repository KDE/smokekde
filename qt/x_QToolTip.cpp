//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qpoint.h>
#include <qpalette.h>
#include <qfont.h>
#include <qstring.h>
#include <qtooltip.h>
#include <qrect.h>

class x_QToolTip : public QToolTip {
public:
    static void x_0(xargs *x) {
	// QToolTip(QWidget*, QToolTipGroup*)
	x_QToolTip* xret = new x_QToolTip((QWidget*)x[1].x_voidp,(QToolTipGroup*)x[2].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QToolTip(QWidget* x1, QToolTipGroup* x2) : QToolTip(x1, x2) {
    }
    static void x_1(xargs *x) {
	// QToolTip(QWidget*)
	x_QToolTip* xret = new x_QToolTip((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)xret;
    }
    x_QToolTip(QWidget* x1) : QToolTip(x1) {
    }
    void x_2(xargs *x) const {
	// parentWidget()
	QWidget* xret = this->QToolTip::parentWidget();
	x[0].x_voidp = (void*)xret;
    }
    void x_3(xargs *x) const {
	// group()
	QToolTipGroup* xret = this->QToolTip::group();
	x[0].x_voidp = (void*)xret;
    }
    static void x_4(xargs *x) {
	// add(QWidget*, const QString&)
	QToolTip::add((QWidget*)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    static void x_5(xargs *x) {
	// add(QWidget*, const QString&, QToolTipGroup*, const QString&)
	QToolTip::add((QWidget*)x[1].x_voidp,*(const QString *)x[2].x_voidp,(QToolTipGroup*)x[3].x_voidp,*(const QString *)x[4].x_voidp);
    }
    static void x_6(xargs *x) {
	// remove(QWidget*)
	QToolTip::remove((QWidget*)x[1].x_voidp);
    }
    static void x_7(xargs *x) {
	// add(QWidget*, const QRect&, const QString&)
	QToolTip::add((QWidget*)x[1].x_voidp,*(const QRect *)x[2].x_voidp,*(const QString *)x[3].x_voidp);
    }
    static void x_8(xargs *x) {
	// add(QWidget*, const QRect&, const QString&, QToolTipGroup*, const QString&)
	QToolTip::add((QWidget*)x[1].x_voidp,*(const QRect *)x[2].x_voidp,*(const QString *)x[3].x_voidp,(QToolTipGroup*)x[4].x_voidp,*(const QString *)x[5].x_voidp);
    }
    static void x_9(xargs *x) {
	// remove(QWidget*, const QRect&)
	QToolTip::remove((QWidget*)x[1].x_voidp,*(const QRect *)x[2].x_voidp);
    }
    static void x_10(xargs *x) {
	// textFor(QWidget*, const QPoint&)
	QString xret = QToolTip::textFor((QWidget*)x[1].x_voidp,*(const QPoint *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    static void x_11(xargs *x) {
	// textFor(QWidget*)
	QString xret = QToolTip::textFor((QWidget*)x[1].x_voidp);
	x[0].x_voidp = (void*)new QString(xret);
    }
    static void x_12(xargs *x) {
	// hide()
	QToolTip::hide();
    }
    static void x_13(xargs *x) {
	// font()
	QFont xret = QToolTip::font();
	x[0].x_voidp = (void*)new QFont(xret);
    }
    static void x_14(xargs *x) {
	// setFont(const QFont&)
	QToolTip::setFont(*(const QFont *)x[1].x_voidp);
    }
    static void x_15(xargs *x) {
	// palette()
	QPalette xret = QToolTip::palette();
	x[0].x_voidp = (void*)new QPalette(xret);
    }
    static void x_16(xargs *x) {
	// setPalette(const QPalette&)
	QToolTip::setPalette(*(const QPalette *)x[1].x_voidp);
    }
    static void x_17(xargs *x) {
	// setEnabled(bool)
	QToolTip::setEnabled((bool)x[1].x_bool);
    }
    static void x_18(xargs *x) {
	// enabled()
	bool xret = QToolTip::enabled();
	x[0].x_bool = (bool)xret;
    }
    static void x_19(xargs *x) {
	// setGloballyEnabled(bool)
	QToolTip::setGloballyEnabled((bool)x[1].x_bool);
    }
    static void x_20(xargs *x) {
	// isGloballyEnabled()
	bool xret = QToolTip::isGloballyEnabled();
	x[0].x_bool = (bool)xret;
    }
    void x_21(xargs *x) {
	// maybeTip(const QPoint&)
	this->QToolTip::maybeTip(*(const QPoint *)x[1].x_voidp);
    }
    void x_22(xargs *x) {
	// tip(const QRect&, const QString&)
	this->QToolTip::tip(*(const QRect *)x[1].x_voidp,*(const QString *)x[2].x_voidp);
    }
    void x_23(xargs *x) {
	// tip(const QRect&, const QString&, const QString&)
	this->QToolTip::tip(*(const QRect *)x[1].x_voidp,*(const QString *)x[2].x_voidp,*(const QString *)x[3].x_voidp);
    }
    void x_24(xargs *x) {
	// clear()
	this->QToolTip::clear();
    }
    virtual void maybeTip(const QPoint& x1) {
	xargs x[2];
	x[1].x_voidp = (void*)&x1;
	call_method_abstract((void*)this, 8981, x);
	return;
	// ABSTRACT
    }
    ~x_QToolTip() {}
};
void xcall_QToolTip(xargs *x, void *s, int xi) {
    x_QToolTip *xself = (x_QToolTip*)s;
    switch(xi) {
	case 0: x_QToolTip::x_0(x);	break;
	case 1: x_QToolTip::x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: x_QToolTip::x_4(x);	break;
	case 5: x_QToolTip::x_5(x);	break;
	case 6: x_QToolTip::x_6(x);	break;
	case 7: x_QToolTip::x_7(x);	break;
	case 8: x_QToolTip::x_8(x);	break;
	case 9: x_QToolTip::x_9(x);	break;
	case 10: x_QToolTip::x_10(x);	break;
	case 11: x_QToolTip::x_11(x);	break;
	case 12: x_QToolTip::x_12(x);	break;
	case 13: x_QToolTip::x_13(x);	break;
	case 14: x_QToolTip::x_14(x);	break;
	case 15: x_QToolTip::x_15(x);	break;
	case 16: x_QToolTip::x_16(x);	break;
	case 17: x_QToolTip::x_17(x);	break;
	case 18: x_QToolTip::x_18(x);	break;
	case 19: x_QToolTip::x_19(x);	break;
	case 20: x_QToolTip::x_20(x);	break;
	case 21: xself->x_21(x);	break;
	case 22: xself->x_22(x);	break;
	case 23: xself->x_23(x);	break;
	case 24: xself->x_24(x);	break;
    }
}
