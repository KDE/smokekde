//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qpoint.h>
#include <qasyncimageio.h>
#include <qrect.h>

class x_QImageConsumer : public QImageConsumer {
public:
    static void x_0(Smoke::Stack x) {
	// QImageConsumer()
	x_QImageConsumer* xret = new x_QImageConsumer();
	x[0].s_class = (void*)xret;
    }
    x_QImageConsumer() : QImageConsumer() {
    }
    static void x_1(Smoke::Stack x) {
	// QImageConsumer(const QImageConsumer&)
	x_QImageConsumer* xret = new x_QImageConsumer(*(const QImageConsumer *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QImageConsumer(const QImageConsumer& x1) : QImageConsumer(x1) {
    }
    virtual void changed(const QRect& x1) {
	Smoke::StackItem x[2];
	x[1].s_class = (void*)&x1;
	qt_Smoke->binding->callMethod(4786, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void end() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(4785, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void frameDone() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(4787, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void frameDone(const QPoint& x1, const QRect& x2) {
	Smoke::StackItem x[3];
	x[1].s_class = (void*)&x1;
	x[2].s_class = (void*)&x2;
	qt_Smoke->binding->callMethod(4788, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void setFramePeriod(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	qt_Smoke->binding->callMethod(4790, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void setLooping(int x1) {
	Smoke::StackItem x[2];
	x[1].s_int = x1;
	qt_Smoke->binding->callMethod(4789, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    virtual void setSize(int x1, int x2) {
	Smoke::StackItem x[3];
	x[1].s_int = x1;
	x[2].s_int = x2;
	qt_Smoke->binding->callMethod(4791, (void*)this, x, true /*pure virtual*/);
	return;
	// ABSTRACT
    }
    ~x_QImageConsumer() { qt_Smoke->binding->deleted(162, (void*)this); }
};
void xcall_QImageConsumer(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QImageConsumer *xself = (x_QImageConsumer*)obj;
    switch(xi) {
	case 0: x_QImageConsumer::x_0(args);	break;
	case 1: x_QImageConsumer::x_1(args);	break;
	case 2: delete (QImageConsumer*)xself;	break;
    }
}
