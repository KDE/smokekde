//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qstring.h>
#include <qlibrary.h>

class x_QLibrary : public QLibrary {
public:
    static void x_0(Smoke::Stack x) {
	// QLibrary(const QString&)
	x_QLibrary* xret = new x_QLibrary(*(const QString *)x[1].s_voidp);
	x[0].s_class = (void*)xret;
    }
    x_QLibrary(const QString& x1) : QLibrary(x1) {
    }
    void x_1(Smoke::Stack x) {
	// resolve(const char*)
	void* xret = this->QLibrary::resolve((const char*)x[1].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    void x_2(Smoke::Stack x) {
	// load()
	bool xret = this->QLibrary::load();
	x[0].s_bool = xret;
    }
    void x_3(Smoke::Stack x) {
	// unload()
	bool xret = this->QLibrary::unload();
	x[0].s_bool = xret;
    }
    void x_4(Smoke::Stack x) const {
	// isLoaded()
	bool xret = this->QLibrary::isLoaded();
	x[0].s_bool = xret;
    }
    void x_5(Smoke::Stack x) const {
	// autoUnload()
	bool xret = this->QLibrary::autoUnload();
	x[0].s_bool = xret;
    }
    void x_6(Smoke::Stack x) {
	// setAutoUnload(bool)
	this->QLibrary::setAutoUnload((bool)x[1].s_bool);
	(void)x[0].s_int; // noop (for compiler warning)
    }
    void x_7(Smoke::Stack x) const {
	// library()
	QString xret = this->QLibrary::library();
	x[0].s_voidp = (void*)new QString(xret);
    }
    static void x_8(Smoke::Stack x) {
	// resolve(const QString&, const char*)
	void* xret = QLibrary::resolve(*(const QString *)x[1].s_voidp,(const char*)x[2].s_voidp);
	x[0].s_voidp = (void*)xret;
    }
    virtual bool unload() {
	Smoke::StackItem x[1];
	if(qt_Smoke->binding->callMethod(5010, (void*)this, x)) return (bool)x[0].s_bool;
	return this->QLibrary::unload();
    }
    ~x_QLibrary() { qt_Smoke->binding->deleted(179, (void*)this); }
};
void xcall_QLibrary(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QLibrary *xself = (x_QLibrary*)obj;
    switch(xi) {
	case 0: x_QLibrary::x_0(args);	break;
	case 1: xself->x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: xself->x_3(args);	break;
	case 4: xself->x_4(args);	break;
	case 5: xself->x_5(args);	break;
	case 6: xself->x_6(args);	break;
	case 7: xself->x_7(args);	break;
	case 8: x_QLibrary::x_8(args);	break;
	case 9: delete (QLibrary*)xself;	break;
    }
}
