//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qasyncio.h>

class x_QAsyncIO : public QAsyncIO {
public:
    void x_0(Smoke::Stack x) {
	// connect(QObject*, const char*)
	this->QAsyncIO::connect((QObject*)x[1].s_class,(const char*)x[2].s_voidp);
	(void)x; // noop (for compiler warning)
    }
    static void x_1(Smoke::Stack x) {
	// QAsyncIO()
	x_QAsyncIO* xret = new x_QAsyncIO();
	x[0].s_class = (void*)xret;
    }
    x_QAsyncIO() : QAsyncIO() {
    }
    void x_2(Smoke::Stack x) {
	// ready()
	this->QAsyncIO::ready();
	(void)x; // noop (for compiler warning)
    }
    ~x_QAsyncIO() { qt_Smoke->binding->deleted(6, (void*)this); }
};
void xcall_QAsyncIO(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QAsyncIO *xself = (x_QAsyncIO*)obj;
    switch(xi) {
	case 0: xself->x_0(args);	break;
	case 1: x_QAsyncIO::x_1(args);	break;
	case 2: xself->x_2(args);	break;
	case 3: delete (QAsyncIO*)xself;	break;
    }
}
