//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qxml.h>

class x_QXmlLocator : public QXmlLocator {
public:
    static void x_0(xargs *x) {
	// QXmlLocator()
	x_QXmlLocator* xret = new x_QXmlLocator();
	x[0].x_voidp = (void*)xret;
    }
    x_QXmlLocator() : QXmlLocator() {
    }
    void x_1(xargs *x) {
	// columnNumber()
	int xret = this->QXmlLocator::columnNumber();
	x[0].x_int = (int)xret;
    }
    void x_2(xargs *x) {
	// lineNumber()
	int xret = this->QXmlLocator::lineNumber();
	x[0].x_int = (int)xret;
    }
    virtual int columnNumber() {
	xargs x[1];
	call_method_abstract((void*)this, 9980, x);
return (int)x[0].x_int;
	// ABSTRACT
    }
    virtual int lineNumber() {
	xargs x[1];
	call_method_abstract((void*)this, 9981, x);
return (int)x[0].x_int;
	// ABSTRACT
    }
    ~x_QXmlLocator() {}
};
void xcall_QXmlLocator(xargs *x, void *s, int xi) {
    x_QXmlLocator *xself = (x_QXmlLocator*)s;
    switch(xi) {
	case 0: x_QXmlLocator::x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: delete (QXmlLocator*)xself;	break;
    }
}
