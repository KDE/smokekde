//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qvfbhdr.h>

class x_QVFbHeader : public QVFbHeader {
public:
    static void x_0(Smoke::Stack x) {
	// QVFbHeader()
	x_QVFbHeader* xret = new x_QVFbHeader();
	x[0].s_class = (void*)xret;
    }
    x_QVFbHeader() : QVFbHeader() {
    }
    static void x_1(Smoke::Stack x) {
	// QVFbHeader(const QVFbHeader&)
	x_QVFbHeader* xret = new x_QVFbHeader(*(const QVFbHeader *)x[1].s_class);
	x[0].s_class = (void*)xret;
    }
    x_QVFbHeader(const QVFbHeader& x1) : QVFbHeader(x1) {
    }
    ~x_QVFbHeader() { qt_Smoke->binding->deleted(351, (void*)this); }
};
void xcall_QVFbHeader(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QVFbHeader *xself = (x_QVFbHeader*)obj;
    switch(xi) {
	case 0: x_QVFbHeader::x_0(args);	break;
	case 1: x_QVFbHeader::x_1(args);	break;
	case 2: delete (QVFbHeader*)xself;	break;
    }
}
