//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke_types.h>
#include <qstring.h>
#include <qcstring.h>
#include <qeuckrcodec.h>

class x_QEucKrCodec {
private:
    QEucKrCodec *xthis;
public:
    x_QEucKrCodec(void *x) : xthis((QEucKrCodec*)x) {}
    void x_0(xargs *x) const {
	// mibEnum()
	int xret = xthis->QEucKrCodec::mibEnum();
	x[0].x_int = (int)xret;
    }
    void x_1(xargs *x) const {
	// name()
	const char* xret = xthis->QEucKrCodec::name();
	x[0].x_voidp = (void*)xret;
    }
    void x_2(xargs *x) const {
	// mimeName()
	const char* xret = xthis->QEucKrCodec::mimeName();
	x[0].x_voidp = (void*)xret;
    }
    void x_3(xargs *x) const {
	// makeDecoder()
	QTextDecoder* xret = xthis->QEucKrCodec::makeDecoder();
	x[0].x_voidp = (void*)xret;
    }
    void x_4(xargs *x) const {
	// fromUnicode(const QString&, int&)
	QCString xret = xthis->QEucKrCodec::fromUnicode(*(const QString *)x[1].x_voidp,*(int *)x[2].x_voidp);
	x[0].x_voidp = (void*)new QCString(xret);
    }
    void x_5(xargs *x) const {
	// toUnicode(const char*, int)
	QString xret = xthis->QEucKrCodec::toUnicode((const char*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_voidp = (void*)new QString(xret);
    }
    void x_6(xargs *x) const {
	// heuristicContentMatch(const char*, int)
	int xret = xthis->QEucKrCodec::heuristicContentMatch((const char*)x[1].x_voidp,(int)x[2].x_int);
	x[0].x_int = (int)xret;
    }
    void x_7(xargs *x) const {
	// heuristicNameMatch(const char*)
	int xret = xthis->QEucKrCodec::heuristicNameMatch((const char*)x[1].x_voidp);
	x[0].x_int = (int)xret;
    }
    ~x_QEucKrCodec() {}
};
void xcall_QEucKrCodec(xargs *x, void *s, int xi) {
    x_QEucKrCodec xtmp(s), *xself = &xtmp;
    switch(xi) {
	case 0: xself->x_0(x);	break;
	case 1: xself->x_1(x);	break;
	case 2: xself->x_2(x);	break;
	case 3: xself->x_3(x);	break;
	case 4: xself->x_4(x);	break;
	case 5: xself->x_5(x);	break;
	case 6: xself->x_6(x);	break;
	case 7: xself->x_7(x);	break;
    }
}
