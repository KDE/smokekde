//Auto-generated by kalyptus. DO NOT EDIT.
#include <smoke.h>
#include <qt_smoke.h>
#include <qnetworkprotocol.h>

class x_QNetworkProtocolFactoryBase : public QNetworkProtocolFactoryBase {
public:
    static void x_0(Smoke::Stack x) {
	// QNetworkProtocolFactoryBase()
	x_QNetworkProtocolFactoryBase* xret = new x_QNetworkProtocolFactoryBase();
	x[0].s_class = (void*)xret;
    }
    x_QNetworkProtocolFactoryBase() : QNetworkProtocolFactoryBase() {
    }
    virtual QNetworkProtocol* createObject() {
	Smoke::StackItem x[1];
	qt_Smoke->binding->callMethod(5395, (void*)this, x, true /*pure virtual*/);
	return (QNetworkProtocol*)x[0].s_class;
	// ABSTRACT
    }
    ~x_QNetworkProtocolFactoryBase() { qt_Smoke->binding->deleted(209, (void*)this); }
};
void xcall_QNetworkProtocolFactoryBase(Smoke::Index xi, void *obj, Smoke::Stack args) {
    x_QNetworkProtocolFactoryBase *xself = (x_QNetworkProtocolFactoryBase*)obj;
    switch(xi) {
	case 0: x_QNetworkProtocolFactoryBase::x_0(args);	break;
	case 1: delete (QNetworkProtocolFactoryBase*)xself;	break;
    }
}
